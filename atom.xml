<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Cansada de ser feliz]]></title>
  <link href="http://blog.vero4ka.info/atom.xml" rel="self"/>
  <link href="http://blog.vero4ka.info/"/>
  <updated>2017-02-27T22:39:41-05:00</updated>
  <id>http://blog.vero4ka.info/</id>
  <author>
    <name><![CDATA[vero4ka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Enrique Peñalosa en Rusia]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/26/enrique-penalosa-en-rusia/"/>
    <updated>2017-02-26T17:31:09-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/26/enrique-penalosa-en-rusia</id>
    <content type="html"><![CDATA[<blockquote><p>Usted hace que la gente, como las ratas, corra debajo de las calles.</p><footer><strong>Enrique Peñalosa</strong></footer></blockquote>


<p><a href="https://en.wikipedia.org/wiki/Vukan_R._Vuchic">Vukan Vuchic</a> - urbanista y profesor de la Universidad de Pennsylvania - en su libro <a href="https://www.goodreads.com/book/show/2737061-transportation-for-livable-cities">Transportation for Livable Cities</a> escribe lo siguiente:</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/transportation_book.jpg" width="200"></p>

<p>&ldquo;En los últimos años en muchas ciudades alrededor del mundo, sobre todo en los países en desarrollo (Brasil, México, China), empezaron a funcionar los sistemas de líneas de autobuses y trolebuses, trazados a lo largo exclusivamente en los carriles separados. Estos sistemas de autobús de tránsito rápido (Bus Rapid Transit en inglés, <a href="https://es.wikipedia.org/wiki/Autob%C3%BAs_de_tr%C3%A1nsito_r%C3%A1pido">BRT</a>) son distintos al tren ligero (light rail transit, <a href="https://en.wikipedia.org/wiki/Light_rail">LRT</a>). Ellos requieren una menor inversión de capital, pero mayores costos operativos causados ​​por un mayor insumo laboral: el conductor de bus del sistema BRT opera con una capacidad nominal <strong>de 80 a 140</strong> asientos de pasajeros, mientras que el LRT está diseñado para una capacidad <strong>de 250 a 750</strong> asientos. Por otro lado, la construcción del BRT toma menos tiempo que la del LRT. Los ejemplos del último sistema en Bogotá (Colombia), Pekín (China) y Ahmedabad (India) demuestran que el tiempo requerido, para que empiecen a funcionar los BRT, en realidad es muy corto. Los indicadores de explotación, como los tiempos de desplazamiento y la regularidad de los buses, en gran medida dependen del trabajo de la policía local, que debe garantizar el  tránsito prioritario. Desafortunadamente, en muchas ciudades, el trabajo policial es extremadamente ineficiente. Además, esos indicadores demenden de los líderes políticos locales o los tribunales que a menudo devuelven las carriles exclusivos del BRT a un estado para uso general: por razones de la "competencia leal&rdquo; permiten que otras busetas y minibuses circulen en ellos. Y así los carriles exclusivos se convierten en los pasillos densamente cargados con el movimiento desorganizado."</p>

<!-- more -->


<p>En el año 2013 Enrique Peñalosa visitó el tercer <a href="https://en.wikipedia.org/wiki/Moscow_Urban_Forum">Foro Urbano de Moscú</a>, donde él abrió un debate público con el alcalde de Moscú <a href="https://en.wikipedia.org/wiki/Sergey_Sobyanin">Serguéi Sobianin</a>. Parece que fue la primera vez que Sobianin fue criticado por ser demasiado indulgente con los automovilistas.</p>

<p>Varios periódicos rusos como <a href="https://www.gazeta.ru/">Gazeta.ru</a> , <a href="http://www.the-village.ru/">The Village</a> y <a href="https://en.wikipedia.org/wiki/Afisha">Afisha.Daily</a> publicaron sus entrevistas con Peñalosa.</p>

<p><strong>Gazeta.ru:</strong> En el foro usted interpretaba el papel del abogado de los peatones criticando con dureza el alcalde de Moscú. ¿Qué haría usted en su posición?</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/perehod.jpg" width="350"></p>

<p><strong>Enrique Peñalosa:</strong> Las autoridades de su ciudad toman muchas decisiones innovadoras. Pero a mi me parece que es más lo que necesita ser mejorado. Hay unos principios generales para resolver los problemas de tráfico en la ciudad. Su ciudad, por ahora, les pertenece a los automovilistas. Incluso en el centro de Moscú puedo ver los pasos peatonales subterraneos. Usted hace que la gente, como las ratas, corra debajo de las calles, para que ellos no perturben los carros. Es una política equivocada. Ahora en todo el mundo la gente entiende que lo único que traen las autopistas urbanas - es daño. Ellas, como un muro, restringen la libertad de las personas. Como los rios venenosos, reducen el valor de las tierras cercanas. La gente no quiere vivir al lado de ellas.</p>

<p><strong>Gazeta.ru:</strong> Esto es comprensible. Pero es imposible imaginar una ciudad sin calles amplias.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/penalosa/metro_map.jpg" width="350"></p>

<p><strong>Enrique Peñalosa:</strong> Deben ser vías urbanas y no calles. ¿Han caminado por los Campos Elíseos en París? Tienen diez carriles, no provocan ningún daño a la ciudad. Es decir, a lo largo de las avenidas debe haber bulevares grandes, aceras, edificios con fachadas bonitas. En este caso ellas reaniman la ciudad en lugar de matarla. Y otra cosa. A pesar de que el metro de Moscú es muy bonito, ¿para qué meter a la gente debajo del suelo?</p>

<p><strong>Gazeta.ru:</strong> Metro - &ldquo;nuestro todo&rdquo;.</p>

<p><strong>Enrique Peñalosa:</strong>  Sí, he oído esta respuesta de muchos. Pero piencen en ello. De hecho, las personas que usan el transporte público tienen que estar bajo la tierra, mientras tanto, los que conducen carros disfrutan el sol. Es necesario construir un sistema de transporte público en superficie, y no por debajo de ella. En muchas ciudades, incluyendo a mi Bogotá, han sido implementados unos buenos sistemas de buses.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/moscow_map.png" width="350"></p>

<p><strong>Gazeta.ru:</strong> Sí, los ciudadanos de Bogotá subieron a los buses de buena gana. Con tantas ganas, que ahora dicen, que el apretón allá es peor que en el metro de Moscú.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/penalosa/probka_metro.jpg" width="200"></p>

<p><strong>Enrique Peñalosa:</strong> ¿No les gustan los buses? Pueden construir un sistema de tranvías. O un metro ligero. Pero la gente debe tener una opción alternativa: ir debajo de la tierra o utilizar el transporte público en la superficie. En Moscú hay una una gran cantidad de áreas sin metro. Y para ir de un punto al otro, lo que uno tiene que hacer es atravezar el centro. Esos puntos dueden estar conectados a través de un sistema de buses.</p>

<p><strong>Gazeta.ru:</strong> En una escala de la ciudad &ldquo;retrasada&rdquo; a &ldquo;progresiva&rdquo;, ¿qué nota pondría para Moscú?</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/tramvai.jpg" width="350"></p>

<p><strong>Enrique Peñalosa:</strong> Creo que algo en el medio. En Moscú hay lugares para la recreacion pública, hay ciclorutas, zonas peatonales, que es muy bueno. Desde el período del comunismo, cuando la tierra pertenecía al Estado, quedaron muchos espacios verdes. Sin embargo, no a todos esos espacion les dan un uso correcto. Están mal distribuidos y, de hecho, se pierden. Pero tienen mucho potencial. (&hellip;) Si usted da una vuelta por el centro de Moscú, lo disfrutará, es probable que sea un paseo interesante. Pero si usted va a un barrio residencial, sentirá como si estuviera castigado: todo está gris, feo, hay pocos cafés y pocas tiendas.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/penalosa/metromost.jpg"></p>

<p><strong>Enrique Peñalosa</strong> (de la entrevista con <strong>The Village</strong>): En Bogotá no hay metro. No pudimos permitir vincular todas las areas de la ciudad con las líneas de metro. Por eso hemos creado un sistema TransMilenio. En principio, se parece más a un metro que a las líneas de autobuses. Pero los autobuses son una forma de desplazamiento más eficiente y menos costosa que el metro. Eso funciona así: se acera un bus - de tres vagones, seis puertas, pos las que las personas salen y entran en unos segundos. Hicimos que los buses fueron mejores que un metro. Algunas las calles en Bogotá eran estrechas, por lo cual fue imposible proporcionar carriles exclusvos para los buses. Luego decidimos abordar el problema de manera diferente y crear una ciudad con cientos de kilómetros de vías solamente para autobuses, ciclistas y peatones.</p>

<div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/F60jcKjs2-M?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>


<p><br></p>

<p style="text-align:center;"> Metro de moscú</p>

<table>
<thead>
<tr>
<th>   </th>
<th> Moscú </th>
<th> Bogotá </th>
</tr>
</thead>
<tbody>
<tr>
<td> Area </td>
<td> <a href="https://en.wikipedia.org/wiki/Moscow">251 100 hectáreas</a> </td>
<td> <a href="https://en.wikipedia.org/wiki/Bogot%C3%A1">158 700 hectáreas</a> </td>
</tr>
<tr>
<td> Area de zonas verdes </td>
<td> <a href="http://www.greenpeace.org/russia/ru/news/2015/07-05-moscow_trees/">36 100 hectáreas</a> </td>
<td> <a href="http://www.eltiempo.com/archivo/documento/CMS-7634408">8 800 hectáreas</a> </td>
</tr>
</tbody>
</table>


<p><br></p>

<p>Enlaces:</p>

<ul>
<li>Entrevista con la revista Afisha.Daily: <a href="https://daily.afisha.ru/archive/gorod/changes/enrike-penyalosa-o-tom-kak-levaya-ideya-pomogaet-gorodam-v-epohu-kapitalizma/">https://daily.afisha.ru/archive/gorod/changes/enrike-penyalosa-o-tom-kak-levaya-ideya-pomogaet-gorodam-v-epohu-kapitalizma/</a></li>
<li>Entrevista el el periódico Gazeta.ru: <a href="https://www.gazeta.ru/comments/2013/12/30_a_5824765.shtml">https://www.gazeta.ru/comments/2013/12/30_a_5824765.shtml</a></li>
<li>Articulo de The Village acerca de la conferencia pública de Enrique Peñalosa en Moscú: <a href="http://www.the-village.ru/village/city/infrastructure/112681-lektsiya-enrike-penyalosa">http://www.the-village.ru/village/city/infrastructure/112681-lektsiya-enrike-penyalosa</a></li>
<li>Articulo de The Village acerca de Enrique Peñalosa: <a href="http://www.the-village.ru/village/city/city/135769-penyalosa">http://www.the-village.ru/village/city/city/135769-penyalosa</a></li>
<li>Conferencia pública de en Enrique Peñalosa Kazan: <a href="https://www.youtube.com/watch?v=FUDjR7TxOWo">https://www.youtube.com/watch?v=FUDjR7TxOWo</a></li>
<li><a href="https://es.wikipedia.org/wiki/New_Urbanism">New Urbanism</a></li>
<li>Enrique Peñalosa: &ldquo;La ciudad ideal&rdquo; - conferencia en Kiev.: <a href="https://www.youtube.com/watch?v=L1smUjcW8zo">https://www.youtube.com/watch?v=L1smUjcW8zo</a></li>
<li>Enrique Peñalosa en Kazan: <a href="https://www.youtube.com/watch?v=siJcN4N9HkM">https://www.youtube.com/watch?v=siJcN4N9HkM</a></li>
</ul>


<div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/watch?v=vrhIcYTH2WE?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[«Vete de aquí, niña»: cómo vivir cuando te ves más joven de lo que eres]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/20/vete-de-aqui/"/>
    <updated>2017-02-20T18:57:13-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/20/vete-de-aqui</id>
    <content type="html"><![CDATA[<p>Traducción <a href="http://www.wonderzine.com/wonderzine/life/experience/219769-forever-young">del articulo</a> de la revista Wonderzine escrito por Dasha Tatarkova.</p>

<p>Hace más o menos un mes escribí en mi twitter, que año tras año me parezco menos a un adulto convencional. Casi no me maquillo, llevo un morral, overol y sombrero de tela, y a menudo no llevo sostén. Tengo veintisiete años, pero incluso los doctores a veces piensan que tengo diecisiete como mucho. El hecho de que me vea más joven de que lo soy, no me molesta – es el resultado de opciones deliberadas. Y si eso me llegara a molestar, cambiaría mi personalidad para ajustarme a los estándares de la sociedad. Me molesta otra cosa: cuando la gente decide que soy todavía una muchacha adolescente, me trate con condescendencia, y a veces incluso de forma grosera. Paradójicamente, así se comportan incluso los profesionales, como los médicos. En nuestra sociedad poseída por el culto a la juventud, precisamente la juventud se vuelve el delito fundamental.</p>

<!-- more -->


<p><img class="center" src="http://blog.vero4ka.info/images/vete-de-aqui.jpg"></p>

<blockquote><p>En nuestra sociedad poseída por el culto a la juventud, precisamente la juventud se vuelve el delito fundamental.</p></blockquote>

<p>Desde cada anuncio publicitario, a las mujeres las inducen a ocultar su edad. A Andie McDowell, que hace publicidad de la crema antiarrugas, le retocan la cara hasta tal punto que se ve más realista su copia del museo Madame Tussaud. Al mismo tiempo, las muchachas de edad indefinida, que está gritando: “JUVENTUD”, nos venden cualquier basura. La juventud es un negocio multimillonario, donde todos le sacan tajada: la industria de la belleza con sus productos milagrosos y los suplementos dietéticos, cirugía plástica con sus procedimientos costosos, y la moda, después de todo. Nos venden la ropa nos hace parecer más jovenes, así como las modelos que la presentan. Al igual que las máscaras milagrosas para tu cara. &ldquo;Come también esos panes integrales con un té saludable.&rdquo;</p>

<p>Al mismo tiempo en la conciencia de las masas, la juventud sigue asociándose si no con la estupidéz, al menos con la ingenuidad. Y los estereotipos numerosos sólo apoyan eso. Las chicas jóvenes deben ser tontas y estar de acuerdo en todo con los hombres. &ldquo;¡Jóvenes!&rdquo; - y suspirar&hellip; - &ldquo;Cuando hayas crecido un poco lo vas a entender.&rdquo; Como se dice: &ldquo;Si jeunesse savait, si vieillesse ponsait&rdquo; (&ldquo;si la juventud supiera y la vejaz pudiera&rdquo;). La gente piensa que si alguien es joven, entonces no tiene experiencia, e incluso no puede razonar de forma lógica. Aunque ambas cosas no necesariamente vienen con los años. Ambos son el resultado de los esfuerzos conscientes. Algunas personas, después de vivir medio siglo, todavía no pueden deshacerse del infantilismo, mientras algunos adolescentes crean empresas exitosas. Tal vez, el odio recíproco se desencadena, y los que ya parecen estar mucho más allá su edad &ldquo;ideal&rdquo;, tratan con la ferocidad a aquellos que todavía &ldquo;caen en la corriente&rdquo;.</p>

<blockquote><p>Todo el sistema estaba basado en el principio de la obediencia y de la antigüedad: encima de ti siempre había alguien, que tenía razón, simplemente por tener un rango superior.</p></blockquote>

<p>En Rusia, como en muchas sociedades conservadoras, hace mucho se estableció una regla &ldquo;obedece a los mayores&rdquo;. Una persona ha pasado por diferentes etapas de la evolución: <a href="https://es.wikipedia.org/wiki/Peque%C3%B1os_de_Octubre">octubrista</a> se convirtía en un <a href="https://es.wikipedia.org/wiki/Movimiento_de_Pioneros">pionero</a>, que luego se convirtía en miembro del <a href="https://es.wikipedia.org/wiki/Komsomol">Komsomol</a>, y luego se unía al <a href="https://es.wikipedia.org/wiki/Partido_Comunista_de_la_Uni%C3%B3n_Sovi%C3%A9tica">partido</a>. Todo el sistema estaba basado en el principio de la obediencia y de la antigüedad: encima de ti siempre había alguien, que tenía razón, simplemente por tener un rango superior. Ese principio todavía está vivo: el lugar de un poder vertical llegó el sistema &ldquo;colegio-universidad-trabajo&rdquo;, que también sobreentendía la autoridad sobre el <em>junior</em>, y sin pasar todas esas etapas no puedes convertirte en un miembro &ldquo;oficial&rdquo; de la sociedad y ser un adulto &ldquo;de verdad&rdquo;. Se sobreentiende que sólo con la experiencia universal se puede ganar el respeto de los demás.</p>

<p>La Unión Soviética se cayó, pero ese principio humillante todavía está con nosotros. ¿Cuántas veces han escuchado el despectivo &ldquo;niña&rdquo;, o &ldquo;cuando crezcas, entenderás&rdquo;, o &ldquo;¡no lo pienses!&rdquo; Yo lo enfrento constantemente. Tengo 27 años: para un adolescente soy una persona con experiencia, para mis padres - todavía una niña, pero por alguna razón todos olvidan que en primer lugar soy una persona, una persona con mis experiencias personales y con mis tonterías. Soy un &ldquo;individuo único&rdquo;, como lo solíamos decir en los estudios de las ciencias sociales. Aunque, todavía no me están tomando en cuenta sólo porque no parezco a un adulto &ldquo;de verdad&rdquo;, olvidando que no soy igual al conjunto de mis características físicas y merezco respeto, independientemente de ellos.</p>

<p>Cualquieres estereotipos son perjudiciales, porque niegan la diversidad del mundo y por lo tanto nos privan de la empatía. ¿Qué usted ve cuando me está mirando? Sus propias ideas sobre el mundo. Nadie puede comprender verdaderamente a un extraño, y para eso usamos estereotipos que simplifican nuestro pensamiento y ayudan hacer conclusiones más rápido. Sin embargo, esto es sólo una herramienta y, como cualquier otra herramienta, tiene que ser utilizada con prudencia, sin sustituir todo el complejo proceso de la comprensión. Cuando, mirando a una persona extraña, vemos un conjunto de estereotipos en lugar de ver a un ser humano, nos privamos de sentir algo por los demás. Todos nosotros es mucho más que una colección de nuestras propiedades, somos unas personas más complejas y multifacéticas.</p>

<p>Mi pelea con los estereotipos empezó incluso antes de mi nacimiento. Parezco mucho a mi mamá, y ella enfrentaba las mismas problemas hace 30 años. Su amiga de la misma edad que ella, no la invitó a su boda, diciendo que mi mamá todavía era “una niña” por tener la nariz chata chistosa. Después de que nací, cuando ibamos al médico, no querían que yo era su hija, en mejor de los casos, pensaban que yo era su hermana menor. En el colegio yo siempre estaba de últimas en la fila de las clases de cultura física (¿para qué nos ordenaban según nuestra altura?), siempre escuchaba chistes acerca de mi apariencia, y después - los comentarios de algunos hombres acerca de mi figura “incorrecta”. Es sintomático y sucede constantemente. Es especialmente difícil enfrentar el mundo de los burócratas en Rusia: desde los ministerios hasta los hospitales. Allá todos se ponen groseros conmigo: las personas que esperan su turno y la gente que me atiende. Pero, cuando se dan cuenta de cuántos años tengo en realidad, caen en una confusión - una buena ilustración de “las expectativas y la realidad”. Y eso es aún más insultante: ¿por qué no merezco que me hablen con un tono de voz tranquilo y respetuoso si tengo N años menos de lo que ustedes han pensado?</p>

<p>Y no estoy sóla con mi problema. Mientras la mitad del mundo quiere estar en los zapatos de  Benjamin Button, los demás sueñan con cosas competamente diferentes. La gente tiene problemas para encontrar trabajo, estableces relaciones (y no sólo románticas) con la gente de su edad y ganar respeto, sólo porque su apariencia no corresponde a los estandares predeterminados. En parte, la actudud hacía los jóvenes es una historía de violencia. No es sólo la violencia poco visible de los comentarios sarcásticos y comentarios burlones, pero también la violencia física. ¿Con qué frecuencia los padres se ven gritando a sus niños pequeños y amenazándolos? Desafortunadamente, todavía no tenemos la cultura de culpar a los padres que usan la violencia física con sus niños, pero todavía está viva la cultura de los castigos. No me molesta que no me vean cómo la sociedad está esperando ver a una mujer de 30 años de edad: mi aspecto - que es el resultado de la biología, que no tengo ganas de cambiar, y de mi elección, lo cual hago de acuerdo a mis preferencias. Lo que me molesta es que en nuestra cultura sigue siendo normal de ser grosero con los niños y, de forma automática, con todos los que se les parezcan. Ni los niños ni los adultos merecen ese trato - ambos son dignos de respeto, simplemente porque están ahí.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[La misma cosa]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/14/la-misma-cosa/"/>
    <updated>2017-02-14T21:14:51-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/14/la-misma-cosa</id>
    <content type="html"><![CDATA[<p>Para los que están convencidos de que inglés es muy diferente a español.</p>

<!-- more -->


<p><strong>Gerund</strong>: <code>cocinando</code>/<code>cooking</code> <br>
<strong>Present Participle</strong>: <code>cocinado</code>/<code>cooking</code> <br>
<strong>Past Participle</strong>: <code>cocinado</code>/<code>cooked</code> <br></p>

<h3>Pretérito indefinido / Past Simple</h3>

<p>He <strong>cooked</strong> yesterday. <br>
Él <strong>cocinó</strong> ayer.</p>

<h3>Pasado Continuo / Past Continuous (Progressive)</h3>

<p>He <strong>was cooking</strong> when the phone rang. <br>
Él <strong>estaba coninando</strong> cuando el teléfono timbró.</p>

<h3>Pretérito pluscuamperfecto / Past Perfect</h3>

<p>El pretérito pluscuamperfecto sirve para expresar la anterioridad de un hecho pasado respecto a otro también pasado.</p>

<p>He <strong>had cooked</strong> the dinner when the phone rang. <br>
Él <strong>había cocinado</strong> la cena cuando el teléfono timbró.</p>

<p>They <strong>had studied</strong> English before they went to London.<br>
<strong>Habían estudiado</strong> inglés antes de irse a Londres.</p>

<h3>Past Perfect Continuous</h3>

<p>I <strong>had been studying</strong>   English for 2 years when I went to London. <br>
<strong>Había estado estudiando</strong> inglés durante 2 años cuando fui a Londres.</p>

<h3>Presente / Present Simple (Indefinite)</h3>

<p>I <strong>cook</strong> fish every Friday. <br>
Yo <strong>cocino</strong> pescado cada viernes.</p>

<h3>Estar + gerundio / Present Continuous (Progressive)</h3>

<p>I <strong>am cooking</strong> now. <br>
<strong>Estoy cocinado</strong> ahora.</p>

<h3>Pretérito perfecto (compuesto) / Present Perfect</h3>

<p><strong>He cocinado</strong> muchos platos. <br>
I <strong>have cooked</strong> many meals.</p>

<p><strong>He hablado</strong> con Peter. <br>
I <strong>have talked</strong> to Peter.</p>

<h3>Pretérito imperfecto / used to + inf.</h3>

<p>I <strong>used to cook</strong> almost everyday. <br>
Yo <strong>cocinaba</strong> casi todos los días. <br>
Yo <strong>solía cocinar</strong> casi todos los días.</p>

<h3>Present Perfect Continuous (Progressive)</h3>

<p>They <strong>have been talking</strong> for three hours. <br>
<strong>Han estado hablando</strong> durante tres horas.</p>

<h3>Futuro Imperfecto / Future Simple</h3>

<p>cocinaré = will cook</p>

<p>I will cook tomorrow. <br>
Mañana cocinaré.</p>

<h3>Futuro Próximo (ir + a) / going to</h3>

<p>ir a = be going to</p>

<p>I <strong>am going to cook</strong>. <br>
<strong>Voy a cocinar</strong>.</p>

<h3>Futuro Perfecto / Future Perfect</h3>

<p>habrá + participio = will have + Past Participle</p>

<p>He <strong>will have fallen</strong> off the bicycle. <br>
Se <strong>habrá caído</strong> de la bicicleta.</p>

<p>I <strong>will  have eaten</strong> before we meet. <br>
<strong>Habré comido</strong> antes de reunirnos.</p>

<h3>El futuro perfecto continuo / Future Perfect Continuous</h3>

<p>habrá estado + gerundio = have been + gerund</p>

<p>Francis <strong>will have been living</strong> in Italy for 4 years by the time he finishes his studies. <br>
Francis <strong>habrá estado viviendo</strong> en Italia durante 4 años, hasta que haya terminado sus estudios.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask con todas las arandelas]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/01/20/flask-con-todas-las-arandelas/"/>
    <updated>2017-01-20T09:18:28-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/01/20/flask-con-todas-las-arandelas</id>
    <content type="html"><![CDATA[<iframe src="//slides.com/vero4ka/flask-con-todas-las-arandelas/embed?style=light" width="576" height="420" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>




<!-- more -->


<h2>Para empezar</h2>

<p>Hay muchos recursos acerca de Flask en los internetes, pero aquí me gustaría mencionar los tres que considero fundamentales.</p>

<p>El primero, por supuesto, es la documentación oficial del framework: <a href="http://flask.pocoo.org/docs/">flask.pocoo.org/docs</a>.</p>

<p>Luego, es muy bueno mirar el libro de Miguel Grinberg: <a href="https://flaskbook.com/">flaskbook.com</a>, en donde se explica de forma bastante detallada cómo hacer una plataforma de publicación de entradas de blog. El código, que sirve como ejemplo en el libro, se puede encontrar en la página de github del autor. Como material complementario al libro, es muy recomendado echar una mirada en el <a href="https://blog.miguelgrinberg.com/">blog personal de Miguel Grinberg</a>, donde el autor cubre los temas más específicos del desarrollo en Flask.</p>

<p>Y ahora, como dijo el astronauta ruso Yuri Gagarin en el momento del despegue de su nave Vostok 1: &ldquo;¡Poyejali!&rdquo;&ldquo; (en ruso: Поехали!; se traduce como «¡Vámonos!»).</p>

<h2>Aplicación básica</h2>

<p>Empezamos con instalar <strong>Flask</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkvirtualenv pycon2017 -p python3
</span><span class='line'>$ pip install Flask</span></code></pre></td></tr></table></div></figure>


<p>Al momento de ésta presentación la última versión del framework es <strong>0.12</strong>.</p>

<p>Ahora creamos nuestra primera aplicación de Flask que va a ser sólo un archivo de Python:</p>

<figure class='code'><figcaption><span>app.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>El decorador <code>route</code> nos ayuda a definir la ruta de URL para la vista llamada <code>hello</code> que simplemente devuelve al navegador la respuesta HTTP 200 con la frase &ldquo;Hello World!&rdquo;.</p>

<p>Corremos la aplicación con el siguiente comando:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ python app.py 
</span><span class='line'> * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)</span></code></pre></td></tr></table></div></figure>


<p>Y ahora lo podemos abrir en nuestro navegador:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/flask/flask_01.png"></p>

<h2>manage.py</h2>

<p>Nosotros, por experiencia con otros frameworks, ya nos acostumbramos a la posibilidad de acceder al shell de Python de nuestra aplicación, o con poder correr comandos, que pertenecen a la aplicación, desde la consola. Para tener todo esto en Flask, instalamos un librería llamada <code>Flask-Script</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install Flask-Script</span></code></pre></td></tr></table></div></figure>


<p>Ahora separamos nuestra aplicación en dos archivos: en el primero vamos iniciar la app de Flask, en la que especificamos la ruta de los archivos estáticos y del archivo de configuración (equivalente de <code>settings.py</code> en Django)</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span>
</span><span class='line'>        <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>y en el segundo vamos a colocar una instancia de <strong>Manager</strong>, que se encaragará de correr la aplicación con <code>python manage.py</code>:</p>

<figure class='code'><figcaption><span>manage.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask.ext.script</span> <span class="kn">import</span> <span class="n">Manager</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">create_app</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">create_app</span><span class="p">()</span>
</span><span class='line'><span class="n">manager</span> <span class="o">=</span> <span class="n">Manager</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">manager</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Corriendo el siguiente comando en la consola</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py runserver -h HOST -p PORT</span></code></pre></td></tr></table></div></figure>


<p>podemos ver la misma aplicación, como en el paso anterior, pero ahora podemos además acceder a shell usando el comando</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py shell
</span><span class='line'>In [1]:</span></code></pre></td></tr></table></div></figure>


<h2>Configuración</h2>

<p>Miremos con más atención la estructura del proyecto:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>├── conf
</span><span class='line'>│   ├── config.py
</span><span class='line'>│   ├── __init__.py
</span><span class='line'>│   └── local_config.py
</span><span class='line'>├── manage.py
</span><span class='line'>└── run.py</span></code></pre></td></tr></table></div></figure>


<p>Ahora tenemos una carpeta con los archivos de configuración - <code>conf</code>:</p>

<figure class='code'><figcaption><span>conf/config.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">if</span> <span class="s">&#39;test&#39;</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">:</span>
</span><span class='line'>        <span class="kn">from</span> <span class="nn">test_config</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="kn">from</span> <span class="nn">local_config</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>Más información acerca de la configuración en Flask se puede encontrar en la página <a href="http://flask.pocoo.org/docs/0.12/config/">flask.pocoo.org/docs/0.12/config/</a>.</p>

<h2>Blueprints</h2>

<p>Cuando nuestro archivo con las vistas crezca, vamos a querer a separar la lógica de nuestra aplicación en módulos diferentes (así como lo tenemos con apps de Django):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>├── conf
</span><span class='line'>│   ├── config.py
</span><span class='line'>│   ├── __init__.py
</span><span class='line'>│   └── local_config.py
</span><span class='line'>├── app1
</span><span class='line'>│   ├── templates
</span><span class='line'>│   └── views.py
</span><span class='line'>├── app2
</span><span class='line'>│   ├── templates
</span><span class='line'>│   └── views.py
</span><span class='line'>├── manage.py
</span><span class='line'>└── run.py</span></code></pre></td></tr></table></div></figure>


<p>En este caso nos ayuda un concepto de crear aplicaciones llamado <strong>Blueprints</strong>. La información completa acerca de Blueprints se puede encontrar en la documentación de Flask: <a href="http://flask.pocoo.org/docs/0.12/blueprints/">flask.pocoo.org/docs/0.12/blueprints/</a>.</p>

<p>Creamos un Blueprint para nuestra aplicación, donde vamos a guardar las vistas relacionadas a nuestros usuarios, por ejemplo:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;users&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">__name__</span><span class="p">,</span>
</span><span class='line'>    <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;Hello Worlds!&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>y lo registramos en el archivo <code>run.py</code>:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span>
</span><span class='line'>        <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">users.views</span> <span class="kn">import</span> <span class="n">users</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">register_blueprint</span><span class="p">(</span><span class="n">users</span><span class="p">,</span> <span class="n">url_prefix</span><span class="o">=</span><span class="s">&#39;/users&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>indicando en el argumento <code>url_prefix</code> del método <code>register_blueprint</code>, que todos los URLs, relacionados con el Blueprint de usuario, van a empezar con el prefijo <code>/users</code>, por ejemplo: <a href="http://localhost:5000/users/">http://localhost:5000/users/</a>.</p>

<h2>URLs</h2>

<p>Miremos cómo se definen los URLs en Flask.</p>

<p>Primero, hay formas diferentes de especificar la ruta: usando el decorador de Blueprint <code>@users.route</code> o el método <code>users.add_url_rule</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;name&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_profile</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, {}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">users_list</span><span class="p">():</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'><span class="n">users</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">,</span> <span class="s">&#39;users_list&#39;</span><span class="p">,</span> <span class="n">users_list</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el primer ejemplo podemos ver, que a la vista se pasa el parámetro de URL <code>name</code>, al que luego accedemos desde el parámetro <code>name</code> de la vista <code>user_profile</code>.</p>

<p>Flaks permite especificar el tipo de parámetro que esperamos. Por ejemplo, para los números enteros, el decorador de escribe así:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, user #{}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>También se puede explícitamente indicar el método HTTP, que acepta la vista.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;/create&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;POST&#39;</span><span class="p">,))</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_create</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>En este caso al tratar de acceder a la vista con el método GET, obtenemos el error 405 (Method not allowed).</p>

<p>Para obtener el URL, que corresponde a la vista usamos el método <code>url_for</code>, al que pasamos el nombre del Blueprint y el nombre de la vista:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">url_for</span>
</span><span class='line'>
</span><span class='line'><span class="n">url_for</span><span class="p">(</span><span class="s">&#39;users.user_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">user_pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Vistas</h2>

<h4>Request</h4>

<p>En Flask el objeto <code>request</code> no se está pasando como parámetro al la vista (como en Django, por ejemplo), sino que es una variable global:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">GET</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">localhost</span><span class="p">:</span><span class="mi">5000</span><span class="o">/</span><span class="n">users</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="mi">1</span><span class="err">?</span><span class="n">q</span><span class="o">=</span><span class="n">foo</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span><span class="s">&#39;users&#39;</span><span class="p">,</span> <span class="n">__name__</span><span class="p">,</span> <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">method</span><span class="p">)</span>  <span class="c"># GET</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="p">)</span>    <span class="c"># ImmutableMultiDict([(&#39;q&#39;, u&#39;foo&#39;)])</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, user #{}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Decoradores</h4>

<p>Aparte de la definición de ruta, la vista en Flask puede tener otros decoradores, por ejemplo:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@login_required</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, user #{}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Plantillas</h2>

<p>Ahora vamos a renderizar una plantilla desde nuestra vista. Para eso vamos a usar el método <code>render_template</code> que recibe como argumentos la ruta hasta la plantilla dentro de la carpeta que especificamos en el parámetro <code>template_folder</code> del Blueprint, y los demás argumentos que son los parámetros de contexto.</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">render_template</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span><span class="s">&#39;users&#39;</span><span class="p">,</span> <span class="n">__name__</span><span class="p">,</span> <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">&#39;users/detail.html&#39;</span><span class="p">,</span> <span class="n">user_id</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>users/templates/users/detail.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Hello, user #{{ user_id }}!<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Jinja2</h3>

<p>Para renderizar plantillas Flask usa el lenguaje <code>Jinja2</code>. Vamos a mirar algunas de sus funcionalidades:</p>

<h4>Variables:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ foo.bar }}
</span><span class='line'>{{ foo[&#39;bar&#39;] }}
</span></code></pre></td></tr></table></div></figure>


<h4>Condicionales:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if user.address %}
</span><span class='line'>    <span class="nt">&lt;p&gt;</span>{{ user.address }}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<h5>Bucles:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% for user in users %}
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>{{ user.name }}<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>{% else %}
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>No hay usuarios<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>{% endfor %}
</span></code></pre></td></tr></table></div></figure>


<h5>Bloques:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% block title %}Usuarios{% endblock %}
</span></code></pre></td></tr></table></div></figure>


<h5>Extender una plantilla base:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% extends &quot;layouts/main.html&quot; %}
</span></code></pre></td></tr></table></div></figure>


<h4>Comentario:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{# Texto #}
</span></code></pre></td></tr></table></div></figure>


<h5>Incluir otra plantilla:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% with rating=user.rating %}
</span><span class='line'>    {% include &#39;includes/_rating.html&#39; %}
</span><span class='line'>{% endwith %}
</span></code></pre></td></tr></table></div></figure>


<h5>Asignar un valor a una variable local:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% set permissions = user.get_permission() %}
</span><span class='line'>{{ permissions }}
</span></code></pre></td></tr></table></div></figure>


<h5>Filtros:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ user.address|default(&#39;N/A&#39;) }}
</span></code></pre></td></tr></table></div></figure>


<h2>Procesadores de contexto</h2>

<p>De forma predeterminada, el contexto de todas las plantillas ya tiene las siguientes variables:</p>

<ul>
<li><code>config</code> - Objeto de configuración (<code>flask.config</code>)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ config.DEBUG }}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>request</code> - Objeto de la petición actual (<code>flask.request</code>)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ request.path }}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>session</code> - Objeto de sesión (<code>flask.session</code>)</li>
<li><code>g</code> - Variables globales</li>
</ul>


<p>Hay una forma de tener <code>context_processors</code> (como en Django) para poder pasar variables a todas las plantillas del proyecto:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">users.views</span> <span class="kn">import</span> <span class="n">users</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">register_blueprint</span><span class="p">(</span><span class="n">users</span><span class="p">,</span> <span class="n">url_prefix</span><span class="o">=</span><span class="s">&#39;/users&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@app.context_processor</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">constants_processor</span><span class="p">():</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;say_hello&#39;</span><span class="p">:</span> <span class="s">&#39;Hola&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora podemos acceder a la variable <code>say_hello</code> desde todas las plantillas sin tener que pasarla cada vez explícitamente:</p>

<figure class='code'><figcaption><span>users/templates/users/detail.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>{{ say_hello }}, user #{{ user_id }}!<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Modelos</h2>

<h3>SQLAlchemy</h3>

<p>Hay dos librerías que nos permiten trabajar con modelos y hacer peticiones SQL desde Flask.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">SQLAlchemy</span>
</span><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">SQLAlchemy</span>
</span></code></pre></td></tr></table></div></figure>


<p>Una es <code>SQLAlchemy</code> y la otra es su extensión para Flask - <code>Flask-SQLAlchemy</code>, que viene con algunas funcionalidades adicionales y útiles en el desarrollo web, por ejemplo, el método <code>first_or_404()</code> para obtener el primer elemento del query o error HTTP 404 si no existe, o el método <code>paginate()</code> para realizar paginación sobre los objetos de <code>BaseQuery</code>.</p>

<p>Ahora incluimos <code>SQLAlchemy</code> como una aplicación externa de nuestro proyecto. Primero creamos una variable <code>db</code> para que el import no se rompa cuando la aplicación todavía no se ha inicializado, y en <code>create_app</code> cuando inicializamos la aplicación: <code>db.init_app(app)</code>.</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_sqlalchemy</span> <span class="kn">import</span> <span class="n">SQLAlchemy</span>
</span><span class='line'>
</span><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="n">SQLAlchemy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">init_app</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el archivo de configuración colocamos la ruta hacia nuestra base de datos.</p>

<figure class='code'><figcaption><span>conf/config.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">SQLALCHEMY_DATABASE_URI</span> <span class="o">=</span> <span class="s">&#39;sqlite:////tmp/test.db&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora podemos crear los modelos. Aquí en el ejemplo se puede ver cómo definir modelos, columnas de tipos diferentes y crear llaves foráneas</p>

<figure class='code'><figcaption><span>users/models.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;users&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">username</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">80</span><span class="p">),</span> <span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">email</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">120</span><span class="p">),</span> <span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">city_id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">u&#39;cities.id&#39;</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">created_at</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">DateTime</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="n">now</span><span class="p">())</span>
</span><span class='line'>    <span class="n">updated_at</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">DateTime</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="n">now</span><span class="p">(),</span>
</span><span class='line'>                        <span class="n">onupdate</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="n">now</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&#39;&lt;Usuario </span><span class="si">%r</span><span class="s">&gt;&#39;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">username</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">City</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;cities&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">255</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">users</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">relationship</span><span class="p">(</span><span class="s">&#39;User&#39;</span><span class="p">,</span> <span class="n">backref</span><span class="o">=</span><span class="s">&#39;city&#39;</span><span class="p">,</span> <span class="n">lazy</span><span class="o">=</span><span class="s">&#39;dynamic&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>CRUD</h3>

<p>Miramos los métodos de CRUD básicos que nos ofrece el ORM de SQLAlchemy.</p>

<h5>Crear</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="p">(</span><span class="n">email</span><span class="o">=</span><span class="s">&#39;john@example.com&#39;</span><span class="p">,</span> <span class="n">username</span><span class="o">=</span><span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Obtener todos los usuarios</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>  <span class="c"># [&lt;Usuario john&#39;&gt;, &lt;Usuario u&#39;admin&#39;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Obtener el primer usuario</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">john</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">first</span><span class="p">()</span>  <span class="c"># &lt;Usuario &#39;john&#39;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Filtrar usuarios y ordenar</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="s">&#39;john&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span>
</span><span class='line'>    <span class="n">User</span><span class="o">.</span><span class="n">created_at</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">()</span> <span class="o">-</span> <span class="n">datetime</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">desc</span><span class="p">())</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Borrar</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>BaseQuery</code> no tiene método <code>save()</code>, sino todos los cambios que hacemos a objetos de modelos se agregan a la sesión. Como la sesión sólo vive durante la petición, para que nuestos cambios sean enviados a la base de datos, hace falta llamar el método <code>db.session.commit()</code>.</p>

<h2>Formularios</h2>

<p>Existen varias librerías de Python que nos permiten trabajar con formularios. En este ejemplo vamos a mirar una llamada <code>Flask-WTF</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">WTF</span>
</span><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Bootstrap</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vamos a usarla junto con una librería complementaria - <code>Flask-Bootstrap</code> - que lo único que hace es generar el código de HTML del formulario con la estructura y las clases de <a href="http://getbootstrap.com/2.3.2/">Twitter Bootstrap</a> (lo mismo que hace <code>django-crispy-forms</code>).</p>

<figure class='code'><figcaption><span>users/forms.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">wtforms</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask_wtf</span> <span class="kn">import</span> <span class="n">Form</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">UserForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>    <span class="n">email</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">(</span>
</span><span class='line'>        <span class="n">validators</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>            <span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">Email</span><span class="p">(),</span>
</span><span class='line'>            <span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">DataRequired</span><span class="p">(),</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>    <span class="n">username</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">(</span>
</span><span class='line'>        <span class="n">validators</span><span class="o">=</span><span class="p">[</span><span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">DataRequired</span><span class="p">()],</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>    <span class="n">submit</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Save&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora podemos renderizar el formulario en nuestra plantilla:</p>

<figure class='code'><figcaption><span>users/templates/users/form.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% extends &quot;layouts/main_layout.html&quot; %}
</span><span class='line'>{% import &quot;bootstrap/wtf.html&quot; as wtf %}
</span><span class='line'>
</span><span class='line'>{% block content %}
</span><span class='line'>  {{ wtf.quick_form(form) }}
</span><span class='line'>{% endblock %}
</span></code></pre></td></tr></table></div></figure>


<p>Este código nos va a renderizar el formulario completo con todos los campos especificados. Si queremos renderizar sólo algunos campos específicos, podemos escribirlo de la siguiente forma:</p>

<figure class='code'><figcaption><span>users/templates/users/form.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ wtf.form_field(form.email) }}
</span><span class='line'>{{ wtf.form_field(form.submit) }}
</span></code></pre></td></tr></table></div></figure>


<p>Lo único que hace falta es escribir una vista que reciba los datos del formulario y los guarde en la base de datos, por ejemplo.</p>

<p>El diccionario con los valores para cada campo se encuentra en la variable <code>request.form</code>. Si el request tiene método POST, validamos el formulario <code>form.validate()</code>, y en el caso exitoso, pasamos los valores del formulario a nuestro objeto: <code>form.populate_obj(user)</code>.</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/update/&lt;int:pk&gt;/&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;GET&#39;</span><span class="p">,</span> <span class="s">&#39;POST&#39;</span><span class="p">))</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_update</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span><span class="o">.</span><span class="n">first_or_404</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">form</span> <span class="o">=</span> <span class="n">UserForm</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&#39;POST&#39;</span> <span class="ow">and</span> <span class="n">form</span><span class="o">.</span><span class="n">validate</span><span class="p">():</span>
</span><span class='line'>        <span class="n">form</span><span class="o">.</span><span class="n">populate_obj</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">flash</span><span class="p">(</span><span class="s">&#39;Usuario fue editado exitosamente&#39;</span><span class="p">,</span> <span class="s">&#39;success&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="n">url_for</span><span class="p">(</span><span class="s">&#39;users.user_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span>
</span><span class='line'>        <span class="s">&#39;users/form.html&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">form</span><span class="o">=</span><span class="n">form</span><span class="p">,</span>
</span><span class='line'>    <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Autenticación</h2>

<p>Para agregar autenticación al proyecto de Flask, normalmente usan las dos siguientes librerías:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Login</span>
</span><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">OAuth</span>
</span></code></pre></td></tr></table></div></figure>


<p>La primera tiene toda la funcionalidad de ingreso, salida de usuario. La podemos instalar de la misma forma, que hicimos con SQLAlchemy hace poco:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_login</span> <span class="kn">import</span> <span class="n">LoginManager</span>
</span><span class='line'>
</span><span class='line'><span class="n">login_manager</span> <span class="o">=</span> <span class="n">LoginManager</span><span class="p">()</span>
</span><span class='line'><span class="n">login_manager</span><span class="o">.</span><span class="n">login_view</span> <span class="o">=</span> <span class="s">&#39;users.login&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">permanent_session_lifetime</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">365</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">login_manager</span><span class="o">.</span><span class="n">init_app</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>En <code>login_manager.login_view</code> especificamos qué vista corresponde al ingreso (login), y en <code>permanent_session_lifetime</code>  se puede indicar el tiempo en el qué durará activa la sesión.</p>

<p>El modelo que vamos a usar para usuarios debe heredar de <code>UserMixin</code> de <code>flask_logins</code></p>

<figure class='code'><figcaption><span>users/models.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_login</span> <span class="kn">import</span> <span class="n">UserMixin</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">,</span> <span class="n">UserMixin</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;users&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora usando la otra librería - <code>Flask-OAuth</code> - podemos hacer una vista para que nuestros usuarios puedan ingresar desde su cuenta de Google, por ejemplo:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/login&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">login</span><span class="p">():</span>
</span><span class='line'>    <span class="n">callback</span> <span class="o">=</span> <span class="n">url_for</span><span class="p">(</span><span class="s">&#39;users.authorized&#39;</span><span class="p">,</span> <span class="n">_external</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">google</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="n">callback</span><span class="o">=</span><span class="n">callback</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cuando el usuario ya está autenticado, en cualquier punto de nuestra aplicación podemos preguntar por el objeto correspondiente:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_login</span> <span class="kn">import</span> <span class="n">current_user</span>
</span></code></pre></td></tr></table></div></figure>


<p>En la siguiente dirección se puede encontrar más información acerca de cómo configurar los tokens de autenticación Google: <a href="https://pythonhosted.org/Flask-OAuth/">pythonhosted.org/Flask-OAuth/</a>.</p>

<h2>Múltiples idiomas</h2>

<p>Si queremos tener soporte de múltiples idiomas, tendremos que instalar otra librería:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Babel</span>
</span></code></pre></td></tr></table></div></figure>


<p>Miremos qué comandos nos ofrece:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Extraer los textos para traducción </span>
</span><span class='line'><span class="c"># (se corre sólo una vez al principio)</span>
</span><span class='line'><span class="nv">$ </span>pybabel extract -F babel.cfg -o messages.pot .
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Generar un catálogo para español</span>
</span><span class='line'><span class="nv">$ </span>pybabel init -i messages.pot -d translations -l es
</span><span class='line'>
</span><span class='line'><span class="c"># Se crea el directorio translations/es</span>
</span><span class='line'><span class="c"># Por dentro hay otro directorio llamado LC_MESSAGES que tiene  </span>
</span><span class='line'><span class="c"># un archivo messages.po. </span>
</span><span class='line'>
</span><span class='line'><span class="c"># Después de traducir los textos y guardarlos en messages.po,</span>
</span><span class='line'><span class="c"># compilamos el archivo y publicamos los textos:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>pybabel compile -d translations
</span><span class='line'>
</span><span class='line'><span class="c"># Para actualizar las traducciones a diario:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>pybabel extract -F babel.cfg -o messages.pot .
</span><span class='line'><span class="nv">$ </span>pybabel update -i messages.pot -d translations
</span></code></pre></td></tr></table></div></figure>


<p>Si queremos traducir cadenas de texto dentro del código de Python, habrá que usar la siguiente sintaxis:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_babel</span> <span class="kn">import</span> <span class="n">gettext</span> <span class="k">as</span> <span class="n">_</span>
</span><span class='line'>
</span><span class='line'><span class="n">_</span><span class="p">(</span><span class="s">&#39;Invalid authentication token&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y en plantillas se ve muy parecido:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">title=</span><span class="s">&quot;{{ _(&#39;Help&#39;) }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">&quot;fa fa-question&quot;</span><span class="nt">&gt;&lt;/i&gt;</span>
</span><span class='line'><span class="nt">&lt;/button&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mensajes</h2>

<p>Los que están familiarizados con el framework Django, seguramente recuerdan que Django tiene un procesador de contexto <code>messages</code> que nos permite mandar mensajes a las plantillas desde el código Python:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">messages</span>
</span><span class='line'>
</span><span class='line'><span class="n">messages</span><span class="o">.</span><span class="n">add_message</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">messages</span><span class="o">.</span><span class="n">INFO</span><span class="p">,</span> <span class="s">&#39;Hello world.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>En Flask es muy parecido, sólo que esos mensajes se llaman <code>flash</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">flash</span>
</span><span class='line'>
</span><span class='line'><span class="n">flash</span><span class="p">(</span><span class="s">&#39;Hello world.&#39;</span><span class="p">,</span> <span class="s">&#39;success&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>y para consultarlos dentro de la plantilla llamamos el método <code>get_flashed_messages</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% for category, message in get_flashed_messages(with_categories=true) %}
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;alert alert-{{ category|replace(&#39;message&#39;, &#39;info&#39;) }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">class=</span><span class="s">&quot;close&quot;</span> <span class="na">data-dismiss=</span><span class="s">&quot;alert&quot;</span><span class="nt">&gt;</span>×<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>  {{ message }}
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>{% endfor %}
</span></code></pre></td></tr></table></div></figure>


<h2>Caché</h2>

<p>Y para terminar la presentación, vamos a meter todo en caché #comonosgusta:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Cache</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya conocemos cómo instalar las aplicaciones externas en Flask, pero repasémoslo:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_cache</span> <span class="kn">import</span> <span class="n">Cache</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">cache</span> <span class="o">=</span> <span class="n">Cache</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cache</span><span class="o">.</span><span class="n">init_app</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora sí, vamos con toda&hellip; ponemos en caché una vista completa:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">cache</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/list&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@cache.cached</span><span class="p">(</span><span class="n">timeout</span><span class="o">=</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="p">,</span> <span class="n">key_prefix</span><span class="o">=</span><span class="s">&#39;user_list&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_list</span><span class="p">():</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>y luego un fragmento de html:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% cache 60*60, &#39;dashboard_menu_user&#39; + current_user.id|string %}
</span><span class='line'>  {% include &#39;layouts/_menu.html&#39; %}
</span><span class='line'>{% endcache %}
</span></code></pre></td></tr></table></div></figure>


<h2>pip freeze</h2>

<p>Y ahora vamos resumir qué librerías hemos instalado y cuales otras nos podrían ser útiles en el futuro:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Framework
</span><span class='line'>Flask==0.11
</span><span class='line'>
</span><span class='line'># Libs
</span><span class='line'>celery==3.1.20
</span><span class='line'>coverage==4.0.3
</span><span class='line'>factory-boy==2.6.1
</span><span class='line'>SQLAlchemy==1.0.12
</span><span class='line'>SQLAlchemy-Utils==0.31.6
</span><span class='line'>
</span><span class='line'># Flask libs
</span><span class='line'>Flask-And-Redis==0.6
</span><span class='line'>Flask-Babel==0.9               # Múltiples idiomas y zonas horarias
</span><span class='line'>Flask-Bootstrap==3.3.5.7       # ~ django-crispy-forms para Bootstrap
</span><span class='line'>Flask-Cache==0.13.1
</span><span class='line'>Flask-DebugToolbar==0.10.0     # En Django: django-debug-toolbar
</span><span class='line'>Flask-fillin==0.2              # Diligenciar formularios en pruebas
</span><span class='line'>Flask-Login==0.3.2
</span><span class='line'>Flask-Migrate==1.8.0
</span><span class='line'>Flask-Moment==0.5.1            # Integración con moment.js
</span><span class='line'>Flask-OAuth==0.12              # ~ python-social-auth
</span><span class='line'>Flask-Script==2.0.5            # manage.py, shell
</span><span class='line'>Flask-SQLAlchemy==2.1
</span><span class='line'>Flask-WTF==0.12                # Formularios con protección CSRF
</span><span class='line'>WTForms-Alchemy==0.15.0        # Para crear formularios basados en modelos
</span><span class='line'>WTForms-Components==0.10.0     # Campos adicionales para los formularios de Flask</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://blog.vero4ka.info/images/flask/nerd-dad.jpg"></p>

<p>Gracias por su atención y a <a href="https://tappsi.co/">Tappsi</a> por el apoyo.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/flask/tappsi_logo.svg" width="100"></p>

<p>Estamos contratando <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#58;&#x6a;&#x6f;&#98;&#x73;&#64;&#x74;&#97;&#112;&#112;&#115;&#x69;&#x2e;&#99;&#111;">&#106;&#111;&#x62;&#x73;&#x40;&#x74;&#x61;&#112;&#112;&#x73;&#x69;&#x2e;&#99;&#111;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo desplegar un proyecto de Django con uWSGI + nginx + supervisor]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/01/16/como-desplegar-un-proyecto-de-django-con-uwsgi-plus-nginx-plus-supervisor/"/>
    <updated>2017-01-16T17:39:09-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/01/16/como-desplegar-un-proyecto-de-django-con-uwsgi-plus-nginx-plus-supervisor</id>
    <content type="html"><![CDATA[<p>Suponemos que tenemos <a href="https://github.com/vero4karu/sitp_scraper">un proyecto</a> de Django y queremos desplegarlo en un servidor con un sistema operativo Linux.</p>

<p>La idea es que nuestro servidor web va a usar una interfaz (WSGI) para &ldquo;hablar&rdquo; con nuestra aplicación de Django. Esa interfaz va a correr la aplicación, pasarle las peticiones de usuario y devolver la respuesta. WSGI (Web Server Gateway Interface) es un estándar y uWSGI es una de sus implementaciones que vamos a usar:</p>

<pre><code>Usuario &lt;-&gt; Servidow web &lt;-&gt; Socket &lt;-&gt; uWSGI &lt;-&gt; Django
</code></pre>

<!-- more -->


<p>Decimos que el código del proyecto está en la carpeta <code>/home/deploy/sitp_scraper</code>. Primero creamos el entorno virtual e instalamos las librerías de Python proyecto (en éste ejemplo usamos <a href="https://virtualenvwrapper.readthedocs.io/en/latest/">virtualenvwrapper</a>):</p>

<pre><code>mkvirtualenv stip_scraper
pip install -r requitements.txt
</code></pre>

<p>Instalamos uWSGI:</p>

<pre><code>pip install uwsgi
</code></pre>

<p>Verificamos si podemos correr nuestro proyecto si problema:</p>

<pre><code>./manage.py runserver 0.0.0.0:8000
</code></pre>

<p>Ahora probamos correrlo usando uWSGI:</p>

<pre><code>uwsgi --http :8000 --module stip_scraper.wsgi
</code></pre>

<p>Instalamos <a href="https://nginx.org/en/">nginx</a>:</p>

<pre><code>sudo apt-get install nginx
sudo /etc/init.d/nginx start 
</code></pre>

<p>Si al visitar <code>nuestroservidor.com:80</code> vemos el mensaje &ldquo;Welcome to nginx&rdquo;, podemos concluir que nginx funciona de la forma correcta.</p>

<p>Configuramos nginx <code>sitp_scraper_nginx.conf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">upstream</span> <span class="s">django</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">server</span> <span class="s">unix:///tmp/sitp_scraper.sock</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">listen</span> <span class="s">[::]:80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">server_name</span>  <span class="s">nuestroservidor.com</span><span class="p">;</span>  <span class="c1"># Nuestro dominio o dirección IP</span>
</span><span class='line'>    <span class="kn">charset</span>      <span class="s">utf-8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">client_max_body_size</span> <span class="s">10M</span><span class="p">;</span>  <span class="c1"># Tamaño máximo de archivos que podrémos subir al servidor</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/media</span>  <span class="p">{</span>
</span><span class='line'>        <span class="c1"># MEDIA_ROOT de nuestro proyecto de Django</span>
</span><span class='line'>        <span class="kn">alias</span> <span class="s">/home/deploy/sitp_scraper/media</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/static</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1"># STATIC_ROOT de nuestro proyecto de Django</span>
</span><span class='line'>        <span class="kn">alias</span> <span class="s">/home/deploy/sitp_scraper/static</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">uwsgi_pass</span>  <span class="s">django</span><span class="p">;</span>
</span><span class='line'>        <span class="kn">include</span>     <span class="s">/home/deploy/sitp_scraper/uwsgi_params</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>El archivo <code>uwsgi_params</code> se puede descargar aquí: <a href="https://github.com/nginx/nginx/blob/master/conf/uwsgi_params">github.com/nginx/nginx/blob/master/conf/uwsgi_params</a></p>

<p>Creamos en la carpeta <code>/etc/nginx/sites-enabled</code> un enlace hacía nuestra configuración para que nginx pueda verla:</p>

<pre><code>sudo ln -s ~/path/to/your/sitp_scraper_nginx.conf /etc/nginx/sites-enabled/
</code></pre>

<p>Verificamos si nuestra configuración está bien:</p>

<pre><code>nginx -t
</code></pre>

<p>y reiniciamos nginx:</p>

<pre><code>sudo /etc/init.d/nginx restart
</code></pre>

<p>Ahora creamos un archivo <code>sitp_scraper_uwsgi.ini</code> para guardar las opciones que vamos a pasar a uWSGI:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">[uwsgi]</span>
</span><span class='line'><span class="c1"># Django-related settings</span>
</span><span class='line'><span class="s">chdir</span>           <span class="p">=</span> <span class="s">/home/deploy/sitp_scraper</span>
</span><span class='line'><span class="s">module</span>          <span class="p">=</span> <span class="s">sitp_scraper.wsgi</span>
</span><span class='line'><span class="s">home</span>            <span class="p">=</span> <span class="s">/home/deploy/.virtualenvs/sitp_scraper</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Process-related settings</span>
</span><span class='line'><span class="s">master</span>          <span class="p">=</span> <span class="s">true</span>
</span><span class='line'><span class="s">processes</span>       <span class="p">=</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># The socket (use the full path to be safe)</span>
</span><span class='line'><span class="s">socket</span>          <span class="p">=</span> <span class="s">/tmp/sitp_scraper.sock</span>
</span><span class='line'><span class="s">chmod-socket</span>    <span class="p">=</span> <span class="mi">664</span>
</span><span class='line'><span class="s">uid</span>             <span class="p">=</span> <span class="s">www-data</span>
</span><span class='line'><span class="s">gid</span>             <span class="p">=</span> <span class="s">www-data</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Clear environment on exit</span>
</span><span class='line'><span class="s">vacuum</span>          <span class="p">=</span> <span class="s">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Agregamos nuestro usuario de Linux al grupo <code>www-data</code> (para no tener problemas con permisos) y verificamos que todo funcione bien:</p>

<pre><code>uwsgi --ini sitp_scraper_uwsgi.ini
</code></pre>

<p>Podemos ver que se creó un archvo <code>/tmp/sitp_scraper.sock</code>:</p>

<pre><code>ll /tmp/sitp_scraper.sock
srw-rw-r-- 1 www-data www-data 0 Jan 15 20:46 /tmp/sitp_scraper.sock
</code></pre>

<p>Ahora instalamos supervisor:</p>

<pre><code>apt-get install supervisor
service supervisor start
</code></pre>

<p>y creamos un archivo de configuración <code>/etc/supervisor/conf.d/sitp_scraper.conf</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">[program:uwsgi]</span>
</span><span class='line'><span class="s">user</span>            <span class="p">=</span> <span class="s">www-data</span>
</span><span class='line'><span class="s">command</span> <span class="p">=</span> <span class="s">/home/deploy/.virtualenvs/sitp_scraper/bin/uwsgi</span> <span class="s">--ini=/home/deploy/sitp_scraper/sitp_scraper_uwsgi.ini</span>
</span><span class='line'><span class="s">autostart</span>       <span class="p">=</span> <span class="s">true</span>
</span><span class='line'><span class="s">autorestart</span>     <span class="p">=</span> <span class="s">true</span>
</span><span class='line'><span class="s">stderr_logfile</span>  <span class="p">=</span> <span class="s">/tmp/uwsgi_err.log</span>
</span><span class='line'><span class="s">stdout_logfile</span>  <span class="p">=</span> <span class="s">/tmp/uwsgi.log</span>
</span><span class='line'><span class="s">stopsignal=INT</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reiniciamos supervisor:</p>

<pre><code>$ supervisorctl  
uwsgi                            RUNNING   pid 2762, uptime 1 day, 2:39:40
supervisor&gt; restart uwsgi
</code></pre>

<p>Voilà: <code>nuestroservidor.com:80</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[El programa escolar de literatura en Rusia]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/01/04/el-programa-escolar-de-literatura-en-rusia/"/>
    <updated>2017-01-04T18:50:49-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/01/04/el-programa-escolar-de-literatura-en-rusia</id>
    <content type="html"><![CDATA[<p>Según los estándares del ministerio de educación los estudiantes de colegio
rusos deben leer&hellip;</p>

<h2>Literatura rusa</h2>

<h3>Folklore</h3>

<ul>
<li>Folklore ruso. Cuentos de hadas y poémas épicos

<ul>
<li><a href="https://es.wikipedia.org/wiki/Ilya_Muromets">Ilya Muromets</a> y caballeros</li>
<li>Sadkó («Садко»)</li>
<li>Ilya Muromets y Nightingale el ladrón («Илья Муромец и Соловей разбойник»)</li>
</ul>
</li>
<li>Mito de los pueblos eslavos (Мифы древних славян)</li>
</ul>


<h3>Literatura rusa antigua de los siglos XI - XVII</h3>

<p><img class="right" src="http://blog.vero4ka.info/images/Povest_vremennyh_let.jpeg" width="150" title="'Crónica de Néstor'" ></p>

<ul>
<li><a href="https://es.wikipedia.org/wiki/Cantar_de_las_huestes_de_%C3%8Dgor">Cantar de las huestes de Ígor</a> («Слово о полку Игореве»)</li>
<li><a href="https://es.wikipedia.org/wiki/Cr%C3%B3nica_de_N%C3%A9stor">Crónica de Néstor</a> («Повесть временных лет»)</li>
</ul>


<!-- more -->


<h3>Literatura rusa del siglo XVIII</h3>

<ul>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Lomon%C3%B3sov">Mijaíl Lomonósov</a> (М. В. Ломоносов)

<ul>
<li>«Ода на день восшествия на престол Елисаветы Петровны»</li>
<li>«Вечернее размышление о Божием величестве при случае великого северного сияния»</li>
<li>«Разговор с Анакреонтом»</li>
<li>«Случились вместе два астронома в пиру»</li>
<li>«К статуе Петра Великого»</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Gavrila_Derzhavin">Gavrila Derzhavin</a> (Г. Р. Державин)

<ul>
<li>«Властителям и судиям»</li>
<li>«Снигирь»</li>
<li>«Признание»</li>
<li>«На птичку»</li>
<li><a href="http://max.mmlc.northwestern.edu/mdenner/Demo/texts/monument_derzhav.htm">&ldquo;Monument&rdquo;</a> «Памятник»</li>
<li>«Река времён в своём стремленьи»
<img class="right" src="http://blog.vero4ka.info/images/DenisFonvizin.jpg" width="150" title="'Denís Fonvizin'" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Den%C3%ADs_Fonvizin">Denís Fonvizin</a> (Д. И. Фонвизин)

<ul>
<li>&ldquo;The Minor&rdquo; (Комедия «Недоросль»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Rad%C3%ADshchev">Aleksandr Radíshchev</a> (А. Н. Радищев)

<ul>
<li>&ldquo;Viaje de San Petersburgo a Moscú&rdquo; («Путешествие из Петербурга в Москву»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Karamz%C3%ADn">Nikolái Karamzín</a>

<ul>
<li>&ldquo;La pobre Lisa&rdquo; (Повесть «Бедная Лиза»)</li>
<li>&ldquo;Otoño&rdquo; («Осень»)</li>
</ul>
</li>
</ul>


<h3>Literatura rusa del siglo XIX</h3>

<ul>
<li>Fábulas de <a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Krylov">Iván Krylov</a></li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Vasili_Zhukovski">Vasili Zhukovski</a>

<ul>
<li>&ldquo;Svetlana&rdquo; (Баллада «Светлана»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Griboy%C3%A9dov">Aleksandr Griboyédov</a> (А. С. Грибоедов)

<ul>
<li><a href="https://en.wikipedia.org/wiki/Woe_from_Wit">&ldquo;Woe from Wit&rdquo;</a> (Комедия «Горе от ума»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Kondrati_Ryl%C3%A9yev">Kondrati Ryléyev</a> (К. Ф. Рылеев)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Konstant%C3%ADn_B%C3%A1tiushkov">Konstantín Bátiushkov</a> (К. Н. Батюшков)
<img class="right" src="http://blog.vero4ka.info/images/pushkin.jpg" width="150" title="'Aleksandr Pushkin'" ></li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Pushkin">Aleksandr Pushkin</a> (А. С. Пушкин)

<ul>
<li>Poesía</li>
<li>&ldquo;Los relatos de Belkin&rdquo; («Повести Белкина»)</li>
<li>&ldquo;Dubrovski&rdquo; («Дубровский»)</li>
<li><a href="https://goo.gl/UvGqrX">&ldquo;La hija del capitán&rdquo;</a> («Капитанская дочка»)</li>
<li><a href="https://es.wikipedia.org/wiki/Rusl%C3%A1n_y_Liudmila">&ldquo;Ruslán y Liudmila&rdquo;</a> («Руслан и Людмила»)</li>
<li>&ldquo;Poltava&rdquo; («Полтава»)</li>
<li>&ldquo;El caballero de bronce&rdquo; («Медный всадник»)</li>
<li><a href="https://es.wikipedia.org/wiki/Eugenio_Oneguin">&ldquo;Eugenio Oneguin&rdquo;</a> («Евгений Онегин»)</li>
<li><a href="https://es.wikipedia.org/wiki/Bor%C3%ADs_Godunov">&ldquo;Borís Godunov&rdquo;</a> («Борис Годуновc)
<img class="right" src="http://blog.vero4ka.info/images/lermontov.jpg" width="150" title="Mijaíl Lérmontov" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_L%C3%A9rmontov">Mijaíl Lérmontov</a> (М. Ю. Лермонтов)

<ul>
<li>Poesía</li>
<li><a href="https://es.wikipedia.org/wiki/Un_h%C3%A9roe_de_nuestro_tiempo">Un héroe de nuestro tiempo</a> («Герой нашего времени»)</li>
<li>&ldquo;El novicio&rdquo; («Мцыри»)</li>
<li>&ldquo;El canto del zar Iván Vasílievich, del joven opríchnik y del gallardo mercader Kaláshnikov&rdquo; («Песня про купца Калашникова»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_G%C3%B3gol">Nikolái Gógol</a> (Н. В. Гоголь)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Veladas_en_un_caser%C3%ADo_de_Dikanka">&ldquo;Veladas en un caserío de Dikanka&rdquo;</a> («Вечера на хуторе близ Диканьки»)</li>
<li><a href="https://es.wikipedia.org/wiki/Tar%C3%A1s_Bulba">&ldquo;Tarás Bulba&rdquo;</a> (Повесть «Тарас Бульба»)</li>
<li><a href="https://es.wikipedia.org/wiki/El_capote">&ldquo;El capote&rdquo;</a> (Повесть «Шинель»)</li>
<li><a href="https://goo.gl/koI7YD">&ldquo;El inspector&rdquo;</a> (Комедия «Ревизор»)</li>
<li><a href="https://es.wikipedia.org/wiki/Almas_muertas">&ldquo;Almas muertas&rdquo;</a> (Поэма «Мёртвые души»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Ostrovski">Aleksandr Ostrovski</a> (А. Н. Островский)

<ul>
<li>&ldquo;La pobreza no es afrenta&rdquo; («Бедность не порок»)</li>
<li>&ldquo;La novia sin dote &rdquo; («Бесприданница»)</li>
<li>&ldquo;La Tormenta&rdquo; («Гроза»)</li>
<li>&ldquo;El dineral&rdquo; («Доходное место»)</li>
<li>&ldquo;La niña de las nieves&rdquo; («Снегурочка»)</li>
<li>&ldquo;Entre propios anda el juego&rdquo; («Свои люди — сочтёмся»)
<img class="right" src="http://blog.vero4ka.info/images/turgenev.jpg" width="150" title="Iván Turguénev" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Turgu%C3%A9nev">Iván Turguénev</a> (И. С. Тургенев)

<ul>
<li>&ldquo;Padres e hijos&rdquo; («Отцы и дети»)</li>
<li>&ldquo;Rudin&rdquo; («Рудин»)</li>
<li>&ldquo;Memorias de un cazador&rdquo; («Записки охотника»)</li>
<li>&ldquo;Mumu&rdquo; («Муму»)</li>
<li>&ldquo;Ásya&rdquo; («Ася»)</li>
<li>&ldquo;Primer amor&rdquo; («Первая любовь»)</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Fyodor_Tyutchev">Fyodor Tyutchev</a> (Ф. И. Тютчев)</li>
<li>Poesía de <a href="" title="https://en.wikipedia.org/wiki/Afanasy_Fet">Afanasy Fet</a> (А. А. Фет)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Apol%C3%B3n_M%C3%A1ikov">Apolón Máikov</a> (А. Н. Майков)
<img class="right" src="http://blog.vero4ka.info/images/tolstoy.jpg" width="150" title="Leo Tolstoy" ></li>
<li><a href="https://en.wikipedia.org/wiki/Leo_Tolstoy">Leo Tolstoy</a> (Л. Н. Толстой)

<ul>
<li>&ldquo;Infancia&rdquo; («Детство»)</li>
<li>&ldquo;Adolescencia&rdquo; («Отрочество»)</li>
<li>&ldquo;Juventud&rdquo; («Юность»)</li>
<li>&ldquo;El prisionero del Cáucaso&rdquo; («Кавказский пленник»)</li>
<li>&ldquo;Después del baile&rdquo; («После бала»)</li>
<li><a href="https://es.wikipedia.org/wiki/Guerra_y_Paz">Guerra y paz</a> («Война и мир»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Nekr%C3%A1sov">Nikolái Nekrásov</a> (Н. А. Некрасов)

<ul>
<li>&ldquo;¿Quién es feliz en Rusia?&rdquo; («Кому на Руси жить хорошо»)</li>
<li>Poesía</li>
</ul>
</li>
<li>Poesía de Nikolay Yazykov (Н. М. Языков)</li>
<li>Nikolái_Leskov

<ul>
<li>&ldquo;Lady Macbeth de Mtsensk&rdquo; («Леди Макбет Мценского уезда»)</li>
<li>&ldquo;Relato sobre el zurdo bizco de Tula y la pulga de acero&rdquo; («Левша»)</li>
<li>&ldquo;El peregrino encantado&rdquo; («Очарованный странник»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Chernyshevski">Nikolái Chernyshevski</a>

<ul>
<li>&ldquo;¿Qué hacer?&rdquo; («Что делать?»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Goncharov">Iván Goncharov</a> (И. А. Гончаров)

<ul>
<li>&ldquo;Una historia corriente&rdquo; («Обыкновенная история»)</li>
<li><a href="https://es.wikipedia.org/wiki/Obl%C3%B3mov">&ldquo;Oblómov&rdquo;</a> («Обломов»)</li>
<li>«Обрыв»</li>
<li>&ldquo;Un millón de dudas&rdquo; («Мильон терзаний»)</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Ivan_Savvich_Nikitin">Ivan Savvich Nikitin</a> (И. С. Никитин)</li>
<li><a href="https://es.wikipedia.org/wiki/Aleks%C3%A9i_Nikol%C3%A1yevich_Tolst%C3%B3i">Alekséi Nikoláyevich Tolstói</a> (А. Н. Толстой)

<ul>
<li>&ldquo;Pedro I&rdquo; («Пётр I»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Aleks%C3%A9i_Konstant%C3%ADnovich_Tolst%C3%B3i">Alekséi Konstantínovich Tolstói</a> (А. К. Толстой)</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Saltykov-Shchedr%C3%ADn">Mijaíl Saltykov-Shchedrín</a> (М. Е. Салтыков-Щедрин)

<ul>
<li>&ldquo;Historia de una ciudad&rdquo; («История одного города»)</li>
<li>«Вяленая вобла»)</li>
<li>«Повесть о том, как один мужик двух генералов прокормил»</li>
<li>«Дикий помещик»</li>
<li>«Медведь на воеводстве»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Vlad%C3%ADmir_Korolenko">Vladímir Korolenko</a> (В. Г. Короленко)

<ul>
<li>«Чудная»</li>
<li>&ldquo;Sin lengua&rdquo; («Без языка»)</li>
<li>«Река играет»</li>
<li>«Парадокс»</li>
<li>«Огоньки»</li>
<li>«В дурном обществе»
<img class="right" src="http://blog.vero4ka.info/images/chekhov.jpg" width="150" title="Antón Chéjov" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Ant%C3%B3n_Ch%C3%A9jov">Antón Chéjov</a> (А. П. Чехов)

<ul>
<li>&ldquo;Tío Vania&rdquo; («Дядя Ваня»)</li>
<li><a href="https://es.wikipedia.org/wiki/El_jard%C3%ADn_de_los_cerezos">&ldquo;El jardín de los cerezos&rdquo;</a> («Вишнёвый сад»)</li>
<li>&ldquo;El apellido caballuno&rdquo; («Лошадиная фамилия»)</li>
<li>«Хамелеон»</li>
<li>&ldquo;El gordo y el flaco&rdquo; («Толстый и тонкий»)</li>
<li>&ldquo;A Malefactor&rdquo; («Злоумышленник»)</li>
<li>&ldquo;The Death of a Government Clerk&rdquo; («Смерть чиновника»)</li>
<li>«Хирургия»</li>
<li>&ldquo;The Huntsman&rdquo; («Егерь»)</li>
<li>&ldquo;Misery&rdquo; («Тоска»)</li>
<li>«В аптеке»</li>
<li>&ldquo;An Artist&rsquo;s Story [The House with the Mezzanine]&rdquo; («Дом с мезонином»)</li>
<li>&ldquo;Anna on the Neck&rdquo; («Анна на шее»)</li>
<li>&ldquo;El oso&rdquo; («Медведь»)</li>
</ul>
</li>
</ul>


<h3>Literatura rusa del siglo XX (la primera mitad)</h3>

<p><img class="right" src="http://blog.vero4ka.info/images/bunin.jpg" width="150" title="Iván Bunin" ></p>

<ul>
<li><a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Bunin">Iván Bunin</a> (И. А. Бунин)

<ul>
<li><a href="https://en.wikipedia.org/wiki/The_Gentleman_from_San_Francisco">&ldquo;The Gentleman from San Francisco&rdquo;</a> («Господин из Сан-Франциско»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Konstant%C3%ADn_Balmont">Konstantín Balmont</a> (К. Д. Бальмонт)</li>
<li>Poesía de Innokienti Ánnienski</li>
<li>Poesía de Nikolái Gumiliov</li>
<li>Konstantín Paustovski

<ul>
<li>&ldquo;Warm Bread&rdquo; («Тёплый хлеб»)</li>
<li>&ldquo;Telegram&rdquo; («Телеграмма»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Futurismo_ruso">Ígor Severyanin</a> (И. Северянин)</li>
<li>Alekséi Rémizov (А. М. Ремизов)

<ul>
<li>«Змей»
<img class="right" src="http://blog.vero4ka.info/images/zamyatin_my.jpg" width="150" title="Yevgueni Zamiatin" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Yevgueni_Zamiatin">Yevgueni Zamiatin</a> (Е. И. Замятин)

<ul>
<li><a href="" title="https://es.wikipedia.org/wiki/Nosotros_(novela)">&ldquo;Nosotros&rdquo;</a> («Мы»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Kupr%C3%ADn">Aleksandr Kuprín</a> (А. И. Куприн)

<ul>
<li>&ldquo;Móloj&rdquo; («Молох»)</li>
<li>&ldquo;Olesia&rdquo; («Олеся»)</li>
<li>&ldquo;El brazalete de rubíes&rdquo; («Гранатовый браслет»)</li>
<li>&ldquo;El desafio&rdquo; («Поединок»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/M%C3%A1ximo_Gorki">Máximo Gorki</a> (М. Горький)

<ul>
<li>&ldquo;La madre&rdquo; («Мать»)</li>
<li>&ldquo;Los bajos fondos&rdquo; («На дне»)</li>
<li>&ldquo;La vieja Izerguíl&rdquo; («Старуха Изергиль»)</li>
<li>&ldquo;Makar Chudrá&rdquo; («Макар Чудра»)</li>
<li>&ldquo;Chelkash&rdquo; («Челкаш»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Aleksandr_Blok">Aleksandr Blok</a> (А. А. Блок)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Vlad%C3%ADmir_Mayakovski">Vladímir Mayakovski</a> (В. В. Маяковский)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Sergu%C3%A9i_Yesenin">Serguéi Yesenin</a> (А. А. Блок)</li>
<li>Mijaíl Prishvin (Михаил Пришвин)

<ul>
<li>«Кладовая солнца»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Leonid_Andr%C3%A9iev">Leonid Andréiev</a> (Леонид Андреев)

<ul>
<li>&ldquo;Kusaka&rdquo; («Кусака»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Serafim%C3%B3vich">Aleksandr Serafimóvich</a> (А. Серафимович)

<ul>
<li>&ldquo;El torrente de hierro&rdquo; («Железный поток»)</li>
</ul>
</li>
<li>Vsévolod Ivánov (Вс. Иванов)

<ul>
<li>&ldquo;El tren blindado 14-69&rdquo; «Бронепоезд 14-69»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Isaak_B%C3%A1bel">Isaak Bábel</a> (Исаак Бабель)

<ul>
<li>&ldquo;Primer Ejército de Caballería&rdquo; («Конармия»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Fad%C3%A9yev">Aleksandr Fadéyev</a> (Александр Фадеев)

<ul>
<li>&ldquo;La derrota&rdquo; («Разгром») - 1926</li>
</ul>
</li>
<li>Borís Pilniak (Б. Пильняк)

<ul>
<li>&ldquo;Ciudad desnuda&rdquo; («Голый год»)</li>
</ul>
</li>
<li>Boris Lavrenyov (Б. Лавренев)

<ul>
<li>&ldquo;Viento&rdquo; («Ветер»)</li>
</ul>
</li>
<li>Dmitry Furmanov (Дмитрий Фурманов)

<ul>
<li>&ldquo;Chapayev&rdquo; («Чапаев»)</li>
</ul>
</li>
<li>Vikenty Veresaev (Викентий Вересаев)

<ul>
<li>&ldquo;Without a Road&rdquo; («В тупике»)
<img class="right" src="http://blog.vero4ka.info/images/Dvenadtsat_stulev.jpeg" width="150" title="Las Doce Sillas" ></li>
</ul>
</li>
<li>Ilf y Petrov (Илья Ильф и Евгений Петров)

<ul>
<li><a href="" title="https://es.wikipedia.org/wiki/Las_doce_sillas_(novela)">&ldquo;Las Doce Sillas&rdquo;</a> («Двенадцать стульев»)</li>
</ul>
</li>
<li>Teffi (Надежда Тэффи)

<ul>
<li>&ldquo;Nostalgia&rdquo; («Ностальгия»)</li>
</ul>
</li>
<li>Cuentos de Vitaly Bianki (Виталий Бианки)</li>
<li>Poesía de Nikolay Zabolotsky (Николай Заболоцкий)</li>
<li>Mikhail Zoshchenko (Михаил Зощенко)

<ul>
<li>«Великие путешественники»</li>
<li>&ldquo;The Galosh&rdquo; («Галоша»)</li>
<li>«Встреча»</li>
<li>«Монтёр»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Arkadi_Av%C3%A9rchenko">Arkadi Avérchenko</a> (Аркадий Аверченко)

<ul>
<li>&ldquo;Una docena de cuchillos en la parte posterior de la Revolución&rdquo; («Дюжина ножей в спину революции»)</li>
<li>«Смерть африканского охотника»
<img class="right" src="http://blog.vero4ka.info/images/Ahmatova.jpg" width="150" title="Anna Ajmátova" ></li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Anna_Ajm%C3%A1tova">Anna Ajmátova</a> (Анна Ахматова)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Marina_Tsvet%C3%A1yeva">Marina Tsvetáyeva</a> (М. И. Цветаева)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/%C3%93sip_Mandelshtam">Ósip Mandelshtam</a> (О. Э. Мандельштам)</li>
<li><a href="https://es.wikipedia.org/wiki/Andr%C3%A9i_Plat%C3%B3nov">Andréi Platónov</a> (А. П. Платонов)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Chevengur">&ldquo;Chevengur&rdquo;</a> «Чевенгур»</li>
<li>«Котлован»</li>
<li>«Волшебное кольцо»</li>
<li>«Неизвестный цветок»</li>
<li>«На заре туманной юности»</li>
<li>&ldquo;The Cow&rdquo; («Корова»)</li>
<li>«Юшка»</li>
<li>«Сокровенный человек»</li>
<li>«Шарманка»</li>
<li>«Впрок»</li>
</ul>
</li>
<li>Aleksandr Grin (А. С. Грин)

<ul>
<li>&ldquo;Velas rojas&rdquo; («Алые паруса»)</li>
<li>&ldquo;La lámpara verde&rdquo; («Зелёная лампа»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Bulg%C3%A1kov">Mijaíl Bulgákov</a> (М. А. Булгаков)

<ul>
<li>«Кабала святош»</li>
<li>«Бег»</li>
<li><a href="https://es.wikipedia.org/wiki/La_Guardia_Blanca">&ldquo;La Guardia Blanca&rdquo;</a> «Белая гвардия»</li>
<li>&ldquo;Corazón de perro&rdquo; («Собачье сердце»)</li>
<li><a href="https://es.wikipedia.org/wiki/El_maestro_y_Margarita">&ldquo;El maestro y Margarita&rdquo;</a> «Мастер и Маргарита»</li>
<li>«Похождения Чичикова»</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Aleksandr_Tvardovsky">Aleksándr Tvardovski</a> (А. Т. Твардовский)

<ul>
<li>&ldquo;Vasili Tyorkin&rdquo; («Василий Тёркин»)</li>
</ul>
</li>
<li>Yuri Tyniánov (Ю. Тынянов)

<ul>
<li>&ldquo;La muerte de Vazir-Mujtar&rdquo; («Смерть Вазир-Мухтара»)</li>
</ul>
</li>
<li>Poesía de Alexey Surkov (А. Сурков)</li>
<li><a href="https://es.wikipedia.org/wiki/Bor%C3%ADs_Pasternak">Borís Pasternak</a> (Б. Л. Пастернак)

<ul>
<li>Poesía</li>
<li><a href="https://es.wikipedia.org/wiki/Doctor_Zhivago">&ldquo;Doctor Zhivago&rdquo;</a> («Доктор Живаго»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Semi%C3%B3novich_T%C3%ADjonov">Nikolái Semiónovich Tíjonov</a> (Н. Тихонов)</li>
<li>Poesía de Konstantín Símonov (К. М. Симонов)

<ul>
<li>«Ты помнишь, Алёша, дороги Смоленщины…»</li>
<li>«Жди меня»
<img class="right" src="http://blog.vero4ka.info/images/don.jpg" width="150" title="El Don apacible" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Sh%C3%B3lojov">Mijaíl Shólojov</a> (М. А. Шолохов)

<ul>
<li><a href="https://es.wikipedia.org/wiki/El_Don_apacible">&ldquo;El Don apacible&rdquo;</a> («Тихий Дон»)</li>
<li>&ldquo;Campos roturados&rdquo; («Поднятая целина»)</li>
<li>&ldquo;El destino de un hombre&rdquo; («Судьба человека»)</li>
</ul>
</li>
</ul>


<h3>Literatura rusa del siglo XX (la segunda mitad)</h3>

<ul>
<li>Leonid Leonov (Л. Леонов)

<ul>
<li>«Нашествие»</li>
</ul>
</li>
<li>Poesía de Olga Bergholz (О. Берггольц)</li>
<li>Evgueni Vinokourov (Е. Винокуров)

<ul>
<li>&ldquo;Moscovitas&rdquo; («Москвичи»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Yevgueni_Shvarts">Yevgueni Shvarts</a> (Е. Шварц)

<ul>
<li>&ldquo;Dragón&rdquo; («Дракон»)</li>
</ul>
</li>
<li>Fyodor Abramov (Ф. А. Абрамов)

<ul>
<li>«О чём плачут лошади»</li>
<li>Тетралогия «Пряслины»</li>
<li>«Поездка в прошлое»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Chinguiz_Aitm%C3%A1tov">Chinguiz Aitmátov</a> (Чингиз Айтматов)

<ul>
<li>&ldquo;Más de un siglo dura el día&rdquo; («И дольше века длится день…»)</li>
<li>&ldquo;El patíbulo&rdquo; («Плаха»)</li>
</ul>
</li>
<li>Vasil Býkov (В. Быков)

<ul>
<li>&ldquo;El obelisco&rdquo; («Обелиск») - 1970</li>
<li>&ldquo;Sótnikov&rdquo; («Сотников») - 1971</li>
</ul>
</li>
<li>Víktor Astáfiev (В. П. Астафьев)

<ul>
<li>«Вам продолжать эту жизнь» (письмо, адресованное юной читательнице)</li>
<li>«Васюткино озеро»</li>
<li>«Игры»</li>
<li>&ldquo;The Horse with the Pink Mane, and Other Siberian Stories&rdquo; («Конь с розовой гривой»)</li>
<li>«Фотография, на которой меня нет»</li>
<li>&ldquo;El pez rey&rdquo; («Царь-рыба») - 1976</li>
<li>&ldquo;Sad Detective&rdquo; («Печальный детектив») - 1986</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Vasily_Belov">Vasily Belov</a> (В. И. Белов)

<ul>
<li>«Скворцы»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Kir_Bulychov">Kir Bulychov</a> (К. Булычёв)

<ul>
<li>«Заповедник сказок»</li>
<li>«Когда мне было 12 лет»</li>
</ul>
</li>
<li>Poesía de Dmitri Kedrin (Д. Б. Кедрин)</li>
<li><a href="https://es.wikipedia.org/wiki/Valent%C3%ADn_Rasputin">Valentín Rasputin</a> (В. Г. Распутин)

<ul>
<li>&ldquo;Clases de francés&rdquo; («Уроки французского»)</li>
<li>&ldquo;Último plazo&rdquo; («Последний срок»)</li>
<li>&ldquo;El adiós a Matiora&rdquo; («Прощание с Матерой»)</li>
<li>&ldquo;Vive y recuerda&rdquo; («Живи и помни»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Fazil_Iskander">Fazil Iskander</a> (Ф. Искандер)

<ul>
<li>&ldquo;The Thirteenth Labour of Hercules&rdquo; («Тринадцатый подвиг Геракла»)</li>
</ul>
</li>
<li>Yevgeni Nosov (Е. И. Носов)

<ul>
<li>«Кукла» («Акимыч») «Живое пламя»</li>
</ul>
</li>
<li>Cuentos de <a href="https://es.wikipedia.org/wiki/Vasili_Shuksh%C3%ADn">Vasili Shukshín</a> (В. М. Шукшин)</li>
<li><a href="https://es.wikipedia.org/wiki/Varlam_Shal%C3%A1mov">Varlam Shalámov</a> (В. Т. Шаламов)

<ul>
<li>&ldquo;Relatos de Kolymá&rdquo; («Колымские рассказы»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Solzhenitsyn">Aleksandr Solzhenitsyn</a> (А. И. Солженицын)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Un_d%C3%ADa_en_la_vida_de_Iv%C3%A1n_Den%C3%ADsovich">&ldquo;Un día en la vida de Iván Denísovich&rdquo;</a> («Один день Ивана Денисовича») - 1962</li>
<li>&ldquo;La casa de Matriona&rdquo; («Матрёнин двор») - 1963</li>
<li><a href="https://es.wikipedia.org/wiki/Archipi%C3%A9lago_Gulag">&ldquo;Archipiélago Gulag&rdquo;</a> («Архипелаг ГУЛАГ») - 1973</li>
<li>&ldquo;Cómo reorganizar Rusia&rdquo; («Как нам обустроить Россию») - 1990</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Robert_Rozhdestvensky">Robert Rozhdestvensky</a> (Р. И. Рождественский)</li>
</ul>


<h2>Literatura mundial</h2>

<ul>
<li>Refranes, proverbios y dichos populares de Mundo</li>
<li><a href="https://es.wikipedia.org/wiki/Las_mil_y_una_noches">Las mil y una noches</a> («Тысяча и одна ночь»)</li>
<li>(«Путешествие Синдбада-морехода»)</li>
<li>Mitos

<ul>
<li>Mitología Griega</li>
<li>Mitos de la India</li>
<li>Mitología escandinava

<ul>
<li>&ldquo;Thor&rsquo;s Journey to Utgard&rdquo; (<a href="http://www.litra.ru/fullwork/get/woid/00902971224610246393/">«Сказание о путешествии Тора в Утгард»</a>)</li>
</ul>
</li>
<li>Mitología de los Indios Norteamericanos

<ul>
<li><a href="https://en.wikipedia.org/wiki/The_Song_of_Hiawatha">&ldquo;The Song of Hiawatha&rdquo;</a> (<a href="http://www.lib.ru/POEZIQ/LONGFELLO/hayavata.txt">«Песнь о Гайавате»</a>)</li>
</ul>
</li>
</ul>
</li>
<li>La Biblia (Библия)</li>
<li><a href="https://es.wikipedia.org/wiki/Homero">Homero</a> (Гомер)

<ul>
<li>&ldquo;Odisea&rdquo; («Одиссея»)</li>
<li>&ldquo;Ilíada&rdquo; («Илиада»)</li>
</ul>
</li>
<li><a href="" title="https://es.wikipedia.org/wiki/Poes%C3%ADa_l%C3%ADrica#Historia_de_la_poes.C3.ADa_l.C3.ADrica">La poesía lírica antigua</a> (Античная лирика)</li>
<li>Dante Alighieri (Данте Алигьери)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Divina_comedia">&ldquo;Divina comedia&rdquo;</a> («Божественная комедия»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/William_Shakespeare">William Shakespeare</a> (У. Шекспир)

<ul>
<li>&ldquo;Romeo y Julieta&rdquo; («Ромео и Джульетта») - 1595</li>
<li>&ldquo;Hamlet&rdquo; («Гамлет») - 1601</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Moli%C3%A8re">Jean-Baptiste Molière</a> (Ж.-Б. Мольер)

<ul>
<li>&ldquo;El burgués gentilhombre&rdquo; («Мещанин во дворянстве или Скупой»)</li>
<li>&ldquo;Tartufo&rdquo; («Тартюф»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Miguel_de_Cervantes">Miguel de Cervantes</a> (М. Сервантес)

<ul>
<li>&ldquo;Don Quijote de la Mancha&rdquo; («Дон Кихот») (algunos capítulos)</li>
</ul>
</li>
<li>И.-В. Гёте

<ul>
<li>«Фауст»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Friedrich_Schiller">Friedrich Schiller</a> (Ф. Шиллер) (una obra que escoge el profesor)</li>
<li><ol type="a">
<li><ol type="a">
<li><ol type="a">
<li>Hoffmann (Э. Т. А. Гофман)</li>
</ol>
</li>
</ol>
</li>
<li>&ldquo;The Golden Pot&rdquo; («Золотой горшок»)</li>
</ol>
</li>
<li>Poesía de George Gordon Byron (Дж. Г. Байрон)</li>
<li>П. Мериме (Prosper Mérimée) (una obra que escoge el profesor)</li>
<li><a href="https://es.wikipedia.org/wiki/Honor%C3%A9_de_Balzac">Honoré de Balzac</a> (Оноре де Бальзак)

<ul>
<li><a href="https://es.wikipedia.org/wiki/La_comedia_humana">&ldquo;La comedia humana&rdquo;</a> «Человеческая комедия»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Gustave_Flaubert">Gustave Flaubert</a> (Гюстав Флобер)

<ul>
<li>&ldquo;Salambó&rdquo; («Саламбо»)</li>
</ul>
</li>
<li>Hans Christian Andersen (Г. X. Андерсен)

<ul>
<li>Соловей</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Victor_Hugo">Victor Hugo</a> (Виктор Гюго)

<ul>
<li>&ldquo;Notre-Dame de Paris&rdquo; («Собор Парижской Богоматери»)</li>
</ul>
</li>
<li>Daniel Defoe (Даниэль Дефо)

<ul>
<li>&ldquo;Robinson Crusoe&rdquo; («Робинзон Крузо»)</li>
</ul>
</li>
<li>Jack London (Джек Лондон)

<ul>
<li>Los cuentos</li>
<li>&ldquo;Love of Life&rdquo; («Любовь к жизни») - 1905</li>
</ul>
</li>
<li>Edgar Allan Poe (Э. А. По)

<ul>
<li>«Лягушонок»</li>
</ul>
</li>
<li>James Aldridge (Джеймс Олдридж)

<ul>
<li>(«Последний дюйм»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/O._Henry">O. Henry</a> (О. Генри)

<ul>
<li>&ldquo;The Gift of the Magi&rdquo; («Дары волхвов»)</li>
<li>&ldquo;Cabbages and Kings&rdquo; («Короли и капуста»)</li>
</ul>
</li>
<li>Luigi Pirandello (Луиджи Пиранделло)

<ul>
<li>«Черепаха»</li>
</ul>
</li>
<li>Ernest Thompson Seton (Э. Сетон-Томпсон)

<ul>
<li>Cuentos</li>
</ul>
</li>
<li>Mark Twain (М. Твен)

<ul>
<li>&ldquo;The Adventures of Tom Sawyer&rdquo; («Приключения Тома Сойера») - 1876</li>
<li>&ldquo;Adventures of Huckleberry Finn&rdquo; («Приключения Гекльберри Финна») - 1885</li>
</ul>
</li>
<li>Antoine de Saint-Exupéry (А. Сент-Экзюпери)

<ul>
<li>&ldquo;El principito&rdquo; («Маленький принц»)</li>
</ul>
</li>
<li>Lewis Carroll (Л. Кэрролл)

<ul>
<li>&ldquo;Alice in Wonderland&rdquo; («Алиса в стране чудес»)</li>
</ul>
</li>
<li>Astrid Lindgren (Астрид Линдгрен)

<ul>
<li>«Приключения Калле Блумквиста»</li>
<li>«Расмус-бродяга»</li>
</ul>
</li>
<li>Ray Bradbury (Рэй Брэдбери)

<ul>
<li>«Каникулы (Брэдбери)»</li>
<li>«Зелёное утро»</li>
<li>&ldquo;Dandelion Wine&rdquo; («Вино из одуванчиков»)</li>
</ul>
</li>
<li>Gerald Durrell (Дж. Даррел)

<ul>
<li>&ldquo;The Talking Parcel&rdquo; («Говорящий свёрток»)</li>
</ul>
</li>
<li>Gianni Rodari (Дж. Родари)

<ul>
<li>«Приключения Чиполлино»</li>
<li>«Джельсомино в Стране Лжецов»</li>
<li>«Чем пахнут ремёсла»</li>
</ul>
</li>
<li>Tove Jansson (Туве Янссон)

<ul>
<li>«Последний в мире дракон»</li>
</ul>
</li>
<li>John Ronald Reuel Tolkien (Дж. Р. Р. Толкин)

<ul>
<li>«Хоббит, или Туда и обратно»</li>
</ul>
</li>
<li>Haiku (Японские хокку (трехстишия))</li>
</ul>


<h2>Crítica literaria</h2>

<ul>
<li><a href="https://es.wikipedia.org/wiki/Visari%C3%B3n_Belinski">Visarión Belinski</a> (В. Белинский)

<ul>
<li>«Сочинения Александра Пушкина» (Пушкин)</li>
<li>«Стихотворения М. Лермонтова» (Лермонтов)</li>
<li>«Герой нашего времени. Сочинение М.Ю.Лермонтова» (Лермонтов)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Dobroliubov">Nikolái Dobroliubov</a> (Н. А. Добролюбов)

<ul>
<li>«Луч света в тёмном царстве» (Островский)</li>
<li>«Что такое обломовщина?» (Гончаров)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Dmitri_P%C3%ADsarev">Dmitri Písarev</a> (Д. И. Писарев)

<ul>
<li>«Обломов» (Гончаров)</li>
<li>«Базаров» (Тургенев)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Apollon_Grigoriev">Apollon Grigoriev</a> (А. А. Григорьев)

<ul>
<li>«После „Грозы“ Островского» (Островский)</li>
<li>«Письма к Ивану Сергеевичу Тургеневу»</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Alexander_Druzhinin">Alexander Druzhinin</a> (А. В. Дружинин)

<ul>
<li>««Обломов», роман И. А. Гончарова» (Гончаров)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Str%C3%A1jov">Nikolái Strájov</a> (Н. Н. Страхов)

<ul>
<li>««Отцы и дети» И. С. Тургенева» (Тургенев)</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Maxim_Antonovich">Maxim Antonovich</a> (М. А. Антонович)

<ul>
<li>«Асмодей нашего времени»</li>
</ul>
</li>
</ul>


<hr />

<p>Enlaces:</p>

<ul>
<li><a href="http://blog.vero4ka.info/blog/2016/12/18/libros-que-leen-los-ninos-rusos/">Libros que leen los niños rusos</a></li>
<li><a href="https://ru.wikisource.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D1%82%D0%B5%D0%BA%D0%B0:%D0%A8%D0%BA%D0%BE%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0">Викитека:Школьная программа</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Think like I do]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/12/18/think-like-i-do/"/>
    <updated>2016-12-18T22:09:26-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/12/18/think-like-i-do</id>
    <content type="html"><![CDATA[<blockquote><p>A she-wolf teaches her cubs: "Bite like I do," and that's enough.<br/>A she-rabbit teaches her offspring: "Run like I do," and that's also enough.<br/>But when a man teaches his children: "Think like I do," and that's a crime.</p><footer><strong>Strugatsky Brothers</strong></footer></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Libros que leen los niños rusos]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/12/18/libros-que-leen-los-ninos-rusos/"/>
    <updated>2016-12-18T11:49:57-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/12/18/libros-que-leen-los-ninos-rusos</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://blog.vero4ka.info/images/Cipollino.jpg" width="150" title="'Cipollino'" ></p>

<h2>Gianni Rodari, Cipollino</h2>

<p>Aventuras de Cipollino es un cuento del escritor italiano Gianni Rodari
en el que el personaje principal, un niño-cebolla llamado Cipollino, lucha
contra la injusticia, defendiendo a los ciudadanos del los ricos de la ciudad,
del señor Tomate y el príncipe Limón (el gobernador del país).
Todos los personajes del cuento son frutas y verduras.</p>

<!-- more -->


<h2>Nikolay Nósov, Aventuras de Nosabenada y sus Amigos</h2>

<p>Aventuras de un niño travieso, curioso, siempre activo y permanentemente
enredado en situaciones poco habituales y con frecuencia cómicas.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/la_isla_del_tesoro.jpg" width="150" title="'La isla del tesoro'" ></p>

<h2>Mark Twain, Las aventuras de Tom Sawyer</h2>

<p>Relata las aventuras de la infancia de Tom Sawyer, un niño que crece durante
el antebellum del Sur de los Estados Unidos en “St. Petersburg”.</p>

<h2>Robert Louis Stevenson, La isla del tesoro</h2>

<p>Una novela del escritor escocés Robert Stevenson, en la que el autor describe
las aventuras relacionadas con la búsqueda de los tesoros escondidos por el
pirata Capitán J. Flint en una isla desierta.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/el_caballito_jorobadito.jpg" width="150" title="'El caballito jorobado'" ></p>

<h2>Piotr Yershóv,  El caballito jorobado</h2>

<p>Un cuento en verso, escrito en la década de 1830. Los personajes principales
son el hijo de un campesino, llamado Iván el Loco, y un caballito mágico jorobado.</p>

<h2>Los cuentos de los Hermanos Grimm</h2>

<p>Son cuentos folclóricos recopilados por dos escritores alemanes: Los músicos
de Bremen, El lobo y las siete cabritillas, El pescador y su esposa.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/pulgarcita.jpg" width="150" title="'Pulgarcita'" ></p>

<h2>Los libros del escritor danés Hans Christian Andersen</h2>

<p>El traje nuevo del emperador (El rey desnudo), Pulgarcita, La Sirenita,
El patito feo, La reina de las nieves, El yesquero.</p>

<h2>Serguéi Aksákov, La Flor escarlata</h2>

<p>La trama recuerda a la de La Bella y la Bestia, pero se desarrolla en un ambiente ruso.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/momo.jpg" width="150" title="'Momo'" ></p>

<h2>Los cuentos de Charles Perrault</h2>

<p>Barba Azul – un cuento popular francés, la leyenda acerca de un marido pérfido,
recopilado y adaptado por Charles Perrault.
Pulgarcito, Caperucita Roja, La bella durmiente, El gato con botas y muchos otros.</p>

<h2>Michael Ende, Momo</h2>

<p>Del libro del autor alemán Michael Ende, aprendemos la historia de una
chica increíble llamada Momo. Ella tenía un talento muy raro – saber escuchar
a los demás, y por lo tanto tenía muchos amigos. Pero una vez en la ciudad,
donde vivía Momo, aparecieron los caballeros grises – los ladrones de tiempo …</p>

<p><img class="right" src="http://blog.vero4ka.info/images/Matilda.jpg" width="150" title="'Matilda'" ></p>

<h2>Roald Dahl, Matilda</h2>

<p><em>(Es muy recomendado buscar una edición con ilustraciones de Quentin Blake)</em></p>

<p>Matilda es una niña brillante, pero sus padres la consideran estúpida, que
sólo les da un dolor de cabeza adicional. La verdad reside en el hecho de
que sus padres son tontos, y sólo piensan en sí mismos y no se preocupan por
su propia hija. Entonces Matilda decide volver a educar a sus padres negligentes,
junto con la viciosa directora de su colegio.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/karlson.jpg" width="150" title="'Karlsson-on-the-Roof'" ></p>

<h2>Libros de Astrid Lindgren</h2>

<p>Astrid Lindgren es una escritora sueca, que provocó un intenso debate acerca
de la idea de que la educación tenga en cuenta la psicología del niño.
Astrid Lindgren siguió la polémica que se desarrolló en la sociedad y
participó en ella, apoyando a la educación que tenga en cuenta los pensamientos
y sentimientos de los niños y así muestra respeto a ellos.</p>

<p>Sus libros: Karlsson-on-the-Roof, Pipi Calzaslargas, Ronja, la hija del
bandolero y muchos otros.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/Finn_Family.png" width="150" title="'Finn Family'" ></p>

<h2>Tove Jansson, Mumintroll</h2>

<p>Escritora  finlandesa, autora de historias para niños protagonizadas por una
familia de trolls blancos, cubiertos de pelo y de apariencia redondeada,
y con grandes hocicos que les hacen asemejarse remotamente a hipopótamos.</p>

<h2>Cuentos para niños de Alexander Pushkin</h2>

<p>La princesa muerta y los siete fortachones, El pescador y el pececito dorado,
El príncipe Guidón y la bella princesa Cisne y El gallito de oro.</p>

<h2>Los cuentos de Ernest Thompson Seton</h2>

<p>Ernest Thompson Seton es el fundador del Movimiento “Woodcraft” que
influyó directamente en las concepciones pedagógicas de Lord Baden-Powell
al crear el Movimiento de los Boy Scouts.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/pipi.jpg" width="150" title="'Pipi Calzaslargas'" ></p>

<h2>Alan Alexander Milne, Winnie de Pooh</h2>

<h2>Aleksey Nikolayevich Tolstoy, Adventures of Buratino or The Golden Key</h2>

<h2>Las mil y una noches</h2>

<h2>Lewis Carroll, Las aventuras de Alicia en el país de las maravillas</h2>

<h2>L. Frank Baum, El maravilloso mago de Oz</h2>

<p><img class="right" src="http://blog.vero4ka.info/images/bremen.jpg" width="150" title="'Los músicos de Bremen'" ></p>

<h2>Rudyard Kipling, El libro de la selva</h2>

<p>Los cuentos Mowgli, La caza de Kaa, Rikki-Tikki-Tavi y otros.</p>

<h2>Antón Chéjov, Kashtanka</h2>

<p>Kashtanka es un pequeño perro de color castaña, parecido a un zorro,
que una noche nevada se pierde en la calle, comenzando así su extraña
y maravillosa aventura…</p>

<h2>Eric Knight, Lassie</h2>

<p>Eric Knight fue un escritor inglés nacido en Menston en Yorkshire.
Fue principalmente conocido por crear el personaje de ficción “Lassie”.
Lassie es un perro Collie que vive con la familia de un minero de Yorkshire,
Sam Carraclough. Cuando Sam pierde su trabajo, se ve obligado a vender
el perro a un noble rico. Después de varios intentos exitosos de Lassie
de escapar, el nuevo propietario del Duque Radling decide llevarla lejos
de Yorkshire a su finca en Escocia. Pero Lassie se escapa de allí y vuelve
a la casa de Sam, sobreviviendo en el camino un montón de aventuras.</p>

<h2>Jack London, La llamada de lo salvaje</h2>

<p>Es una novela corta del escritor estadounidense Jack London.
El argumento trata de un perro llamado Buck, cuyos instintos primitivos
vuelven tras una serie de sucesos que le ocurren cuando lo ponen a tirar
de un trineo en el Yukón, durante la fiebre del oro que tuvo lugar en
el siglo XX en el Klondike, durante la cual los perros de tiro
se compraban a precios elevados.</p>

<p>Les agradecería mucho si me pudieran recomendar algunos libros
que les han impactado en su infancia.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sistema de riego por capilaridad]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/30/sistema-de-riego-por-capilaridad/"/>
    <updated>2016-10-30T17:55:06-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/30/sistema-de-riego-por-capilaridad</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://blog.vero4ka.info/images/riego1.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego2.jpg" title="'Sistema de riego por capilaridad'" ></p>

<ul>
<li>Bomba de agua</li>
<li>Temporizador</li>
<li>Cuentagotas (x4)</li>
<li>Manguera (2m)</li>
<li>Garrafón</li>
<li>Balde con agua</li>
<li>Silicona</li>
</ul>


<!-- more -->


<p><img class="right" src="http://blog.vero4ka.info/images/riego3.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego4.jpg" title="'Sistema de riego por capilaridad'" ></p>

<p>La bomba pasa el agua desde el balde al garrafón por medio de una manguera.
El garrafón tiene unos huecos al fondo en las cuales están instalados los tubos
de las cuentagotas. Cuando el garrafón está instalado encima de las plantas
que necesitan el riego, el agua basa por la gravedad por medio de
las cuentagotas, con la velocidad definida por la rueda para regular
el flujo del gotero.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/riego5.jpg" title="'Sistema de riego por capilaridad'" >
<img class="left" src="http://blog.vero4ka.info/images/riego6.jpg" title="'Sistema de riego por capilaridad'" >
<img class="left" src="http://blog.vero4ka.info/images/riego7.jpg" title="'Sistema de riego por capilaridad'" ></p>

<p><img class="right" src="http://blog.vero4ka.info/images/riego8.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego9.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego10.jpg" title="'Sistema de riego por capilaridad'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to upload a file to Amazon S3 and generate a pre-signed URL]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/27/how-to-upload-a-file-to-amazon-s3-and-generate-a-pre-signed-url/"/>
    <updated>2016-10-27T09:32:43-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/27/how-to-upload-a-file-to-amazon-s3-and-generate-a-pre-signed-url</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">StringIO</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">xlwt</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">boto3.session</span> <span class="kn">import</span> <span class="n">Session</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">boto3</span> <span class="kn">import</span> <span class="n">client</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create a file, for example, an Excel document.</span>
</span><span class='line'><span class="n">xls</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">Workbook</span><span class="p">()</span>
</span><span class='line'><span class="n">ws</span> <span class="o">=</span> <span class="n">xls</span><span class="o">.</span><span class="n">add_sheet</span><span class="p">(</span><span class="s">&#39;A Test Sheet&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ws</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">1234.56</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">file_name</span> <span class="o">=</span> <span class="s">&#39;example.xls&#39;</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>
</span><span class='line'><span class="n">xls</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Save the file to S3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">Session</span><span class="p">(</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="p">],</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="n">s3</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">resource</span><span class="p">(</span><span class="s">&#39;s3&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s3_bucket_name</span> <span class="o">=</span> <span class="s">&#39;YourBucket&#39;</span>
</span><span class='line'><span class="n">s3_file_key</span> <span class="o">=</span> <span class="s">&#39;dir1/dir2/{}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">file_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">Bucket</span><span class="p">(</span><span class="n">s3_bucket_name</span><span class="p">)</span><span class="o">.</span><span class="n">put_object</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Key</span><span class="o">=</span><span class="n">s3_file_key</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Body</span><span class="o">=</span><span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">()</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Generate a pre-signed URL</span>
</span><span class='line'><span class="n">s3_client</span> <span class="o">=</span> <span class="n">client</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;s3&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">region_name</span><span class="o">=</span><span class="s">&#39;us-east-1&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="p">],</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="n">s3_client</span><span class="o">.</span><span class="n">generate_presigned_url</span><span class="p">(</span>
</span><span class='line'>    <span class="n">ClientMethod</span><span class="o">=</span><span class="s">&#39;get_object&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Params</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;Bucket&#39;</span><span class="p">:</span> <span class="n">s3_bucket_name</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="n">s3_file_key</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">ExpiresIn</span><span class="o">=</span><span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">24</span><span class="p">,</span>  <span class="c"># Default: 3600</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'><span class="c"># https://s3.amazonaws.com/YourBucket/dir1/dir2/example.xls?AWSAccessKeyId=ATPAJNUDN3ENT2I4S6EF&amp;Expires=1477582080&amp;Signature=POvreXScdYNES98SPFeAN3y12DL%3D</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to send an email with attachment via Amazon SES in Python]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/26/how-to-send-an-email-with-attachment-via-amazon-ses-in-python/"/>
    <updated>2016-10-26T14:19:26-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/26/how-to-send-an-email-with-attachment-via-amazon-ses-in-python</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">xlwt</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">boto3</span> <span class="kn">import</span> <span class="n">client</span>
</span><span class='line'>
</span><span class='line'><span class="n">email_from</span> <span class="o">=</span> <span class="s">&#39;from@example.com&#39;</span>
</span><span class='line'><span class="n">email_to</span> <span class="o">=</span> <span class="s">&#39;to@example.com&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create a workbook</span>
</span><span class='line'><span class="n">xls</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">Workbook</span><span class="p">()</span>
</span><span class='line'><span class="c"># Create a sheet</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">xls</span><span class="o">.</span><span class="n">add_sheet</span><span class="p">(</span><span class="s">&#39;Sheet name&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># Set styles for headers and dates</span>
</span><span class='line'><span class="n">header_style</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">easyxf</span><span class="p">(</span><span class="s">&#39;font: bold True;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">date_format</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">XFStyle</span><span class="p">()</span>
</span><span class='line'><span class="n">date_format</span><span class="o">.</span><span class="n">num_format_str</span> <span class="o">=</span> <span class="s">&#39;dd/mm/yyyy hh:mm:ss&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Header</span>
</span><span class='line'><span class="n">labels</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s">u&#39;Title 1&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;Title 2&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="n">content</span> <span class="o">=</span> <span class="p">[</span><span class="n">labels</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Get data for other rows</span>
</span><span class='line'><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">get_rows_with_content</span><span class="p">():</span>
</span><span class='line'>    <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">row</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Write it down</span>
</span><span class='line'><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">content</span><span class="p">)):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">content</span><span class="p">[</span><span class="n">row</span><span class="p">])):</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="n">content</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span>
</span><span class='line'>        <span class="c"># If it&#39;s a header</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">row</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">header_style</span><span class="p">)</span>
</span><span class='line'>            <span class="k">continue</span>
</span><span class='line'>        <span class="c"># If it&#39;s a date</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">==</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">date_format</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Set filename</span>
</span><span class='line'><span class="n">today</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">today</span><span class="p">()</span>
</span><span class='line'><span class="n">file_name</span> <span class="o">=</span> <span class="s">&#39;my_file_{}.xls&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">today</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&quot;%Y-%m-</span><span class="si">%d</span><span class="s">&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Save the file</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>
</span><span class='line'><span class="n">xls</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Build an email</span>
</span><span class='line'><span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEMultipart</span><span class="p">()</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Hi, here is your file&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_from</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;To&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_to</span>
</span><span class='line'><span class="c"># What a recipient sees if they don&#39;t use an email reader</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">preamble</span> <span class="o">=</span> <span class="s">&#39;Multipart message.</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># The attachment</span>
</span><span class='line'><span class="n">part</span> <span class="o">=</span> <span class="n">MIMEApplication</span><span class="p">(</span><span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">())</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s">&#39;Content-Disposition&#39;</span><span class="p">,</span> <span class="s">&#39;attachment&#39;</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="n">file_name</span><span class="p">)</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s">&#39;application/vnd.ms-excel; charset=UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Connect to Amazon SES</span>
</span><span class='line'><span class="n">ses</span> <span class="o">=</span> <span class="n">client</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;ses&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">region_name</span><span class="o">=</span><span class="s">&#39;us-east-1&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="p">],</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="c"># And finally, send the email</span>
</span><span class='line'><span class="n">ses</span><span class="o">.</span><span class="n">send_raw_email</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Source</span><span class="o">=</span><span class="n">email_from</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Destinations</span><span class="o">=</span><span class="p">[</span><span class="n">email_to</span><span class="p">],</span>
</span><span class='line'>    <span class="n">RawMessage</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;Data&#39;</span><span class="p">:</span> <span class="n">msg</span><span class="o">.</span><span class="n">as_string</span><span class="p">(),</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we need to create a ZIP archive first:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">zipfile</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">tempfile</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">email</span> <span class="kn">import</span> <span class="n">encoders</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">email.mime.multipart</span> <span class="kn">import</span> <span class="n">MIMEMultipart</span><span class="p">,</span> <span class="n">MIMEBase</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ....</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>
</span><span class='line'><span class="n">xls</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create zip file</span>
</span><span class='line'><span class="n">zf</span> <span class="o">=</span> <span class="n">tempfile</span><span class="o">.</span><span class="n">TemporaryFile</span><span class="p">(</span><span class="n">prefix</span><span class="o">=</span><span class="s">&#39;fileprefix&#39;</span><span class="p">,</span> <span class="n">suffix</span><span class="o">=</span><span class="s">&#39;.zip&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">zip</span> <span class="o">=</span> <span class="n">zipfile</span><span class="o">.</span><span class="n">ZipFile</span><span class="p">(</span><span class="n">zf</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">zip</span><span class="o">.</span><span class="n">writestr</span><span class="p">(</span><span class="n">file_name</span><span class="p">,</span> <span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">())</span>
</span><span class='line'><span class="nb">zip</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="n">zf</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEMultipart</span><span class="p">()</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Hi, here is your file&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_from</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;To&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_to</span>
</span><span class='line'>
</span><span class='line'><span class="c"># What a recipient sees if they don&#39;t use an email reader</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">preamble</span> <span class="o">=</span> <span class="s">&#39;Multipart message.</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># the attachment</span>
</span><span class='line'><span class="n">part</span> <span class="o">=</span> <span class="n">MIMEBase</span><span class="p">(</span><span class="s">&#39;application&#39;</span><span class="p">,</span> <span class="s">&#39;zip&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">set_payload</span><span class="p">(</span><span class="n">zf</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="n">encoders</span><span class="o">.</span><span class="n">encode_base64</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;Content-Disposition&#39;</span><span class="p">,</span> <span class="s">&#39;attachment&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">filename</span><span class="o">=</span><span class="s">u&#39;{}.zip&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">file_name</span><span class="p">),</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
</span><span class='line'><span class="c"># ....</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo pasar variable desde una vista a formulario en Django]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/21/como-pasar-variable-desde-una-vista-a-formulario-en-django/"/>
    <updated>2016-10-21T14:07:56-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/21/como-pasar-variable-desde-una-vista-a-formulario-en-django</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>views.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">MyCreateView</span><span class="p">(</span><span class="n">CreateView</span><span class="p">):</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="n">MyModel</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="s">&#39;myapp/my_form.html&#39;</span>
</span><span class='line'>    <span class="n">form_class</span> <span class="o">=</span> <span class="n">MyForm</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_form_kwargs</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">kwargs</span> <span class="o">=</span> <span class="nb">super</span><span class="p">(</span><span class="n">MyCreateView</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">get_form_kwargs</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># La variable que queremos pasar al formulario</span>
</span><span class='line'>        <span class="n">kwargs</span><span class="o">.</span><span class="n">update</span><span class="p">({</span><span class="s">&#39;current_user&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">user</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">kwargs</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>forms.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">MyForm</span><span class="p">(</span><span class="n">forms</span><span class="o">.</span><span class="n">ModelForm</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Recibir la variable y borrarla del listado de argumentos.</span>
</span><span class='line'>        <span class="n">current_user</span> <span class="o">=</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s">&#39;current_user&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">super</span><span class="p">(</span><span class="n">MyForm</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Albóndigas de lentejas]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/17/albondigas-de-lentejas/"/>
    <updated>2016-10-17T07:38:52-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/17/albondigas-de-lentejas</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas1.jpg"></p>

<!-- more -->


<p>Cocinar lentejas con cebolla y sal</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas2.jpg" width="300"></p>

<p>Licuar todo en una licuadora</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas3.jpg" width="300">
<img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas4.jpg" width="300"></p>

<p>Mezclar con huevos y migas de pan</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas5.jpg" width="300"></p>

<p>Fritar con aceite</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas6.jpg" width="300">
<img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas7.jpg" width="300"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mierdero de las semanas]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/07/mierdero-de-las-semanas/"/>
    <updated>2016-10-07T11:53:05-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/07/mierdero-de-las-semanas</id>
    <content type="html"><![CDATA[<p>Bienvenidos al mierdero de las semanas:</p>

<table>
<thead>
<tr>
<th>Lenguaje                       </th>
<th>Sun  </th>
<th> Mon </th>
<th> Tue </th>
<th> Wed </th>
<th> Thu </th>
<th> Fri </th>
<th> Sat</th>
</tr>
</thead>
<tbody>
<tr>
<td>postgresql: <code>EXTRACT(DOW...)</code>  </td>
<td>  0  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6</td>
</tr>
<tr>
<td>ruby: <code>time.wday</code>              </td>
<td>  0  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6</td>
</tr>
<tr>
<td>Python: <code>isoweekday()</code>         </td>
<td>  7  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6</td>
</tr>
<tr>
<td>Python: <code>weekday()</code>            </td>
<td>  6  </td>
<td>  0  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5</td>
</tr>
<tr>
<td>mysql: <code>DAYOFWEEK(...)</code>        </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6  </td>
<td>  7</td>
</tr>
<tr>
<td>Java: <code>DayOfWeek(...)</code>         </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6  </td>
<td>  7</td>
</tr>
<tr>
<td>Erlang: <code>day_of_the_week(...)</code> </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6  </td>
<td>  7</td>
</tr>
</tbody>
</table>


<p>Enlaces:</p>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html#function_dayofweek">mysql: function dayofweek</a></li>
<li><a href="https://www.postgresql.org/docs/current/static/functions-datetime.html">postgresql: function datetime</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html">java: function DayOfWeek</a></li>
<li><a href="http://erlang.org/doc/man/calendar.html">erlang calendar</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Herramientas para el desarrollo que nos hacen la vida más fácil]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/09/08/herramienta-para-el-desarrollo-que-nos-hacen-la-vida-mas-facil/"/>
    <updated>2016-09-08T08:48:12-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/09/08/herramienta-para-el-desarrollo-que-nos-hacen-la-vida-mas-facil</id>
    <content type="html"><![CDATA[<h2>Editores</h2>

<ul>
<li><a href="https://www.jetbrains.com/pycharm/">PyCharm</a>: editor para Python.</li>
<li><a href="https://www.sublimetext.com/">Sublime Text</a></li>
</ul>


<h3>Plugins para Sublime Text</h3>

<p>Para llamar <a href="https://packagecontrol.io/installation">Package Control</a> desde Sublime Text: <code>Control+Shift+P</code>, escribe &ldquo;install&rdquo; y selecciona <code>Package Control: Install Package</code> en Command Palette.</p>

<ul>
<li><a href="https://github.com/kemayo/sublime-text-git">Git</a></li>
<li><a href="https://github.com/jisaacks/GitGutter">GitGutter</a></li>
<li><a href="https://packagecontrol.io/packages/Color%20Highlighter">Color Highlighter</a></li>
<li><a href="https://packagecontrol.io/packages/SublimeLinter">SublimeLinter</a></li>
<li>EditorConfig</li>
<li><a href="https://packagecontrol.io/packages/AngularJS">AngularJS</a></li>
<li>Markdown Extended</li>
<li><a href="https://habrahabr.ru/post/235901/">Лучшие плагины для Sublime Text</a></li>
<li><a href="https://habrahabr.ru/post/244681/">Sublime Text для фронтэнд-разработчика</a></li>
<li><a href="http://aslanbakan.com/en/blog/33-essential-sublime-text-plugins-for-all-developers/">33 Essential Sublime Text plugins for all developers</a></li>
</ul>


<h2>Editar y compartir código en línea</h2>

<ul>
<li><a href="http://codepen.io/">CodePen</a>: editor de código HTML/JS/CSS en línea.</li>
<li><a href="https://repl.it/languages/python3">repl.it</a>: editor de Python 3 que permite compartir el código.</li>
<li><a href="http://dillinger.io/">Dillinger</a>: editor de Markdown.</li>
</ul>


<h2>Bases de datos</h2>

<ul>
<li><a href="https://www.pgadmin.org/">pgAdmin</a>: administrador de base de datos PostgreSQL.</li>
<li><a href="https://sqlectron.github.io/">Sqlectron</a></li>
</ul>


<h2>Git</h2>

<ul>
<li><a href="https://www.gitkraken.com/">GitKraken</a></li>
<li><a href="https://github.com/Axiacore/axiacore_utils/tree/master/git-bash-prompt">Bash prompt</a> para mostrar mostrar información de un repositorio Git.</li>
</ul>


<h2>Screenshots</h2>

<ul>
<li><a href="http://shutter-project.org/">Shutter</a>: aplicación para tomar y editar screetshots en Linux.</li>
</ul>


<h2>REST</h2>

<ul>
<li><a href="https://www.getpostman.com/">PostMan</a>: es una extensión del Google Chrome, que permite el envío de peticiones HTTP.</li>
</ul>


<h2>Diff y validación</h2>

<ul>
<li><a href="https://www.diffchecker.com">Diffchecker</a>: comparar dos textos en línea.</li>
<li><a href="https://jsonformatter.curiousconcept.com/">JSON Formatter</a>: validar y formatear objetos JSON.</li>
</ul>


<h2>CSS/Iconos</h2>

<ul>
<li><a href="http://fontawesome.io/">Font Awesome</a></li>
<li><a href="https://chrome.google.com/webstore/detail/perfectpixel-by-welldonec/dkaagdgjmgdmbnecmcefdhjekcoceebi?hl=es">PerfectPixel</a>: ayuda comparar el diseño de la página web (visuales) con el resultado del mismo en el navegador.</li>
<li><a href="http://colorbrewer2.org/">Color Brewer 2.0</a>: color advice for cartography</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Las series que marcaron los años noventa en Rusia]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/09/04/las-series-que-marcaron-los-anos-noventa-en-rusia/"/>
    <updated>2016-09-04T18:29:40-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/09/04/las-series-que-marcaron-los-anos-noventa-en-rusia</id>
    <content type="html"><![CDATA[<h6>«Hélène et les garçons» (Francia)</h6>

<p>Una seria francesa acerca de un grupo de estudiantes: Helena y sus amigos.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/elen.jpg" width="500" title="'Hélène et les garçons'" ></p>

<p><a href="https://www.youtube.com/watch?v=tndeSnIQ1Wk">https://www.youtube.com/watch?v=tndeSnIQ1Wk</a></p>

<!-- more -->


<h5>«Farmacia de guardia» (España)</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/farmacia.jpg" width="500" title="'Farmacia de guardia'" ></p>

<p>Comedia española acerca de una farmacéutica separada Lourdes Cano, su ex esposo
y dos hijos, quienes están constantemente atrapados en situaciones ridículas.
La acción de la serie casi nunca fue más allá de las paredes de la farmacia -
la propiedad del personaje principal.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/q2xuCHG0E14" frameborder="0" allowfullscreen></iframe>


<h5>«Highlander» (Canadá, Francia)</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/DUNKAN.jpg" width="500" title="'Highlander'" ></p>

<p>La serie acerca de las aventuras de un señor Duncan MacLeod - el representante
de la familia de los inmortales y que actualmente tiene 400 años de edad.
A lo largo de la serie el protagonista trata de sobrevivir en peleas con
otros miembros del clan.</p>

<p><a href="https://www.youtube.com/watch?v=k3VhPt_D8oQ">https://www.youtube.com/watch?v=k3VhPt_D8oQ</a></p>

<h5>«Spellbinder» (Australia, Polonia)</h5>

<p>Es una serie de televisión de ciencia ficción australiana acerca de
los estudiantes de colegio que se encuentran viajando entre los mundos paralelos.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/jyvSPp8lJzI?list=PLOychhOU3UPhnHVJwXqWSfQAWI8hBwZg5" frameborder="0" allowfullscreen></iframe>


<h5>«Fantaghirò, The Cave of the Golden Rose» (Italia)</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/golden_rose.jpg" width="500" title="'The Cave of the Golden Rose'" ></p>

<p>Una seria italiana acerca de la princesa valiente Fantagiro que no puede vivir sin aventuras y por eso pretende ser un caballero.</p>

<h5>«Agatha Christie&rsquo;s Poirot» (Reino Unido)</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/poirot.jpeg" width="500" title="'Agatha Christie's Poirot'" ></p>

<p>Una serie basa en los libros de Agatha Christie.</p>

<h5>«Dr. Quinn, Medicine Woman» (Estados Unidos)</h5>

<p>Una serie estadounidense acerca de una médica Michaela Quinn que proviene
de una familia rica y viaja al salvaje oeste para curar y salvar a los desfavorecidos.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/medicine_woman.jpg" width="500" title="'Dr. Quinn, Medicine Woman'" ></p>

<h5>«Walker, Texas Ranger» (Estados Unidos)</h5>

<p>Cuando Chuck Norris corta cebolla, la cebolla llora.</p>

<h5>«Nash Bridges» (Estados Unidos)</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/nash_bridges.jpg" width="500" title="'Nash Bridges'" ></p>

<h5>«Muñeca brava» (Argentina)</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/muneca_brava.jpg" width="500" title="'Muñeca brava'" ></p>

<p>Y otros:</p>

<ul>
<li>Flipper (Estados Unidos)</li>
<li>Sunset Beach (Estados Unidos)</li>
<li>Babylon 5 (Estados Unidos)</li>
<li>Charmed (Estados Unidos)</li>
<li>Friends (Estados Unidos)</li>
<li>Xena: Warrior Princess (Estados Unidos, Nueva Zelanda)</li>
<li>Columbo (Estados Unidos)</li>
<li>Alf (Estados Unidos)</li>
<li>Beverly Hills, 90210 (Estados Unidos)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Múltiples bases de datos en Django]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/08/31/multiples-bases-de-datos-en-django/"/>
    <updated>2016-08-31T11:15:01-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/08/31/multiples-bases-de-datos-en-django</id>
    <content type="html"><![CDATA[<p>Tenemos dos tablas con esquemas iguales dos en bases de datos diferentes: <code>production</code> y <code>history</code>.</p>

<figure class='code'><figcaption><span>settings.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">DATABASE_ROUTERS</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;routers.HistoricRouter&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.postgresql&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;HOST&#39;</span><span class="p">:</span> <span class="s">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="s">&#39;production&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;USER&#39;</span><span class="p">:</span> <span class="s">&#39;secret&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;PASSWORD&#39;</span><span class="p">:</span> <span class="s">&#39;secret&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&#39;historical&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.postgresql&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;HOST&#39;</span><span class="p">:</span> <span class="s">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="s">&#39;history&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;USER&#39;</span><span class="p">:</span> <span class="s">&#39;secret&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;PASSWORD&#39;</span><span class="p">:</span> <span class="s">&#39;secret&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Escribimos un router para definir a qué base de datos hacer la petición:</p>

<figure class='code'><figcaption><span>routers.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">HistoricRouter</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    A router to control all database operations on models in the historic application.</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">db_for_read</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="o">**</span><span class="n">hints</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        Attempts to read historic models go to historical.</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">_meta</span><span class="o">.</span><span class="n">app_label</span> <span class="o">==</span> <span class="s">&#39;historic&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&#39;historical&#39;</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">db_for_write</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="o">**</span><span class="n">hints</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        Attempts to write historic models go to historical.</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">_meta</span><span class="o">.</span><span class="n">app_label</span> <span class="o">==</span> <span class="s">&#39;historic&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&#39;historical&#39;</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">allow_relation</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj1</span><span class="p">,</span> <span class="n">obj2</span><span class="p">,</span> <span class="o">**</span><span class="n">hints</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        Allow relations if a model in the historic app is involved.</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">obj1</span><span class="o">.</span><span class="n">_meta</span><span class="o">.</span><span class="n">app_label</span> <span class="o">==</span> <span class="s">&#39;historic&#39;</span> <span class="ow">or</span> \
</span><span class='line'>            <span class="n">obj2</span><span class="o">.</span><span class="n">_meta</span><span class="o">.</span><span class="n">app_label</span> <span class="o">==</span> <span class="s">&#39;historic&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">allow_migrate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">db</span><span class="p">,</span> <span class="n">app_label</span><span class="p">,</span> <span class="n">model_name</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">**</span><span class="n">hints</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        Make sure the historic app only appears in the &#39;historical&#39; database.</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">app_label</span> <span class="o">==</span> <span class="s">&#39;historic&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">db</span> <span class="o">==</span> <span class="s">&#39;historical&#39;</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">None</span>
</span></code></pre></td></tr></table></div></figure>


<p>En nuestros modelos especificamos <code>app_label</code> para referirnos a la base de datos distinta a <code>default</code>:</p>

<figure class='code'><figcaption><span>models.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Author</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class='line'>        <span class="n">db_table</span> <span class="o">=</span> <span class="s">&#39;authors&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">AbstractBook</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">author</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">&#39;books.Author&#39;</span><span class="p">,</span> <span class="n">related_name</span><span class="o">=</span><span class="s">&#39;books&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">created_at</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class='line'>        <span class="n">unmanaged</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>        <span class="n">abstract</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Book</span><span class="p">(</span><span class="n">Book</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class='line'>        <span class="n">db_table</span> <span class="o">=</span> <span class="s">&#39;books&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HistoricBook</span><span class="p">(</span><span class="n">Book</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class='line'>        <span class="n">unmanaged</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>        <span class="n">db_table</span> <span class="o">=</span> <span class="s">&#39;books&#39;</span>
</span><span class='line'>        <span class="n">app_label</span> <span class="o">=</span> <span class="s">&#39;historic&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>La petición <code>Book.objects.all()</code> va a traer libros de la base de datos <code>production</code> y <code>HistoricBook.objects.all()</code> - de la base de datos <code>history</code>.</p>

<p>Modificando <code>allow_relation</code> en nuestro router, podemos permitir llaves foráneas entre modelos de diferentes bases de datos:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">allow_relation</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj1</span><span class="p">,</span> <span class="n">obj2</span><span class="p">,</span> <span class="o">**</span><span class="n">hints</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enlaces:</p>

<ul>
<li><a href="https://docs.djangoproject.com/en/1.10/topics/db/multi-db/#cross-database-relations">Django: Cross-database relations</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo hacer integración con Tpaga API usando Python]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/08/18/como-hacer-integracion-con-tpaga-api-usando-python/"/>
    <updated>2016-08-18T08:53:45-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/08/18/como-hacer-integracion-con-tpaga-api-usando-python</id>
    <content type="html"><![CDATA[<p><a href="https://tpaga.co/">Tpaga</a> es una plataforma que permite recibir pagos electrónicos. Tiene una estructura sencilla para entender y fácil para usar.</p>

<p>Para obtener nuestros claves de acceso y conectarnos con el API de Tpaga, creamos una cuenta en el &ldquo;sandbox&rdquo; de la plataforma: <a href="https://sandbox.tpaga.co/">sandbox.tpaga.co</a>.</p>

<p><img src="http://blog.vero4ka.info/images/tpaga_sandbox_login.png"></p>

<p>Al registrarnos podemos ver que ahora tenemos dos claves que podemos usar para la autenticación: <strong>Private Api Key</strong> y <strong>Public Api Key</strong>:</p>

<p><img src="http://blog.vero4ka.info/images/tpaga_sandbox_dashboard.png"></p>

<!-- more -->


<p>Tpaga tiene unos modelos básicos que nos permitirán organizar nuestros datos: <strong>Customers</strong> (Clientes), <strong>Credit Cards</strong> (Tarjetas de crédito) asociados a los Clientes y <strong>Charges</strong> (Transacciónes o cobros por tarjeta de crédito).</p>

<p>Ahora, cuando entendemos la estructura, podemos empezar a escribir nuestro programa en Python. Primero instalamos la librería <code>requests</code> que nos permitirá hacer peticiones HTTP.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install requests
</span></code></pre></td></tr></table></div></figure>


<p>Tpaga, como muchos otros sitios web, acepta la autenticación mediante HTTP Basic Auth. La librería <code>requests</code> provee una forma fácil de usarla:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">TPAGA_PRIVATE_TOKEN</span> <span class="o">=</span> <span class="s">&#39;d13fr8n7vhvkuch3lq2ds5qhjnd2pdd2&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">tpaga_url</span> <span class="o">=</span> <span class="s">&#39;https://sandbox.tpaga.co/api/customer&#39;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">tpaga_url</span><span class="p">,</span> <span class="n">json</span><span class="o">=</span><span class="p">{},</span> <span class="n">auth</span><span class="o">=</span><span class="p">(</span><span class="n">TPAGA_PRIVATE_TOKEN</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">))</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">Response</span> <span class="p">[</span><span class="mi">201</span><span class="p">]</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Escribimos un código sencillo que nos permitirá conectarse al API de Tpaga y mandar peticiones:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">urllib</span> <span class="kn">import</span> <span class="n">parse</span> <span class="k">as</span> <span class="n">urlparse</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'>
</span><span class='line'><span class="n">TPAGA_PRIVATE_TOKEN</span> <span class="o">=</span> <span class="s">&#39;d13fr8n7vhvkuch3lq2ds5qhjnd2pdd2&#39;</span>
</span><span class='line'><span class="n">TPAGA_API_URL</span> <span class="o">=</span> <span class="s">&#39;https://sandbox.tpaga.co/api/&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TpagaTestClient</span><span class="p">:</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span>
</span><span class='line'>            <span class="bp">self</span><span class="p">,</span>
</span><span class='line'>            <span class="n">private_token</span><span class="o">=</span><span class="n">TPAGA_PRIVATE_TOKEN</span><span class="p">,</span>
</span><span class='line'>            <span class="n">base_url</span><span class="o">=</span><span class="n">TPAGA_API_URL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">base_url</span> <span class="o">=</span> <span class="n">base_url</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">private_token</span> <span class="o">=</span> <span class="n">private_token</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">api_post</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">token</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">token</span><span class="p">:</span>
</span><span class='line'>            <span class="n">token</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">private_token</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span>
</span><span class='line'>            <span class="n">urlparse</span><span class="o">.</span><span class="n">urljoin</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">base_url</span><span class="p">,</span> <span class="n">path</span><span class="p">),</span>
</span><span class='line'>            <span class="n">json</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">auth</span><span class="o">=</span><span class="p">(</span><span class="n">token</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">fail</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
</span><span class='line'>        <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span>
</span><span class='line'>            <span class="s">&#39;Whoops, got</span><span class="se">\n\n</span><span class="s">STATUS: {}</span><span class="se">\n\n</span><span class="s">HEADERS: {}</span><span class="se">\n\n</span><span class="s">CONTENT: {}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
</span><span class='line'>                <span class="n">response</span><span class="o">.</span><span class="n">status_code</span><span class="p">,</span>
</span><span class='line'>                <span class="n">response</span><span class="o">.</span><span class="n">headers</span><span class="p">,</span>
</span><span class='line'>                <span class="n">response</span><span class="o">.</span><span class="n">content</span><span class="p">,</span>
</span><span class='line'>            <span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">json_from_response</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">expected_http_code</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">expected_http_code</span><span class="p">:</span>
</span><span class='line'>            <span class="n">expected_http_code</span> <span class="o">=</span> <span class="p">[</span><span class="mi">201</span><span class="p">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">expected_http_code</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">fail</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">response</span><span class="o">.</span><span class="n">content</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>El método <code>__init__</code> nos va a inicializar nuestro cliente, <code>api_post</code> - mandar peticiones POST a la ruta especificada (<code>path</code>) del API, <code>json_from_response</code> - obtener un objeto JSON de la respuesta de API, <code>fail</code> - imprimir los detalles de la respuesta si la petición no ha terminado con éxito.</p>

<h3>Crear un cliente</h3>

<p>Para crear nuestro cliente, vamos a enviar una petición POST al endpoint <code>/customer</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">TpagaTestClient</span><span class="p">:</span>
</span><span class='line'>    <span class="c"># ...</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">create_customer</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">api_post</span><span class="p">(</span><span class="s">&#39;customer&#39;</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">json_from_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">client</span> <span class="o">=</span> <span class="n">TpagaTestClient</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">customer</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">create_customer</span><span class="p">({</span>
</span><span class='line'>    <span class="s">&#39;firstName&#39;</span><span class="p">:</span> <span class="s">&#39;Horns and Hoofs&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;lastName&#39;</span><span class="p">:</span> <span class="s">&#39;Perez&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;email&#39;</span><span class="p">:</span> <span class="s">&#39;hornsandhoofs@example.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;phone&#39;</span><span class="p">:</span> <span class="s">&#39;012345678&#39;</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">customer_token</span> <span class="o">=</span> <span class="n">customer</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;customer_token&#39;</span><span class="p">,</span> <span class="n">customer_token</span><span class="p">)</span>
</span><span class='line'><span class="n">customer_token</span> <span class="n">qoodmh04sh7ghpp58opn5g0hssg4slq0</span>
</span></code></pre></td></tr></table></div></figure>


<p>Otros campos que podemos enviar para guardar nuestros clientes se puede encontrar aquí: <a href="https://tpaga.co/docs/swaggers/v2#!/Customer/createCustomer">tpaga.co/docs/swaggers/v2#!/Customer/createCustomer</a>.</p>

<p>En el dashboard de Tpaga podemos asegurarnos de que el ciente <a href="https://en.wikipedia.org/wiki/The_Little_Golden_Calf#Cultural_influence">&ldquo;Horns and Hoofs&rdquo;</a> fue creado exitosamente:</p>

<p><img src="http://blog.vero4ka.info/images/tpaga_dashboard_customers.png"></p>

<p>Teniendo un token de nuestro cliente, podemos agregarle una tarjeta de crédito.</p>

<h3>Registrar una tarjeta de crédito y asociarla al cliente</h3>

<p>La creación de la tarjeta de crédito se realiza en dos pasos: tokenizar la tarjeta y asociarla un cliente.</p>

<p>Tpaga usa <strong>tokenización</strong>, que nos permite registrar las tarjetas de crédito de nuestros clientes de forma segura. Los clientes ingresan los datos en nuestro sitio web, y estos datos los enviamos directamente al API de Tpaga (desde el código JavaScript), allí serán tokenizados y Tpaga nos devuelve un token temporal con el que podemos proceder con el registro de la tarjeta (desde el código Python).</p>

<p>Creamos un formulario HTML para obtener los datos de la tarjeta de crédito:</p>

<p><img src="http://blog.vero4ka.info/images/tpaga_credit_card_form.png"></p>

<p>Para hacer un formulario bonito, usamos <a href="http://bootsnipp.com/snippets/featured/credit-card-payment-with-stripe">la plantilla de Bootstrap</a> y las librerías <a href="https://jquery.com/">jQuery</a>, <a href="https://jqueryvalidation.org/">jQuery Validation Plugin</a> y <a href="https://github.com/stripe/jquery.payment">jQuery.payment</a> para validar los datos.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">id=</span><span class="s">&quot;credit_card_form&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">name=</span><span class="s">&quot;credit_card_form&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-xs-12&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span> <span class="na">id=</span><span class="s">&quot;div_id_primaryAccountNumber&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">&quot;control-label requiredField&quot;</span> <span class="na">for=</span><span class="s">&quot;id_primaryAccountNumber&quot;</span><span class="nt">&gt;</span>Número de la tarjeta<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;controls&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;input-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;textinput textInput form-control&quot;</span> <span class="na">id=</span><span class="s">&quot;id_primaryAccountNumber&quot;</span> <span class="na">name=</span><span class="s">&quot;primaryAccountNumber&quot;</span> <span class="na">required=</span><span class="s">&quot;&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;input-group-addon&quot;</span><span class="nt">&gt;&lt;i</span> <span class="na">class=</span><span class="s">&quot;fa fa-credit-card&quot;</span><span class="nt">&gt;&lt;/i&gt;&lt;/span&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-xs-12&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span> <span class="na">id=</span><span class="s">&quot;div_id_cardHolderName&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">&quot;control-label requiredField&quot;</span> <span class="na">for=</span><span class="s">&quot;id_cardHolderName&quot;</span><span class="nt">&gt;</span>Nombre del tarjetahabiente<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;controls&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;textinput textInput form-control&quot;</span> <span class="na">id=</span><span class="s">&quot;id_cardHolderName&quot;</span> <span class="na">name=</span><span class="s">&quot;cardHolderName&quot;</span> <span class="na">required=</span><span class="s">&quot;&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-xs-3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span> <span class="na">id=</span><span class="s">&quot;div_id_expirationMonth&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">&quot;control-label requiredField&quot;</span> <span class="na">for=</span><span class="s">&quot;id_expirationMonth&quot;</span><span class="nt">&gt;</span>Fecha de expiración<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;controls&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;select</span> <span class="na">class=</span><span class="s">&quot;select form-control&quot;</span> <span class="na">id=</span><span class="s">&quot;id_expirationMonth&quot;</span> <span class="na">name=</span><span class="s">&quot;expirationMonth&quot;</span> <span class="na">required=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;01&quot;</span><span class="nt">&gt;</span>Enero<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;02&quot;</span><span class="nt">&gt;</span>Febrero<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;03&quot;</span><span class="nt">&gt;</span>Marzo<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;04&quot;</span><span class="nt">&gt;</span>Abril<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;05&quot;</span><span class="nt">&gt;</span>Mayo<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;06&quot;</span><span class="nt">&gt;</span>Junio<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;07&quot;</span><span class="nt">&gt;</span>Julio<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;08&quot;</span><span class="nt">&gt;</span>Agosto<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;09&quot;</span><span class="nt">&gt;</span>Septiembre<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;10&quot;</span><span class="nt">&gt;</span>Octubre<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;11&quot;</span><span class="nt">&gt;</span>Noviembre<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;12&quot;</span><span class="nt">&gt;</span>Diciembre<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/select&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-xs-3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span> <span class="na">id=</span><span class="s">&quot;div_id_expirationYear&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">&quot;control-label requiredField&quot;</span> <span class="na">for=</span><span class="s">&quot;id_expirationYear&quot;</span><span class="nt">&gt;</span>Año<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;controls&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;select</span> <span class="na">class=</span><span class="s">&quot;select form-control&quot;</span> <span class="na">id=</span><span class="s">&quot;id_expirationYear&quot;</span> <span class="na">name=</span><span class="s">&quot;expirationYear&quot;</span> <span class="na">required=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2016&quot;</span><span class="nt">&gt;</span>2016<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2017&quot;</span><span class="nt">&gt;</span>2017<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2018&quot;</span><span class="nt">&gt;</span>2018<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2019&quot;</span><span class="nt">&gt;</span>2019<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2020&quot;</span><span class="nt">&gt;</span>2020<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2021&quot;</span><span class="nt">&gt;</span>2021<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2022&quot;</span><span class="nt">&gt;</span>2022<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2023&quot;</span><span class="nt">&gt;</span>2023<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2024&quot;</span><span class="nt">&gt;</span>2024<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>              <span class="nt">&lt;option</span> <span class="na">value=</span><span class="s">&quot;2025&quot;</span><span class="nt">&gt;</span>2025<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/select&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-xs-3 pull-right&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span> <span class="na">id=</span><span class="s">&quot;div_id_cvc&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">&quot;control-label requiredField&quot;</span> <span class="na">for=</span><span class="s">&quot;id_cvc&quot;</span><span class="nt">&gt;</span>CVC<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>          <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;controls&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;textinput textInput form-control&quot;</span> <span class="na">id=</span><span class="s">&quot;id_cvc&quot;</span> <span class="na">maxlength=</span><span class="s">&quot;10&quot;</span> <span class="na">name=</span><span class="s">&quot;cvc&quot;</span> <span class="na">required=</span><span class="s">&quot;&quot;</span> <span class="na">type=</span><span class="s">&quot;password&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;buttonHolder&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;btn btn-primary bg-purple&quot;</span> <span class="na">id=</span><span class="s">&quot;submit-id-submit&quot;</span> <span class="na">name=</span><span class="s">&quot;submit&quot;</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;Guardar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al final, tenemos un formulario con los siguientes campos:</p>

<ul>
<li><code>primaryAccountNumber</code> para el número de la tarjeta,</li>
<li><code>cardHolderName</code> para el nombre del tarjetahabiente,</li>
<li><code>expirationMonth</code> para el mes de expiración,</li>
<li><code>expirationYear</code> para el año de expiración,</li>
<li><code>cvc</code> para el código CVC.</li>
</ul>


<p>Creamos otro formulario oculto que usaremos para enviar el token temporal de la tarjeta de crédito a nuestro servidor:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">id=</span><span class="s">&quot;associate_customer_cc_form&quot;</span> <span class="na">action=</span><span class="s">&quot;/asociar-cliente-tarjeta-credito&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;tmp_cc_token&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el código JavaScript obtenemos los datos de la tarjeta de crédito y los enviamos al endpoint de Tpaga <code>tokenize/credit_card</code>. Este endpoint convierte los datos sensibles de la tarjeta en un token, el cual será empleado para ejecutar el procesamiento de las transacciones sin necesidad que los datos sensibles del tarjetahabiente pasen por nuestro servidor. Si la información de la tarjeta tiene errores, Tpaga nos devuelve un JSON con el nombre de campo y el mensaje de error, y en el caso contrario - token temporal de la tarjeta.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">serializeObject</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">o</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">serializeArray</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">].</span><span class="nx">push</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">o</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">]];</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="nx">o</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">o</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">o</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">associate_customer_cc</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">text_status</span><span class="p">,</span> <span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;[name=&quot;tmp_cc_token&quot;]&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">token</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">// Enviar el token temporal a nuestro servidor</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#associate_customer_cc_form&#39;</span><span class="p">).</span><span class="nx">submit</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">show_errors</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">text_status</span><span class="p">,</span> <span class="nx">error_thrown</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Mostrar errores de validación</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">status</span> <span class="o">==</span> <span class="mi">401</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.payment-errors&#39;</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;.row&#39;</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.payment-errors&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s1">&#39;Error de autenticación a la plataforma de pagos.&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">status</span> <span class="o">==</span> <span class="mi">422</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.payment-errors&#39;</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;.row&#39;</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.payment-errors&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s1">&#39;Datos erróneos en el campo &#39;</span> <span class="o">+</span> <span class="nx">$</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form label[for=&quot;id_&#39;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">.</span><span class="nx">errors</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">field</span> <span class="o">+</span> <span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">()));</span>
</span><span class='line'>          <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">tokenize_credit_card</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.payment-errors&#39;</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;.row&#39;</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.payment-errors&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">tpaga_public_key</span> <span class="o">=</span> <span class="s1">&#39;pk_test_qvbvuthlvqpijnr0elmtg5jh&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Enviar los datos de la tarjeta directamente a Tpaga y obtener el token temporal</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="s1">&#39;https://sandbox.tpaga.co/api/tokenize/credit_card&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">beforeSend</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">xhr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Basic &#39;</span> <span class="o">+</span> <span class="nx">btoa</span><span class="p">(</span><span class="nx">tpaga_public_key</span> <span class="o">+</span> <span class="s1">&#39;:&#39;</span><span class="p">));</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">username</span><span class="o">:</span> <span class="nx">tpaga_public_key</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">data</span><span class="o">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">serializeObject</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">contentType</span><span class="o">:</span> <span class="s1">&#39;application/json&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">dataType</span><span class="o">:</span> <span class="s1">&#39;json&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">success</span><span class="o">:</span> <span class="nx">associate_customer_cc</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">error</span><span class="o">:</span> <span class="nx">show_errors</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#credit_card_form&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">,</span> <span class="nx">tokenize_credit_card</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>donde <code>tpaga_public_key</code> es <strong>la llave PÚBLICA</strong> que copiamos desde el dashboard de Tpaga.</p>

<p>Ahora usando el token temporal de la tarjeta (<code>tmp_cc_token</code>) podemos asociarla al cliente:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">TpagaTestClient</span><span class="p">:</span>
</span><span class='line'>    <span class="c"># ...</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">assoc_cc_to_customer</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">customer_token</span><span class="p">,</span> <span class="n">cc_temp_token</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cdata</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;token&#39;</span><span class="p">:</span> <span class="n">cc_temp_token</span> <span class="p">}</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">api_post</span><span class="p">(</span>
</span><span class='line'>            <span class="s">&#39;customer/{}/credit_card_token&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">customer_token</span><span class="p">),</span> <span class="n">cdata</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">json_from_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">cc_temp_token</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">POST</span><span class="p">[</span><span class="s">&#39;tmp_cc_token&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">credit_card</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">assoc_cc_to_customer</span><span class="p">(</span>
</span><span class='line'>    <span class="n">customer_token</span><span class="o">=</span><span class="n">customer_token</span><span class="p">,</span>
</span><span class='line'>    <span class="n">cc_temp_token</span><span class="o">=</span><span class="n">cc_temp_token</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">credit_card_token</span> <span class="o">=</span> <span class="n">credit_card</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&#39;credit_card_token&#39;</span><span class="p">,</span> <span class="n">credit_card_token</span><span class="p">)</span>
</span><span class='line'><span class="n">credit_card_token</span> <span class="mi">2</span><span class="n">k54foql0hki0ot7avrg9nhpvbpqam55</span>
</span></code></pre></td></tr></table></div></figure>


<p>Mirando la tabla de <a href="https://sandbox.tpaga.co/merchantDashboard/cards">sandbox.tpaga.co/merchantDashboard/cards</a> vemos que nuestra tarjeta quedó registrada con Tpaga.</p>

<p>Opcionalmente, dependiendo de la configuración de nuestra cuenta en Tpaga, Tpaga puede hacer un cargo de prueba a la tarjeta de crédito al crearla, automáticamente. En este caso, el valor la respuesta <code>response['validationCharge']['successful']</code> nos indica si el pago fue exisoto, y <code>response['validationCharge']['errorCode']</code> tiene el código de error. Por ejemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;id&#39;</span><span class="p">:</span> <span class="s">&#39;r6ae7t2u7dmt7injv5c2bg9sqbh0krtr&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;addressLine2&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;addressCountry&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;addressState&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;expirationMonth&#39;</span><span class="p">:</span> <span class="s">&#39;03&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;lastFour&#39;</span><span class="p">:</span> <span class="s">&#39;0004&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;bin&#39;</span><span class="p">:</span> <span class="s">&#39;404000&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;fingerprint&#39;</span><span class="p">:</span> <span class="s">&#39;812a1abf6c03db89bdf91025687fe5a77e24065a652860445e45e62fce3a2858&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;addressCity&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;addressPostalCode&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;type&#39;</span><span class="p">:</span> <span class="s">&#39;VISA&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;cardHolderName&#39;</span><span class="p">:</span> <span class="s">&#39;Иван Иваныч&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;customer&#39;</span><span class="p">:</span> <span class="s">&#39;qoodmh04sh7ghpp58opn5g0hssg4slq0&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;validationCharge&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;successful&#39;</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span> <span class="s">&#39;errorCode&#39;</span><span class="p">:</span> <span class="s">&#39;04&#39;</span><span class="p">},</span>
</span><span class='line'>    <span class="s">&#39;addressLine1&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;expirationYear&#39;</span><span class="p">:</span> <span class="s">&#39;2018&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Realizar el pago por la tarjeta de crédito</h3>

<p>Con el token de la tarjeta de crédito, que obtuvimos en el paso anterior, ahora podemos realizar pagos. Para eso enviemos una petición POST al <a href="https://tpaga.co/docs/swaggers/v2#!/Charge/addCreditCardCharge">addCreditCardCharge</a> endpoint con los siguientes parametros:</p>

<ul>
<li><code>orderId</code> - nuestro id interno que asociamos al pago, que luego nos ayudaría a identificar la transacción en el dashboard de Tpaga;</li>
<li><code>amount</code>- cantidad de dinero para cobrar,</li>
<li><code>currency</code>- tipo de moneda, por ejemplo, &lsquo;COP&rsquo;,</li>
<li><code>creditCard</code> - token de la tarjeta de crédito.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">TpagaTestClient</span><span class="p">:</span>
</span><span class='line'>    <span class="c"># ...</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">charge_cc</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cc_token</span><span class="p">,</span> <span class="n">order_id</span><span class="o">=</span><span class="s">&#39;BRG-2&#39;</span><span class="p">,</span> <span class="n">amount</span><span class="o">=</span><span class="mi">1000</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cdata</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&#39;orderId&#39;</span><span class="p">:</span> <span class="n">order_id</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&#39;currency&#39;</span><span class="p">:</span> <span class="s">&#39;COP&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&#39;taxAmount&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&#39;description&#39;</span><span class="p">:</span> <span class="s">&#39;One bridge in good condition.&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&#39;installments&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&#39;amount&#39;</span><span class="p">:</span> <span class="n">amount</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&#39;creditCard&#39;</span><span class="p">:</span> <span class="n">cc_token</span><span class="p">,</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">api_post</span><span class="p">(</span><span class="s">&#39;charge/credit_card&#39;</span><span class="p">,</span> <span class="n">cdata</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">json_from_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">refund_cc</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cc_charge_id</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cdata</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;id&#39;</span><span class="p">:</span> <span class="n">cc_charge_id</span><span class="p">,</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">api_post</span><span class="p">(</span><span class="s">&#39;refund/credit_card&#39;</span><span class="p">,</span> <span class="n">cdata</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">json_from_response</span><span class="p">(</span><span class="n">response</span><span class="p">,</span> <span class="n">expected_http_code</span><span class="o">=</span><span class="p">[</span><span class="mi">202</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">charge_cc_response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">charge_cc</span><span class="p">(</span><span class="n">cc_token</span><span class="o">=</span><span class="n">credit_card_token</span><span class="p">,</span> <span class="n">amount</span><span class="o">=</span><span class="mi">4500</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="n">cc_charge_id</span> <span class="o">=</span> <span class="n">charge_cc_response</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&#39;charge_cc_response&#39;</span><span class="p">,</span> <span class="n">charge_cc_response</span><span class="p">)</span>
</span><span class='line'><span class="n">charge_cc_response</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;id&#39;</span><span class="p">:</span> <span class="s">&#39;1rnfu463258eph0mlqli4105mjb85kut&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;creditCard&#39;</span><span class="p">:</span> <span class="s">&#39;ifmjd9rbe8peqdjh09pln702306nfniu&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;thirdPartyId&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;installments&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;tpagaFeeAmount&#39;</span><span class="p">:</span> <span class="s">&#39;868.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;customer&#39;</span><span class="p">:</span> <span class="s">&#39;gl01l74skk0po9afrjiaaclt0hr5acsh&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;iacAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;transactionInfo&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;authorizationCode&#39;</span><span class="p">:</span> <span class="s">&#39;723045&#39;</span><span class="p">,</span>  <span class="c"># código de transacción del banco</span>
</span><span class='line'>        <span class="s">&#39;status&#39;</span><span class="p">:</span> <span class="s">&#39;authorized&#39;</span><span class="p">,</span>  <span class="c"># Posibles valores: created, fraudulent,</span>
</span><span class='line'>                                 <span class="c"># settled, processor_declined, authorized,</span>
</span><span class='line'>                                 <span class="c"># voided</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&#39;netAmount&#39;</span><span class="p">:</span> <span class="s">&#39;3545.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;tipAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;reteIvaAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;reteIcaAmount&#39;</span><span class="p">:</span> <span class="s">&#39;19.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;paid&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;reteRentaAmount&#39;</span><span class="p">:</span> <span class="s">&#39;68.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;paymentTransaction&#39;</span><span class="p">:</span> <span class="s">&#39;tta2hlk0e5n5dgr4kggm5j6vv8qoh3jP&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;orderId&#39;</span><span class="p">:</span> <span class="s">&#39;BRG-2&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;description&#39;</span><span class="p">:</span> <span class="s">&#39;One bridge in good condition.&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;currency&#39;</span><span class="p">:</span> <span class="s">&#39;COP&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;errorMessage&#39;</span><span class="p">:</span> <span class="s">&#39;Approved&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;taxAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;errorCode&#39;</span><span class="p">:</span> <span class="s">&#39;00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;amount&#39;</span><span class="p">:</span> <span class="s">&#39;4500.00&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si el pago fue exitoso, el código de respuesta es <code>201</code> y en el JSON podemos ver que la llave <code>paid</code> es <code>True</code> y <code>amount</code> es igual al valor cobrado de la tarjeta.</p>

<p>En el caso cuando el código de respuesta es <code>402</code>, tendríamos fijarnos en los valores de <code>errorCode</code> y <code>errorMessage</code> para entender qué pasó con la transacción. Por ejemplo, el código de error <code>43</code> significa que el dueño de la tarjeta la reportó como robada, y <code>61</code> - que el monto máximo de tarjeta fue excedido.</p>

<p>En otros casos necesitaremos verificar que los datos que pasamos en la petición sean válidos y tengan todos los valores necesarios.</p>

<h3>Revertir el pago</h3>

<p>Los bancos nos permiten revertir el pago dentro de 24 horas después de la transacción. Para hacerlo debemos mandar token de la transacción que queremos revertir al <a href="https://tpaga.co/docs/swaggers/v2#!/Credit_Card/refundCreditCardCharge">refundCreditCardCharge</a> endpoint.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">refund_cc_response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">refund_cc</span><span class="p">(</span><span class="n">cc_charge_id</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;refund_cc_response&#39;</span><span class="p">,</span> <span class="n">refund_cc_response</span><span class="p">)</span>
</span><span class='line'><span class="n">refund_cc_response</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;id&#39;</span><span class="p">:</span> <span class="s">&#39;1rnfu463258eph0mlqli4105mjb85kut&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;creditCard&#39;</span><span class="p">:</span> <span class="s">&#39;ifmjd9rbe8peqdjh09pln702306nfniu&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;thirdPartyId&#39;</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;installments&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;tpagaFeeAmount&#39;</span><span class="p">:</span> <span class="s">&#39;868.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;customer&#39;</span><span class="p">:</span> <span class="s">&#39;gl01l74skk0po9afrjiaaclt0hr5acsh&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;iacAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;transactionInfo&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;authorizationCode&#39;</span><span class="p">:</span> <span class="s">&#39;723045&#39;</span><span class="p">,</span> <span class="s">&#39;status&#39;</span><span class="p">:</span> <span class="s">&#39;voided&#39;</span><span class="p">},</span>
</span><span class='line'>    <span class="s">&#39;netAmount&#39;</span><span class="p">:</span> <span class="s">&#39;3545.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;tipAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;reteIvaAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;reteIcaAmount&#39;</span><span class="p">:</span> <span class="s">&#39;19.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;paid&#39;</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;reteRentaAmount&#39;</span><span class="p">:</span> <span class="s">&#39;68.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;paymentTransaction&#39;</span><span class="p">:</span> <span class="s">&#39;tta2hlk0e5n5dgr4kggm5j6vv8qoh3jP&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;orderId&#39;</span><span class="p">:</span> <span class="s">&#39;BRG-2&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;description&#39;</span><span class="p">:</span> <span class="s">&#39;One bridge in good condition.&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;currency&#39;</span><span class="p">:</span> <span class="s">&#39;COP&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;errorMessage&#39;</span><span class="p">:</span> <span class="s">&#39;Approved&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;taxAmount&#39;</span><span class="p">:</span> <span class="s">&#39;0.00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;errorCode&#39;</span><span class="p">:</span> <span class="s">&#39;00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;amount&#39;</span><span class="p">:</span> <span class="s">&#39;4500.00&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>El JSON que nos devolvió Tpaga <code>transactionInfo.status</code> aparece como <code>voided</code> y el valor de <code>paid</code> ahora es falso:</p>

<p><img src="http://blog.vero4ka.info/images/tpaga_dashboard_refund.png"></p>

<p>Enlaces:</p>

<ul>
<li>Documentación de Tpaga: <a href="https://tpaga.co/docs/swaggers/v2">tpaga.co/docs/swaggers/v2</a></li>
<li>Tpaga FAQ: <a href="https://tpaga.zendesk.com/hc/es">tpaga.zendesk.com/hc/es</a></li>
<li>Documentación para la librería <a href="http://docs.python-requests.org/en/master/">Requests: HTTP for Humans</a></li>
<li>Un ejemplo de integración con Tpaga usando PHP/JavaScript: <a href="https://github.com/Tpaga/tpaga-php-example-backend/">Tpaga/tpaga-php-example-backend</a></li>
</ul>


<p>Muchas gracias a <a href="https://twitter.com/jerojasro">@jerojasro</a> por su ayuda y paciencia.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No llevas leña]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/08/05/no-llevas-lena/"/>
    <updated>2016-08-05T09:57:59-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/08/05/no-llevas-lena</id>
    <content type="html"><![CDATA[<p>El bus lleno de Buratinos* va a toda velocidad.  En algún momento el conductor
frena duro, y escucha las voces enojadas del los pasajeros:
“¡Ey, señor conductor, no lleva la leña!”</p>

<p><em>*Buratino es Pinocchio en ruso.</em></p>

<p><img class="center" src="http://blog.vero4ka.info/images/buratino.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[El colegio]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/07/30/el-colegio/"/>
    <updated>2016-07-30T18:40:16-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/07/30/el-colegio</id>
    <content type="html"><![CDATA[<p>Nunca me gustaba ir al colegio y siempre he contado cuánto falta hasta el
último día de encarcelamiento.</p>

<p>Entré al colegio cuando tenía 7 años. Normalmente los niños entran un año
antes, pero a mis 6 me dijeron que la niña era demasiado pequeña. Durante
12 meses no crecí mucho, pero ya que no tuvieron razones de no aceptarme.</p>

<p>Mi primer día no me gustó: habían muchos niños a quienes no conocía y no
quería conocerlos, que se movían por el salón de una forma caótica y hacían
mucho ruido. Me pusieron en la última mesa del aula junto a la ventana.
En la primera clase a profesora nos dijo que sacaramos nuestros cuadernos
de las maletas y dibujaramos algo. Eso fue un estrés total: no pude abrir
mi maleta. Como tuve que manejar la cerradura por primera vez en mi vida,
no supe cómo funcionaba y claro que el panico, que llegó inmediatamente,
no me permitió pensar con claridad.</p>

<p>Del primer grado sólo recuerdo cómo nos enseñaban caligrafía: tuvimos
que escribir las mismas letras muchas veces. Entonces al final se quedaron
varias páginas con “а”, “б”, “в”, etc.</p>

<p>En el segundo grado nos muvieron a otro edificio y empezamos a prestar
servicio. Cada grupo por turnos tuvo que estar de servicio en el colegio
durante toda la semana. Esto segnificaba que tuvimos que llegar 30 minutos
antes que todos los demás.  Nos reunían en el primer piso y decían a cada
no su cargo. Habían varios tipos de cargos: unos tuvieron que estar en
la entrada del edificio y en las entradas de cada piso y decir a cada niño
que pasaba: “¡Smenka!”. “Smenka” significa “los zapatos de cambio”.
En el invierno la nieve se metía en las indiduras de los zapatos y cuando
uno entraba al edificio se derretía y dejaba charcos. Por eso por el orden
“¡Smenka!” el estudiante tuvo que levantar el pie y mostrar la suela.
Si estaba mojada “el guardia” tuvo que detenerlo y mandarlo a la casa por
los zapatos de cambio. Ese cargo no me gustaba porque los otros estudiantes
lo tomaban como un deporte lograr pasar con los zapatos que llevaban puestos
en la calle, entonces inventaban trucos para confundir la guardia o
simplemente corrían de nosotros. Entonces había otro cargo: vigilar
los corredores, detener los estudiantes que corrían y mandarles
al director del colegio.</p>

<p>Existía un cargo que era el más agradable de todos: estar en la cafetería.
Había que ordenar las mesas y las sillas y antes de las horas del desayuno
y almuerzo había que servir la comida y después recoger los platos.</p>

<p>Después de las clases nos quedábamos por una hora para limpiar todo el colegio.</p>

<p>Tuvimos 4 periodos y 4 vacaciones: 3 cortas y umas largas de tres meses
en verano. Para las vacaciones de verano nos daban una lista de libros para
leer. Como durante los estudios casi no tuvimos tiempo para la lectura,
tuvimos que pasar por todos los libros del curso de literatura antrs de
que empezara el año escolar. A pesar de que leía de 3 a 5 horas al día no
alcanzaba leer todos los libros del listado. Me gusta leer mucho, pero
odiaba las clases de literatura. La parte más tonta era memorizar los poemas.
Tuvimos que recitar de memoria los poemas de Homero, Pushkin, Lermontov,
Tiútchev, Mayakovski, Blok y muchos otros. A cada uno llamaban a la pizarra
y tuvimos que declamar frente al grupo. Así los profesores lograron que hasta
la mejor poesía pudiera provocar un reflejo vomitivo. Pero creo que era la
mejor forma de instalar los pensamientos de otras personas a las mentes
inmaduras. Hasta ahora cuando veo una tormenta fuerte a veces se me ocurren
las estrofas de Tiútchev:</p>

<p>Люблю грозу в начале мая (Me gustan las tormentas a principios de mayo) /
Когда весенний первый гром (Cuando el primer trueno primaveral) /
Как бы резвяся и играя (Como haciendo travesuras y jugando) /
Грохочет в небе голубом (Trona en el cielo azul).</p>
]]></content>
  </entry>
  
</feed>
