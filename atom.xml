<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Cansada de ser feliz]]></title>
  <link href="http://blog.vero4ka.info/atom.xml" rel="self"/>
  <link href="http://blog.vero4ka.info/"/>
  <updated>2017-04-17T21:10:33-05:00</updated>
  <id>http://blog.vero4ka.info/</id>
  <author>
    <name><![CDATA[vero4ka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shapka, babushka, kefir]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/04/17/shapka-babushka-kefir/"/>
    <updated>2017-04-17T20:34:47-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/04/17/shapka-babushka-kefir</id>
    <content type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/24913381-motherhood-russian-style?ac=1&amp;from_search=true">Motherhood, Russian-style</a> por Tanja Maier (2015)</p>

<p><img class="right" src="http://blog.vero4ka.info/images/books/Tanja_Maier_Motherhood_Russianstyle.jpeg" width="200"></p>

<p>Tanja Maier es una señora estadounidense que sabe ruso y que trabajó durante un tiempo en Moscú en los comienzos de la década de los 2000, donde crió a su primer hijo. Tanja pasaba mucho tiempo con sus amigas rusas y en los grupos de las mamás rusas en Facebook, y al final decidió resumir su experiencia de maternidad en un libro, que en la edición rusa se llama “Shapka, babushka, kefir. Cómo crían a los niños en Rusia.”</p>

<!-- more -->


<p>Lo primero que es importante mencionar es que no es un análisis completo: las amigas que entrevistó la señora Maier son principalmente de los estratos bastantes altos de la sociedad, y por eso no se pueden extrapolar sus experiencias a todas las mujeres rusas. Pero, a pesar de eso, se pueden encontrar varias observaciones curiosas acerca de las costumbres alimenticias y culturales, las que la mayoría de los rusos heredaron de la época soviética.</p>

<p>El libro tiene los siguientes capítulos:</p>

<ol>
<li>Breve historia de la maternidad en Rusia.</li>
<li>Embarazo y parto.</li>
<li>El bebé en la casa: cómo sobrevivir el primer año.</li>
<li>Todos juntos: abuelas, niñeras, papás y otros ayudantes.</li>
<li>Desde un año en adelante: enseñar al niño a ir al baño, jardín infantil, conociendo el mundo.</li>
<li>Los años escolares: todo es muy serio.</li>
<li>Régimen alimenticio y tratamiento en el caso de enfermedad.</li>
<li>El equilibrio zen entre la disciplina y la libertad.</li>
<li>El “verano” durante el verano y el “verano” durante el invierno: la dacha y los países cálidos.</li>
<li>El papá.</li>
<li>Las madres solteras: las heroínas anónimas.</li>
<li>El feminismo de las mamás: cómo las mujeres rusas crían a los niños sin perderse a sí mismas, su sexualidad y su carrera.</li>
</ol>


<p>Por ejemplo, Tanja Maier cuenta que las mamás rusas tratan de pasar con sus niños mucho tiempo al aire libre: al menos dos horas por la mañana y dos horas en la tarde. En parte es porque todo el invierno es muy oscuro, y paseando afuera, los niños reciben su dosis de la vitamina D. Pero también es porque los paseos vigorizan la inmunidad y hacen a los niños más fuertes. Por eso las vueltas en el parque cercano son una parte integral de cada día.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/books/buckwheat.jpg" width="300"></p>

<p>Otra cosa que sorprende a Tanja Maier, es que las mamás rusas dan comida saludable a sus niños: <a href="https://en.wikipedia.org/wiki/Mors_(drink)">mors</a> (la bebida de arándanos rojos), <a href="https://en.wikipedia.org/wiki/Kefir">kefír</a> (un producto lácteo fermentado), yogur griego, las kashas de <a href="https://es.wikipedia.org/wiki/Fagopyrum_esculentum">alforfón</a> y avena para el desayuno (lo que en Inglaterra se llama “porridge”, o “oatmeal” - en los EEUU, pero que ni se acerca a la kasha rusa), pepinos, zanahorias, albóndigas de calabacín, sopas y muchas <a href="http://blog.vero4ka.info/blog/2014/01/05/mi-tierra-abundante-a-pesar-del-frio/">frutas, bayas y verduras</a>. Las gaseosas, los jugos empaquetados y las papas franceses pueden encontrarse en algunas fiestas, pero no están incluidas en la ración diaria. Aunque también existen muchos prejuicios. Por ejemplo, las mamás rusas nunca dan a sus niños comidas y bebidas frías, temiendo que se les irrite la garganta.</p>

<p>En el último capítulo Tanja Maier cuenta que las mujeres rusas dedican mucho tiempo a su aspecto físico: no es extraño ver a una mamá rusa con las uñas impecables, falda y tacones. En parte es así porque después de la segunda guerra mundial se disminuyó significamente la cantidad de hombres, pero también es porque lo quieren hacer para otras mujeres. Las mamás rusas dicen muchos cumplidos una a otra, y eso siempre suena natural. No es algo como: “Me encanta tu vestido. ¿Dónde lo compraste?”, sino “¡Lenka, te ves genial, te queda genial ese peinado!”</p>

<p>Para concluir, hace falta decir que el libro de Taja Maier no puede servir como un tutorial sobre crianza de los niños al “estilo ruso”. En este sentido no se puede comparar con el libro reconocido de Pamela Druckerman “Los niños franceses no tiran comida al suelo”. Creo que el libro de Tanja Maier sirve más para las mismas mamás rusas que viven con  sus esposos extranjeros para mostrarselo y decir: “Mira, no estoy loca, existen otras mujeres que hacen lo mismo.”</p>

<p><img class="center" src="http://blog.vero4ka.info/images/books/shapka_babushka_kefir.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Él para ustedes no es Dimón]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/04/03/no-es-dimon-para-ustedes/"/>
    <updated>2017-04-03T19:09:25-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/04/03/no-es-dimon-para-ustedes</id>
    <content type="html"><![CDATA[<p>&ldquo;Él para ustedes no es Dimón&rdquo; es una película documental, filmada por <a href="https://fbk.info/english/about/">la Fundación Anti-Corrupción</a> y publicada en Youtube el 2 de marzo de 2017.</p>

<!-- more -->




<div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/qrwlk7_GF9g?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>


<p><br></p>

<p style="text-align:center;"> La película documental &ldquo;Él para ustedes no es Dimón&rdquo; (tiene subtítulos en inglés)</p>

<p>En la película cuentan sobre los supuestos bienes inmuebles del Presidente del Gobierno <a href="https://es.wikipedia.org/wiki/Dmitri_Medv%C3%A9dev">Dmitri Medvédev</a>. Nos cuentan que Dmitri Medvédev creó un esquema de corrupción de muchos niveles. Según los autores del documental Medvédev compra inmuebles y fincas por medio de las asociaciones caritativas, que sus amigos de la universidad y sus familiares lideran. Esas asociaciones son financiadas por los oligarcas y los bancos del gobierno por medio de préstamos. El narrador del documental fue <a href="https://es.wikipedia.org/wiki/Aleks%C3%A9i_Navalny">Alekséi Navalny</a> - un abogado y político ruso, que también es el creador de la Fundación Anti-Corrupción.</p>

<p>Después de publicar la película, la Fundación envió una denuncia al Comité de Investigación con la exigencia de realizar la investigación y abrir un caso criminal contra Dmitri Medvédev y el multimillonario <a href="https://es.wikipedia.org/wiki/Alisher_Usm%C3%A1nov">Alisher Usmánov</a> quien lo sobornaba. Navalny pidió al Comité verificar las acusaciones contra Medvédev, pero no recibió ninguna respuesta por la parte del gobierno.</p>

<p>Entonces el 26 de marzo Navalny invitó a los ciudadanos rusos a salir a las calles para manifestarse contra la corrupción.</p>

<p><strong>¿De dónde salió ese nombre &ldquo;Él para ustedes no es Dimón&rdquo;?</strong> El nombre salió de una frase que dijo Natalia Timakova (la secretaría de prensa de Medvédev), que en 2013 durante una de las entrevistas se quejó del descaro en las redes sociales: &ldquo;No entiendo a las personas que escriben en Facebook: "Dimón, qué chévere&rdquo;. No es Dimón para ustedes, es el presidente del Gobierno."</p>

<p>Dimón es una forma muy informal de dirigirse a una persona llamada Dmitri.</p>

<p><strong>¿Qué exactamente nos cuenta el documental?</strong> El documental se compone de 10 capítulos.</p>

<p><strong>Capítulo I</strong> de cómo cayó Medvédev debido a sus tenis.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/dimon/medvedev-tenis.jpg" width="300"></p>

<p>Hace un tiempo un grupo de hackers rusos entró a la cuenta de una persona relacionada con la asociación caritativa &ldquo;Dar&rdquo; (&ldquo;Donación&rdquo;). En esa cuenta se encontraron unas confirmaciones de compra de unos tenis y ropa, iguales a los que usaba Medvédev, y también unos juguetes electrónicos (por los cuales Medvédev ha mostrado afición).</p>

<p><strong>Capítulo II</strong> ¿A quién el oligarca Usmánov le regaló un palacio en Rublyovka.</p>

<p>(Rublyovka es un área residencial en suburbios de de Moscú.)</p>

<p><img class="left" src="http://blog.vero4ka.info/images/dimon/dacha-plyos.jpeg" width="300"></p>

<p>En ese capítulo Navalny cuenta cómo Usmánov le regaló una hacienda a la asociación &ldquo;Dar&rdquo;.</p>

<p><strong>Capítulo III</strong> Medvédev de construyó una casa de campo en las montañas.</p>

<p>Se trata de una hacienda con helisuperficie y numerosas saunas, que está ubicada cerca a Krásnaya Polyana de Sochi. Navalny demuestra los hechos que nos llevan otra vez a &ldquo;Dar&rdquo;.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/dimon/dacha-sochi.jpg" width="500"></p>

<p><strong>Capítulo IV</strong> de cómo Medvédev construyó una mansión y un negocio de agricultura.</p>

<p>Se cuenta acera de una empresa agroindustrial, fundada en el lugar donde los abuelos de Medvédev tenían una casa - en la aldea de Mansurovo del departamento de Kursk. A la empresa también le pertenece una casa grande para invitados, que Medvédev visita a menudo. La empresa también tiene conexiones con la asociación &ldquo;Dar&rdquo; e Ilya Eliseev (compañero de Medvédev de la universidad).</p>

<p><strong>Capítulo V</strong> de cómo Medvédev  se volvió aficionado al vino y arrastró en pos de sí al Gobierno.</p>

<p>Es una historia sobre un viñedo cerca de Anapa y la presión política de los vinicultores rusos que Medvédev incentivó e el Gobierno. El viñedo está controlado por Eliseev, y Medvédev, por su parte, ayudó a aprobar las leyes de apoyo a los vinicultores rusos.</p>

<p><strong>Capítulo VI</strong> de cómo la asociación &ldquo;Dar&rdquo; obtuvo apartamentos con el costo total de un billón de rublos.</p>

<p>Se enumeran las empresas que donaron varios apartamentos de élite a la asociación &ldquo;Dar&rdquo;.</p>

<p><strong>Capítulo VII</strong> El capítulo esperado que cuenta de dónde apareció la plata.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/dimon/medvedev-dacha.jpg" width="300"></p>

<p>Se trata de fuentes de financiación de la asociación &ldquo;Dar&rdquo;. Se demuestra que la plata llega más que todo de los oligarcas rusos y de los préstamos tomados en Gazprombank, donde Eliseev es el vicepresidente del consejo de dirección.</p>

<p><strong>Capítulo VIII</strong> de cómo se encontraron los yates de Medvédev, registrados en un paraíso fiscal.</p>

<p>Los yates se encontraron por las fotos que publicó Medvédev en <a href="https://www.instagram.com/damedvedev/">su instagram</a>. Fue fácil comparar los datos de geolocalización de las fotos con las ubicaciones del yate (que es de información pública).</p>

<p><strong>Capítulo IX</strong> de cómo Medvédev obtuvo un viñedo y un castillo en Toscana.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/dimon/italia.jpg" width="300"></p>

<p>Los viñedos y las haciendas en Italia fueron comprados por los préstamos que las sucursales de &ldquo;Dar&rdquo; recibieron.</p>

<p><strong>Capítulo X</strong> en el cual Alekséi Navalny cuenta la moraleja y hace las conclusiones.</p>

<p>Todos los materiales usados en la película (documentos, que son de acceso público) fueron publicados en <a href="https://dimon.navalny.com/">la página</a> de la Fundación Anti-Corrupción. El documental tuvo una gran resonancia en la sociedad, y más que todo porque ni Medvédev ni el Gobierno se dignaron a dar una respuesta a eso.</p>

<p><strong>Reacción de la sociedad</strong></p>

<p>En 26 de marzo de 2017 en las 82 ciudades de Rusia tuvieron lugar las marchas de protesta contra la corrupción. La alcaldía de Moscú no dió permiso para la manifestación (les propusieron hacer la marcha en unos lugares muy lejanos del centro de la capital), pero a pesar de eso, <a href="http://www.dw.com/es/masivas-protestas-en-rusia-contra-corrupci%C3%B3n-gubernamental/a-38124241">mucha gente salió a las calles</a>.</p>

<blockquote><p>Alexei Navalni llama a protestar y acuden jóvenes de todo el país. En Moscú, la policía disolvió la manifestación pacífica por la fuerza.</p></blockquote>

<p><a href="http://www.dw.com/es/opini%C3%B3n-a-golpes-contra-una-renacida-oposici%C3%B3n-rusa/a-38152260">DW. Opinión: A golpes contra una renacida oposición rusa</a>.</p>

<p>Lo sorprendente de esa marcha ara la cantidad de jóvenes (e incluso niños) que salieron a protestar. Recientemente salieron varios videos en Youtube, que fueron grabados por estudiantes de colegio. Los niños hicieron videos de las conversaciones con sus profesores sobre la corrupción, la política y Alekséi Navalny.</p>

<p>Por ejemplo, en un video un profesor está contando a sus estudiantes que el liberalismo y el fascismo son parecidos.</p>

<p>En otro video la directora de un colegio en Bryansk junto con otra profesora conversan con los niños acerca de Alekséi Navalny, porque uno de los estudiantes se suscribió a la manifestación y por eso lo llevaron a la policía.</p>

<div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/00MoQ6UqAjU?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>


<p><br></p>

<p><em>Directora</em>: Raisa Ivánovna, ¿puedo decir algo? A los que les interesa la actividad de Navalny&hellip; Bueno, él sugiere derrotar  a las personas que están en el cima del poder, decir &ldquo;no&rdquo; a la corrupción etc. ¿Qué acciones concretas él sugiere tomar? ¿Unirse e ir a una protesta? ¿Quieren que les diga qupe tipo de persona es?</p>

<p><em>Estudiante 1</em>: Él simplemente quiere obtener las respuestas. Él hizo un vidéo sobre Medvedev y ahora quiere obtener las respuestas por la parte del poder.</p>

<p><em>Directora</em>: ¿Y qué?</p>

<p><em>Estudiante 1</em>: Y el poder no responde.</p>

<p><em>Directora</em>: No, esperen. Ustedes hacen un video sobre Kira Petrovna, escriben que ella es así y así, que ella está descuidada y que por su colegio corren las cacarachas. ENtonces ustedes se reunen y piden una respuesta. Qué creen, ¿yo hablaría con ustedes?</p>

<p><em>Estudiante 2</em>: No.</p>

<p><em>Directora</em>: ¡Pues él tampoco lo haría! ¡Qué gracioso! Un programa politico se trata de acciones concretas: para fortalecer la economía, para hacer algunos planes. Lo que hace él es armar una provocación. ¿Lo entienden? ustedes todavía no lo entienden. Tenemos una situación económica muy inestable. si lo digo de forma directa - un poso económico. ¿Y por qué es así? Ustedes estudiaban las ciencias humanas. Ustedes saben que estamos bajo un bloqueo económico. Pues, quiero escuchar de ustedes ¿qué está pasando ahora?</p>

<p><em>Estudiante 2</em>: Crisis.</p>

<p><em>Directora</em>: ¿Y cuál es la razón de ese crisis?</p>

<p><em>Estudiante 2</em>: Las sanciónes&hellip; La Unión Europea&hellip; todo ese bloqueo.</p>

<p><em>Directora</em>: Dime otra vez ¿cuál es la razón? La Unión Europea, ¿cierto? Entonces ahora tenemos una política fuerte y estable de nuestro líder. Él tiene una posición alta en la arena internacional. ¿Y cuál es la razón de eso? Por la política exterior. La política interior está un poco floja, por supuesto. ¿Por qué? Porque no hay dinero. Y es loq eu más sentimos ahora (&hellip;)</p>

<div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/JzGo4c6U8os?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>


<p><br></p>

<p><em>Fotos tomadas de la página navalny.com</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Login con Facebook en Django]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/03/20/login-con-facebook-en-django/"/>
    <updated>2017-03-20T15:24:49-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/03/20/login-con-facebook-en-django</id>
    <content type="html"><![CDATA[<p>Este ejemplo fue probado con la versión 1.10 de Django.</p>

<p>Primero instalamos las siguentes dos librerías que hacen parte del proyecto <a href="https://github.com/python-social-auth">Python Social Auth</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install social-auth-core
</span><span class='line'><span class="nv">$ </span>pip install social-auth-app-django
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>Agregamos la aplicación <code>social_django</code> a la lista <code>INSTALLED_APPS</code> del archivo <code>settings.py</code> en nuestro proyecto de Django:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s">&#39;social_django&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Especificamos en <code>AUTHENTICATION_BACKENDS</code> que vamos a usar un backend adicional para ingresar con la cuenta de Facebook:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">AUTHENTICATION_BACKENDS</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s">&#39;social_core.backends.facebook.FacebookOAuth2&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>    <span class="s">&#39;django.contrib.auth.backends.ModelBackend&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>y finalmente agregamos los procesadores de contexto:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">TEMPLATES</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>        <span class="s">&#39;OPTIONS&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="o">...</span>
</span><span class='line'>            <span class="s">&#39;context_processors&#39;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="o">...</span>
</span><span class='line'>                <span class="s">&#39;social_django.context_processors.backends&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&#39;social_django.context_processors.login_redirect&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="o">...</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora podemos correr las migraciónes para crear las tablas que usa <code>social_django</code> para guargar las cuentas y relaciones con los usuarios de Django que ya tenemos:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./manage.py migrate
</span><span class='line'>Running migrations:
</span><span class='line'>  Applying social_django.0001_initial... OK
</span><span class='line'>  Applying social_django.0002_add_related_name... OK
</span><span class='line'>  Applying social_django.0003_alter_email_max_length... OK
</span><span class='line'>  Applying social_django.0004_auto_20160423_0400... OK
</span><span class='line'>  Applying social_django.0005_auto_20160727_2333... OK
</span><span class='line'>  Applying social_django.0006_partial... OK
</span></code></pre></td></tr></table></div></figure>


<p>Agregamos las urls de <code>social_django</code> en <code>urls.py</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">url</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;social_django.urls&#39;</span><span class="p">,</span> <span class="n">namespace</span><span class="o">=</span><span class="s">&#39;social&#39;</span><span class="p">)),</span>
</span></code></pre></td></tr></table></div></figure>


<p>Listo, con esto podemos agregar un enlace en alguna de nuestras plantillas:</p>

<figure class='code'><figcaption><span>templates/base.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;social:begin&#39; &#39;facebook&#39; %}?next={{ request.path }}&quot;</span><span class="nt">&gt;</span>Login con Facebook<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Especificamos que queremos asociar usuarios que ingresan con Facebook a nuestros usuario de Django por medio de correo electrónico:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">SOCIAL_AUTH_PIPELINE</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.social_details&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.social_uid&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.auth_allowed&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.social_user&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.user.get_username&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.associate_by_email&#39;</span><span class="p">,</span>  <span class="c"># &lt;--- este</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.user.create_user&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.associate_user&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.social_auth.load_extra_data&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;social_core.pipeline.user.user_details&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Es decir: cuando un usuario va a ingresar a nuestra página con su cuenta de Facebook, la aplicación va a mirar si en la tabla de usuario ya existe uno con el mismo correo, y si es así, simplemente lo asocia al la cuenta de Facebook con la que el usuario ingresó. En el caso opuesto, se crea un nuevo registro en la tabla <code>users</code>.</p>

<p>Ahora tenemos que crear la aplicación de Facebook desde la página <a href="https://developers.facebook.com">developers.facebook.com</a>. Luego agregamos el servicio de &ldquo;Facebook Login&rdquo;:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/django/fb-app-login.png"></p>

<p>Copiamos las llaves de la aplicación</p>

<p><img class="center" src="http://blog.vero4ka.info/images/django/fb-app-key.png"></p>

<p>y los pegamos en el archivo de configuración de Django:</p>

<figure class='code'><figcaption><span>settings.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">SOCIAL_AUTH_FACEBOOK_KEY</span> <span class="o">=</span> <span class="s">&#39;app-id&#39;</span>
</span><span class='line'><span class="n">SOCIAL_AUTH_FACEBOOK_SECRET</span> <span class="o">=</span> <span class="s">&#39;app-secret&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Después de hacer los pasos anteriores, al momento de hacer click en &ldquo;Login con Facebook&rdquo;, la aplicación nos va a redirigir a la siguiente página:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/django/fb-login-1.png"></p>

<p>Pero nosotros, al momento de login queremos obtener correo electrónico de nuestro usuario, por eso definimos el scope:</p>

<figure class='code'><figcaption><span>settings.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">SOCIAL_AUTH_FACEBOOK_IGNORE_DEFAULT_SCOPE</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'><span class="n">SOCIAL_AUTH_FACEBOOK_SCOPE</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s">&#39;email&#39;</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora sí, la aplicación pide acceso al correo electrónico:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/django/fb-login-2.png"></p>

<p>Entramos en el administrador de Django y podemos ver que se creó un registro asociando al usuario que ya existía en la base de datos a su cuenta de Facebook:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/django/fb-app-django-admin.png"></p>

<p>Enlaces:</p>

<ul>
<li><a href="https://developers.facebook.com/docs/facebook-login">Documentación de FB</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Día de la mujer]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/03/11/dia-de-la-mujer/"/>
    <updated>2017-03-11T19:37:52-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/03/11/dia-de-la-mujer</id>
    <content type="html"><![CDATA[<p>La semana pasada escuchando durante el Día Internacional de la Mujer las frases como <em>gracias por acompañarnos</em>, <em>gracias por consentirnos</em>, <em>gracias por ser bonitas</em> o <em>gracias por dar color y sentido a la vida&hellip;</em> me estaba preguntando: ¿es en serio? ¿Soy una trabajadora o un adorno para la oficina?</p>

<p>Sería genial que más gente supiera que el día 8 de marzo no es el día de la madre, día de la novia, primavera, flores y ositos rosados, sino es el Día Internacional de la Mujer, el día de la solidaridad entre mujeres en la lucha por sus derechos.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/feminism/diamujergooglesearch.png" title="Resultado de búsqueda en Google" ></p>

<!-- more -->




<blockquote><p>El Día Internacional de la Mujer Trabajadora, también llamado Día Internacional de la Mujer desde la decisión de la ONU de institucionalizarlo en 1975, conmemora la lucha de la mujer por su participación, en pie de igualdad con el hombre, en la sociedad y en su desarrollo íntegro como persona.</p><footer><strong>Wikipedia</strong></footer></blockquote>


<p>Como pueden ver, eso no tiene nada que ver con las flores, la feminidad, los esmaltes y el color rosado.</p>

<p>&hellip;Mientras tanto, la revista Portafolio <a href="http://www.portafolio.co/negocios/hombres-gastarian-mas-de-cien-mil-pesos-durante-el-dia-de-la-mujer-503926">reporta</a> que &ldquo;Para el día de la mujer se espera que por lo menos un 70% de los consumidores bogotanos gasten en promedio $119.414 en la compra de regalos o en invitaciones a establecimientos de consumo. (&hellip;) Este sondeo muestra que el 31% de los encuestados regalaría dulces para esta fecha; un 25% de los encuestados optaría por las flores y los accesorios aparecen en el tercer lugar con un 11% de intención de compra.&rdquo;</p>

<p><em>¿Por qué a las feministas les irritan tanto las flores y las chocolatinas el día 8 de marzo?</em> Porque en la sociedad los objetos no existen por sí mismos, sino están incorporados en nuestra cultura. Por ejemplo, los vestidos y pantalones son sólo pedazos de tela que cubren la desnudez y nos protegen del frío. Pero en nuestra cultura es evidente que el vestido es la prenda &ldquo;femenil&rdquo; y las pantalones - &ldquo;varonil&rdquo;. Los vestidos son para mujeres y los pantalones son para hombres, el rosado es para niñas, azul - para niños. - todo esto es parte de nuestra cultura del binarismo de género y el patriarcado. Y las flores y esmaltes también son parte de esa cultura. Y las mujeres son un <a href="http://dle.rae.es/?id=XlApmpe#3fq3pFt">sexo débil</a>, a quienes hay que regalar flores, chocolatinas y esmaltes, que lleva vestidos, está en la casa cocinando. Incluso si a ustedes (a ambos) les gustan mucho las flores, cuando las regalan a una mujer (incluso cuando lo hacen con las mejores intenciones), ustedes apoyan y reproducen los estereotipos y el sexismo contra el cual luchamos el día 8 de marzo.</p>

<p><em>¿Por qué el día 8 de marzo se convirtió en el festivo que celebra la feminidad?</em> Por el sexismo.</p>

<p>Tampoco ese día hay que desear a las mujeres mucho amor. No es el día del amor y la amistad y no el día de San Valentín. Si en el Día Internacional de la Mujer ustedes de una empiezan a desearles algo relacionado con amor, es como decir que la razón de existencia de mujeres es de amar y ser amadas. Las mujeres tiene un montón de otras prioridades/ocupaciones como trabajo, expectativas, creatividad y sus intereses. El amor no ocupa el lugar principal en las vidas tanto de hombres como de mujeres.</p>

<p><em>¿Qué se puede hacer entonces?</em> Bueno, primero se puede una vez más expresar/manifestar su posición/actitud, por ejemplo: &ldquo;Soy feminista&rdquo; o &ldquo;Soy pro-feminist&rdquo;, &ldquo;Yo apoyo a las mujeres en la lucha por sus derechos&rdquo;. También se puede felicitar a sus amigas y apoyarlas, o donar dinero a algunas fundaciones que luchan contra la violencia de género, o al fin simplemente compartir en las redes sociales la historia del festivo.</p>

<blockquote><p>Feminism is the radical notion that women are people.</p></blockquote>

<p>El movimiento feminista ya tiene más de un siglo y durante ese periodo las mujeres lograron muchas cosas: derecho a votar, estudiar, hacer aborto o llevar las faldas cortas (aunque no en todos los países):</p>

<div class="ftb-widget" data-width="600" data-height="515" data-widget-id="kiJfiFfhmDj" data-href="https://www.graphiq.com/vlp/kiJfiFfhmDj" ><div style="text-align:center;font:14px/16px Helvetica,arial;color:#3d3d3d;"><a href="https://www.graphiq.com/vlp/kiJfiFfhmDj" target="_blank" style="color:#3d3d3d;">HealthGrove | Graphiq</a></div></div>


<script async src="https://s.graphiq.com/rx/widgets.js"></script>


<p>La escencia del feminismo se expresa muy bien en la frase que escribió Marie Shearen en el año 1986: &ldquo;El feminismo es la idea radical que sostiene que las mujeres son personas&rdquo; (&ldquo;Feminism is the radical notion that women are people&rdquo;).</p>

<p><em>¿Puede un hombre ser feminista?</em> Claro que sí, aunque si el feminismo es el movimiento de las mujeres, al hombre lo llamarían <a href="http://everydayfeminism.com/2016/06/men-pro-feminist-or-feminist/">&ldquo;pro-feminist&rdquo;</a>.</p>

<p>Los estereotipos de patriarcado afectan también a los hombres, de quién se espera que sea un &ldquo;macho&rdquo;, &ldquo;el que lleva el pan a la mesa&rdquo;, el &ldquo;sexo fuerte&rdquo;. En el sistema patriarcal es común escuchar: &ldquo;los hombres no lloran&rdquo;, &ldquo;corres/juegas/gritas como niña&rdquo;. Para un hombre &ldquo;de verdad&rdquo; no es bien visto hacer los &ldquo;trabajos femeninos&rdquo; como cuidar a los niños, cocinar, o trabajar como peluquero, por ejemplo.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/feminism/maternity-leave-map.png"></p>

<p><em>Si el feminismo busca la igualdad, entonces ¿por qué no defiende los derechos de los hombres?</em> Para explicarlo voy a usar un ejemplo con los hamsters que inventó <a href="https://www.youtube.com/watch?v=5f-TvaPo">nixelpixel</a>. Imaginan a los hamster que viven en su sociedad de hamsters. Y todo está perfecto, aunque existen unos &ldquo;hamsters alfa&rdquo;, que dominan a todos, controlan los comederos, tienen todo bajo su control, violan a las hamsters-mujeres, a los hamsters-hombres que parecen a mujeres y a los hamsters que están fuera de ese sistema binario. Y en un momento las hamsters-mujeres dicen: &ldquo;Amm&hellip; ¿qué diablos es esto? Vamos a luchar contra ese sistema, ayudar a los hamsters contra las cuales ese sistema funciona.&rdquo; Y entonces esos &ldquo;hamsters alfa&rdquo; junto con los &ldquo;hamsters perdedores&rdquo; (que quieren ser los &ldquo;hamsters alfa&rdquo;) dicen: &ldquo;¿Hey, y por qué ustedes defienden solo sus derechos? A nosotros también nos abusan cuando nos parecemos a ustedes. ¿Y quién va a defendernos de nosotros mismos?&rdquo; Entonces los primeros hamsters los miraron por un tiempo y no les respondieron nada, porque no han escuchado nada más estúpido e ilógico. Y luego uno de ellos dijo: &ldquo;Hey, caray, nosotros queremos luchar contra ese sistema tonto,en el cual agresividad es un signo que permite tener más poder, y queremos luchar contra eso. Y tú también puedes luchar contra eso. Sí, qué lástima que los hombres también están sufriendo de las cosas que les vuelven los reyes del mundo. ¿Pero puedo aquí defender a mis derechos primero' y no te voya a molestar de ninguna forma.&rdquo;</p>

<p>Entonces, el feminismo lucha contra el sexismo y apoya a los grupos oprimidos. No apoya a los opresores. Pero ellos pueden encargarse de eso por su cuenta. Porque en otro caso resultaría como ese &ldquo;hamster alfa&rdquo; en lugar de decir &ldquo;Oh, es muy injusta esa situación, les voy a apoyar&rdquo; dijera: &ldquo;Si ustedes no van a defender mis derechos, no voy a defender a los suyos, y voy a seguir violándolos, matar y voy a criticar cualquier intento de ustedes de defender sus derechos.&rdquo;</p>

<h3>Libros</h3>

<p>Honestamente, no he leído muchos libros acerca de feminismo, y antes de mudarme a Colombia no he reflexionado mucho acerca del tema.</p>

<p><a href="https://www.goodreads.com/book/show/10600242-how-to-be-a-woman">How to Be a Woman</a> by Caitlin Moran (Cómo ser mujer).</p>

<p><img class="center" src="http://blog.vero4ka.info/images/feminism/quote-caitlin-moran.jpg" width="500"></p>

<p>Caitlin Moran cuenta de forma muy sincera y divertida escribe sobre adolescencia, abortos, maternidad, el periodo, hombres, sexo. Ella describe de la forma muy accesible qué es feminismo para los proletarios, y porque cada mujer moderna es feminista.</p>

<p>Emma Watson creó un grupo en la red social Goodreads, llamado <a href="https://www.goodreads.com/group/show/179584-our-shared-shelf">Our Shared Shelf Group</a>, donde comparte los libros que está leyendo acerca de feminismo. El grupo también tiene un foro para discutir.</p>

<p>En la ONU se pusieron un meta de <a href="http://www.unwomen.org/es/get-involved/step-it-up">llegar al igualdad de género</a> en el año 2030. ¡Demos el paso! No les llamo a subir a las barricadas, pero podemos hacer al menos algo: hablar con las mujeres en la casa, en nuestras oficinas. Decirles que les apoyamos. Poner más atención a nuestro lenguaje y <a href="http://www.bbc.com/mundo/noticias-america-latina-37203814">las palabras que decimos</a> (¿de verdad no se puede evitar la palabra &ldquo;niñas&rdquo;?). Distribuir las tareas en la casa de forma igual, y no suponer que mujer es para la cocina (¿puede ser que el 8 de marzo no es el mejor día para regalar a su mamá/novia una nueva sartén?).</p>

<p>Enlaces:</p>

<ul>
<li><a href="http://blog.arturosanjuan.com/?p=1086">Sumisas y recatadas</a></li>
<li><a href="http://www.elpais.com.co/entretenimiento/florence-thomas-la-francesa-que-lucha-por-los-derechos-de-la-mujer-en-colombia.html">Florence Thomas, la francesa que lucha por los derechos de la mujer en Colombia</a></li>
<li><a href="http://www.semana.com/educacion/articulo/dia-internacional-de-la-mujer/517911">¿Qué hay detrás del 8 de marzo?</a></li>
<li><a href="https://www.youtube.com/watch?v=-edUycxWuuQ">Anne Hathaway&rsquo;s Speech On Paid Family Leave At The United Nations</a></li>
<li><a href="https://www.youtube.com/watch?v=c9SUAcNlVQ4">Emma Watson to United Nations: I&rsquo;m a feminist</a></li>
<li><a href="https://www.youtube.com/watch?v=CynzW9Kz7Ds">Emma Watson &amp; Caitlin Moran - In Conversation for Our Shared Shelf</a></li>
<li><a href="https://www.youtube.com/watch?v=PPMocsqHnDo">The Ascent of Woman - BBC Documentary</a></li>
<li><a href="https://www.nytimes.com/2016/10/29/world/middleeast/saudi-arabia-women.html?_r=0">‘I Live in a Lie’: Saudi Women Speak Up</a></li>
<li><a href="htt[ps://www.youtube.com/watch?v=ffb_5X59_DA">Ashley Judd&rsquo;s EPIC &ldquo;Nasty Woman&rdquo; Speech At The Women&rsquo;s March On Washington</a></li>
<li><a href="https://medium.com/@sailorhg/coding-like-a-girl-595b90791cce#.fyp0ax787">Coding Like a Girl</a></li>
<li><a href="https://en.wikipedia.org/wiki/Sexism_in_video_gaming">Sexism in video gaming</a></li>
</ul>


<p>Fuentes en ruso:</p>

<ul>
<li><a href="https://postnauka.ru/faq/44150">Что такое феминизм?</a></li>
<li><a href="https://www.youtube.com/watch?v=nYRGwKlhlaA">8 Марта</a> <a href="https://www.youtube.com/watch?v=5f-TvaPo--w">А как же мужчины??</a> | nixelpixel</li>
<li><a href="https://meduza.io/feature/2017/03/06/stydnye-voprosy-pro-feminizm">Стыдные вопросы про феминизм Чего добиваются женщины и что им мешает?</a></li>
<li><a href="http://www.sncmedia.ru/psycho/nika-vodvud-8-marta-otlichnyy-povod-prosto-zayavit-o-svoikh-feministskikh-vzglyadakh/">Ника Водвуд: «8 марта – отличный повод заявить о своих феминистских взглядах»</a></li>
<li><a href="http://www.sncmedia.ru/reviews/pochemu-menya-ne-raduet-8-marta/?utm_source=SNC&amp;utm_medium=involvement&amp;utm_campaign=SNC_down_text_block">Почему мне не нужно такое 8 Марта</a></li>
</ul>


<p>P.D.</p>

<p>Frases típicas que dicen a las mujeres el día 8 de marzo (para reflexionar otra vez):</p>

<p>&ldquo;Hay momentos en los que siento que la carga del trabajo y mis demás responsabilidades me agotan, pero tú eres capaz de darme una sonrisa o una mirada y me devuelves el ánimo. Gracias por existir, que tengas un bonito día de la mujer.&rdquo;</p>

<p>&ldquo;¡Feliz día de la mujer, mi amada! Deseo decirte una vez más que es un gran privilegio para mí estar junto a una hermosa dama que cada día me da su gran cariño y que me motiva a ser mejor.&rdquo;"</p>

<p>&ldquo;Un día te elegí para que seas la mujer que siempre me acompañe y fue la mejor decisión de mi vida pues eres una esposa maravillosa. Felicidades en este día de la mujer y que Dios nos permita estar siempre juntos.&rdquo;"</p>

<p>&ldquo;Gracias por estar siempre con nosotros, ya sea en el trabajo o en la casa, siempre están presentes para aconsejar y acompañar al hombre.&rdquo;</p>

<div style="position:relative;height:0;padding-bottom:75.0%"><iframe src="https://www.youtube.com/embed/aC8Ls-5nRxM?ecver=2" width="480" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo sacar la licencia de conducción en Rusia]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/03/05/como-sacar-la-licencia-de-conduccion-en-rusia/"/>
    <updated>2017-03-05T09:40:14-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/03/05/como-sacar-la-licencia-de-conduccion-en-rusia</id>
    <content type="html"><![CDATA[<p>En Rusia sólo los que toman los cursos de conducción pueden obtener el pase. Cada escuela de conducción elabora su programa de estudios guiándose por las directrices del Ministerio de Educación. El curso dura de 3 a 4 meses y la parte teórica ocupa dos tercios del programa. Antes de firmar un contrato con una escuela de conducción, hay que asegurarse de que ella tenga licencia del Gobierno.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/pase/escuela.jpeg" width="200"></p>

<p>Lo primero que le empiezan a enseñar a uno es la parte teórica. En cada clase el profesor explica un capítulo del código de tránsito y después da una tarea para la casa como memorizar las normas de ese capítulo y practicar las tareas correspondientes del libro para el examen. En la siguiente clase, el profesor hace un breve repaso del conocimiento de los estudiantes y, si todo está bien claro, pasa al siguiente tema.</p>

<!-- more -->


<p><img class="left" src="http://blog.vero4ka.info/images/pase/ploshadka.jpg" width="200"></p>

<p>Después de varias clases teóricas, simultáneamente empieza la parte práctica. A cada le asignan un profesor de conducción. Las primeras clases pasan exclusivamente en un área cerrada. Durante esas clases, el profesor explica cómo funciona un carro, cómo se debe arrancar y hacer maniobras. Normalmente un área de conducción tiene palitos puestos con banderas y la marcación en el asfalto para practicar los siguientes ejercicios:</p>

<h4>1. Arrancar en subida</h4>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/examen_gibdd_estakada.jpg" width="400"></p>

<p>cuando el carro arranca desde la pendiente del ascenso. El estudiante debe aprender cómo empezar el movimiento, quitando el freno de mano y arrancar al mismo tiempo sin rodar hacía atrás.</p>

<h4>2. Parquar un carro en reversa en un tiempo</h4>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/examen_gibdd_boks.jpg" width="400"></p>

<p>Durante este ejercicio, el estudiante practica cómo paquear un carro sin tumbar las banderas de control, mirando el espejo derecho.</p>

<h4>3. Viraje de 180 grados</h4>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/examen_gibdd_razvorot.jpg" width="400"></p>

<p>El tercer ejercicio es para aprender a hacer un viraje de 180 grados dentro de un espacio limitado con las banderas.</p>

<h4>4. Serpiente</h4>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/examen_gibdd_zmeika.jpg" width="400"></p>

<p>En este ejercicio las banderas están ubicadas en la una línea, y hay qye contornear ellas sin tumbarlas.</p>

<h4>5. Parquear en línea</h4>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/examen_gibdd_parkovka.jpg" width="400"></p>

<p>El último ejercicio tienen el fin de practicar cómo parquear un carro en línea entre dos carros.</p>

<p>Después de aprender a hacer todos estos ejercicios, el estudiante puede salir a practicar en la ciudad. Claro que el profesor tiene en su carro un doble juego de pedales para ayudar a su aprendiz en caso de error.</p>

<p>Al final del curso, el estudiante presenta un examen interno de las escuela y después de eso puede presentar el examen del Gobierno frente a la policía de tránsito. El examen final consta de tres partes: la parte teórica y las partes prácticas - dentro de un área errada y en la ciudad.</p>

<p>Para prepararse para la parte teórica, uno puede comprar un libro con las preguntas de examen. El libro tiene 800 preguntas, de las cuales hay 20 aleatorias que aparecen en el examen en una de las 40 fichas posibles.</p>

<p>Ejemplos de pregunas:</p>

<h5>Q1. Usted puede continuar el movimiento por el carril izquierdo</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question1.png"></p>

<ol>
<li>Sólo para voltear a la izquierda.</li>
<li>Sólo para tomar retorno.</li>
<li>Para voltear a la izquierda o tomar retorno</li>
</ol>


<h5>Q2. Usted tiene la intención de seguir derecho. ¿A quién debe ceder la vía?</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question2.png"></p>

<ol>
<li>Sólo a la motocicleta.</li>
<li>Sólo a la motocicleta y al carro.</li>
<li>A nadie.</li>
</ol>


<h5>Q3. ¿A quién debe ceder la vía al girar a la izquierda?</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question3.png"></p>

<ol>
<li>A las tranvías А y Б.</li>
<li>Al tranvía A y al carro.</li>
<li>Sólo al tranvía A.</li>
<li>A nadie.</li>
</ol>


<h5>Q4. ¿QUé hay que hacer en una situación en la que haya un deslizamiento lateral del eje trasero en el carro con tracción trasera durante un giro?</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question4.png"></p>

<ol>
<li>Hundir el accelerador y usar el volante para estabilizar el movimiento.</li>
<li>Frenar un poco y girar el volante hacía la dirección de deslizamiento.</li>
<li>Soltar consideramente el acelerador sin girar el volante.</li>
<li>Soltar un poco el acelerador y girar el volante hacía la dirección de deslizamiento.</li>
</ol>


<h5>Q5. ¿Usando qué treyectoria está permitido el giro a la izquierda?</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question5.png"></p>

<ol>
<li>Sólo A.</li>
<li>Sólo Б.</li>
<li>Unsando cualquiera.</li>
</ol>


<h5>Q6. ¿En qué caso usted debe ceder el camino al tranvía?</h5>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question6.png"></p>

<ol>
<li>Al girar a la izquierda.</li>
<li>Al seguir adelante.</li>
<li>EN ambos casos mencionados.</li>
</ol>


<h4>Q7. ¿Está permitido adelantar a un carro si usted está en carretera?</h4>

<p><img class="center" src="http://blog.vero4ka.info/images/pase/question7.png"></p>

<ol>
<li>Sí.</li>
<li>Sí. pero sólo si lo hace antes de cruzar el ferrocarril.</li>
<li>No.</li>
</ol>


<p><img class="right" src="http://blog.vero4ka.info/images/pase/examen_gibdd_1.jpg" width="200"></p>

<p>Si la persona contesta de forma correcta d todas las preguntas, pasa a la otra etapa. donde le piden hacer tres ejercicios de los que practivcaba en el area cerrar con su profesor.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/pase/examen_gibdd_2.jpg" width="200"></p>

<p>En caso de éxito a la persona la invitan con otros 2-3 personas a un carro de la policía de tránsito. El policía los lleva a alguna parte de la ciudad y luego invita a sus pasajeros (por turnos) a sentarse en el asiento del conductor y les da indicaciones a dónde deben ir y por dónde tienen que girar. No todas las indicaciones cumplen con las normas de tránsito. y por eso la persona al volante debe pensar primero, en lugar de obedecer ciegamente al policía. Si la persona comete más de tres errores insignificantes o un error grave, el policía termina el examen y baja a la persona. En caso de que todo esté bien, le dicen en qué día y horario se puede recoger el pase.</p>

<p>Respuestas correctas:</p>

<ul>
<li>Q1 - 3</li>
<li>Q2 - 3</li>
<li>Q3 - 3</li>
<li>Q4 - 4</li>
<li>Q5 - 2</li>
<li>Q6 - 3</li>
<li>Q7 - 3</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enrique Peñalosa en Rusia]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/26/enrique-penalosa-en-rusia/"/>
    <updated>2017-02-26T17:31:09-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/26/enrique-penalosa-en-rusia</id>
    <content type="html"><![CDATA[<blockquote><p>Usted hace que la gente, como las ratas, corra debajo de las calles.</p><footer><strong>Enrique Peñalosa</strong></footer></blockquote>


<p><a href="https://en.wikipedia.org/wiki/Vukan_R._Vuchic">Vukan Vuchic</a> - urbanista y profesor de la Universidad de Pennsylvania - en su libro <a href="https://www.goodreads.com/book/show/2737061-transportation-for-livable-cities">Transportation for Livable Cities</a> escribe lo siguiente:</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/transportation_book.jpg" width="200"></p>

<p>&ldquo;En los últimos años en muchas ciudades alrededor del mundo, sobre todo en los países en desarrollo (Brasil, México, China), empezaron a funcionar los sistemas de líneas de autobuses y trolebuses, trazados a lo largo exclusivamente en los carriles separados. Estos sistemas de autobús de tránsito rápido (Bus Rapid Transit en inglés, <a href="https://es.wikipedia.org/wiki/Autob%C3%BAs_de_tr%C3%A1nsito_r%C3%A1pido">BRT</a>) son distintos al tren ligero (light rail transit, <a href="https://en.wikipedia.org/wiki/Light_rail">LRT</a>). Ellos requieren una menor inversión de capital, pero mayores costos operativos causados ​​por un mayor insumo laboral: el conductor de bus del sistema BRT opera con una capacidad nominal <strong>de 80 a 140</strong> asientos de pasajeros, mientras que el LRT está diseñado para una capacidad <strong>de 250 a 750</strong> asientos. Por otro lado, la construcción del BRT toma menos tiempo que la del LRT. Los ejemplos del último sistema en Bogotá (Colombia), Pekín (China) y Ahmedabad (India) demuestran que el tiempo requerido, para que empiecen a funcionar los BRT, en realidad es muy corto. Los indicadores de explotación, como los tiempos de desplazamiento y la regularidad de los buses, en gran medida dependen del trabajo de la policía local, que debe garantizar el  tránsito prioritario. Desafortunadamente, en muchas ciudades, el trabajo policial es extremadamente ineficiente. Además, esos indicadores demenden de los líderes políticos locales o los tribunales que a menudo devuelven las carriles exclusivos del BRT a un estado para uso general: por razones de la "competencia leal&rdquo; permiten que otras busetas y minibuses circulen en ellos. Y así los carriles exclusivos se convierten en los pasillos densamente cargados con el movimiento desorganizado."</p>

<!-- more -->


<p>En el año 2013 Enrique Peñalosa visitó el tercer <a href="https://en.wikipedia.org/wiki/Moscow_Urban_Forum">Foro Urbano de Moscú</a>, donde él abrió un debate público con el alcalde de Moscú <a href="https://en.wikipedia.org/wiki/Sergey_Sobyanin">Serguéi Sobianin</a>. Parece que fue la primera vez que Sobianin fue criticado por ser demasiado indulgente con los automovilistas.</p>

<p>Varios periódicos rusos como <a href="https://www.gazeta.ru/">Gazeta.ru</a> , <a href="http://www.the-village.ru/">The Village</a> y <a href="https://en.wikipedia.org/wiki/Afisha">Afisha.Daily</a> publicaron sus entrevistas con Peñalosa.</p>

<p><strong>Gazeta.ru:</strong> En el foro usted interpretaba el papel del abogado de los peatones criticando con dureza el alcalde de Moscú. ¿Qué haría usted en su posición?</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/perehod.jpg" width="350"></p>

<p><strong>Enrique Peñalosa:</strong> Las autoridades de su ciudad toman muchas decisiones innovadoras. Pero a mi me parece que es más lo que necesita ser mejorado. Hay unos principios generales para resolver los problemas de tráfico en la ciudad. Su ciudad, por ahora, les pertenece a los automovilistas. Incluso en el centro de Moscú puedo ver los pasos peatonales subterraneos. Usted hace que la gente, como las ratas, corra debajo de las calles, para que ellos no perturben los carros. Es una política equivocada. Ahora en todo el mundo la gente entiende que lo único que traen las autopistas urbanas - es daño. Ellas, como un muro, restringen la libertad de las personas. Como los rios venenosos, reducen el valor de las tierras cercanas. La gente no quiere vivir al lado de ellas.</p>

<p><strong>Gazeta.ru:</strong> Esto es comprensible. Pero es imposible imaginar una ciudad sin calles amplias.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/penalosa/metro_map.jpg" width="350"></p>

<p><strong>Enrique Peñalosa:</strong> Deben ser vías urbanas y no calles. ¿Han caminado por los Campos Elíseos en París? Tienen diez carriles, no provocan ningún daño a la ciudad. Es decir, a lo largo de las avenidas debe haber bulevares grandes, aceras, edificios con fachadas bonitas. En este caso ellas reaniman la ciudad en lugar de matarla. Y otra cosa. A pesar de que el metro de Moscú es muy bonito, ¿para qué meter a la gente debajo del suelo?</p>

<p><strong>Gazeta.ru:</strong> Metro - &ldquo;nuestro todo&rdquo;.</p>

<p><strong>Enrique Peñalosa:</strong>  Sí, he oído esta respuesta de muchos. Pero piencen en ello. De hecho, las personas que usan el transporte público tienen que estar bajo la tierra, mientras tanto, los que conducen carros disfrutan el sol. Es necesario construir un sistema de transporte público en superficie, y no por debajo de ella. En muchas ciudades, incluyendo a mi Bogotá, han sido implementados unos buenos sistemas de buses.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/moscow_map.png" width="350"></p>

<p><strong>Gazeta.ru:</strong> Sí, los ciudadanos de Bogotá subieron a los buses de buena gana. Con tantas ganas, que ahora dicen, que el apretón allá es peor que en el metro de Moscú.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/penalosa/probka_metro.jpg" width="200"></p>

<p><strong>Enrique Peñalosa:</strong> ¿No les gustan los buses? Pueden construir un sistema de tranvías. O un metro ligero. Pero la gente debe tener una opción alternativa: ir debajo de la tierra o utilizar el transporte público en la superficie. En Moscú hay una una gran cantidad de áreas sin metro. Y para ir de un punto al otro, lo que uno tiene que hacer es atravezar el centro. Esos puntos dueden estar conectados a través de un sistema de buses.</p>

<p><strong>Gazeta.ru:</strong> En una escala de la ciudad &ldquo;retrasada&rdquo; a &ldquo;progresiva&rdquo;, ¿qué nota pondría para Moscú?</p>

<p><img class="right" src="http://blog.vero4ka.info/images/penalosa/tramvai.jpg" width="350"></p>

<p><strong>Enrique Peñalosa:</strong> Creo que algo en el medio. En Moscú hay lugares para la recreacion pública, hay ciclorutas, zonas peatonales, que es muy bueno. Desde el período del comunismo, cuando la tierra pertenecía al Estado, quedaron muchos espacios verdes. Sin embargo, no a todos esos espacion les dan un uso correcto. Están mal distribuidos y, de hecho, se pierden. Pero tienen mucho potencial. (&hellip;) Si usted da una vuelta por el centro de Moscú, lo disfrutará, es probable que sea un paseo interesante. Pero si usted va a un barrio residencial, sentirá como si estuviera castigado: todo está gris, feo, hay pocos cafés y pocas tiendas.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/penalosa/metromost.jpg"></p>

<p><strong>Enrique Peñalosa</strong> (de la entrevista con <strong>The Village</strong>): En Bogotá no hay metro. No pudimos permitir vincular todas las areas de la ciudad con las líneas de metro. Por eso hemos creado un sistema TransMilenio. En principio, se parece más a un metro que a las líneas de autobuses. Pero los autobuses son una forma de desplazamiento más eficiente y menos costosa que el metro. Eso funciona así: se acera un bus - de tres vagones, seis puertas, pos las que las personas salen y entran en unos segundos. Hicimos que los buses fueron mejores que un metro. Algunas las calles en Bogotá eran estrechas, por lo cual fue imposible proporcionar carriles exclusvos para los buses. Luego decidimos abordar el problema de manera diferente y crear una ciudad con cientos de kilómetros de vías solamente para autobuses, ciclistas y peatones.</p>

<div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/F60jcKjs2-M?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>


<p><br></p>

<p style="text-align:center;"> Metro de moscú</p>

<table>
<thead>
<tr>
<th>   </th>
<th> Moscú </th>
<th> Bogotá </th>
</tr>
</thead>
<tbody>
<tr>
<td> Area </td>
<td> <a href="https://en.wikipedia.org/wiki/Moscow">251 100 hectáreas</a> </td>
<td> <a href="https://en.wikipedia.org/wiki/Bogot%C3%A1">158 700 hectáreas</a> </td>
</tr>
<tr>
<td> Area de zonas verdes </td>
<td> <a href="http://www.greenpeace.org/russia/ru/news/2015/07-05-moscow_trees/">36 100 hectáreas</a> </td>
<td> <a href="http://www.eltiempo.com/archivo/documento/CMS-7634408">8 800 hectáreas</a> </td>
</tr>
</tbody>
</table>


<p><br></p>

<h3>Enlaces:</h3>

<ul>
<li>Entrevista con la revista Afisha.Daily: <a href="https://daily.afisha.ru/archive/gorod/changes/enrike-penyalosa-o-tom-kak-levaya-ideya-pomogaet-gorodam-v-epohu-kapitalizma/">https://daily.afisha.ru/archive/gorod/changes/enrike-penyalosa-o-tom-kak-levaya-ideya-pomogaet-gorodam-v-epohu-kapitalizma/</a></li>
<li>Entrevista el el periódico Gazeta.ru: <a href="https://www.gazeta.ru/comments/2013/12/30_a_5824765.shtml">https://www.gazeta.ru/comments/2013/12/30_a_5824765.shtml</a></li>
<li>Articulo de The Village acerca de la conferencia pública de Enrique Peñalosa en Moscú: <a href="http://www.the-village.ru/village/city/infrastructure/112681-lektsiya-enrike-penyalosa">http://www.the-village.ru/village/city/infrastructure/112681-lektsiya-enrike-penyalosa</a></li>
<li>Articulo de The Village acerca de Enrique Peñalosa: <a href="http://www.the-village.ru/village/city/city/135769-penyalosa">http://www.the-village.ru/village/city/city/135769-penyalosa</a></li>
<li>Conferencia pública de en Enrique Peñalosa Kazan: <a href="https://www.youtube.com/watch?v=FUDjR7TxOWo">https://www.youtube.com/watch?v=FUDjR7TxOWo</a></li>
<li><a href="https://es.wikipedia.org/wiki/New_Urbanism">New Urbanism</a></li>
<li>Enrique Peñalosa: &ldquo;La ciudad ideal&rdquo; - conferencia en Kiev.: <a href="https://www.youtube.com/watch?v=L1smUjcW8zo">https://www.youtube.com/watch?v=L1smUjcW8zo</a></li>
<li>Enrique Peñalosa en Kazan: <a href="https://www.youtube.com/watch?v=siJcN4N9HkM">https://www.youtube.com/watch?v=siJcN4N9HkM</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[«Vete de aquí, niña»: cómo vivir cuando te ves más joven de lo que eres]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/20/vete-de-aqui/"/>
    <updated>2017-02-20T18:57:13-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/20/vete-de-aqui</id>
    <content type="html"><![CDATA[<p>Traducción <a href="http://www.wonderzine.com/wonderzine/life/experience/219769-forever-young">del articulo</a> de la revista Wonderzine escrito por Dasha Tatarkova.</p>

<p>Hace más o menos un mes escribí en mi twitter, que año tras año me parezco menos a un adulto convencional. Casi no me maquillo, llevo un morral, overol y sombrero de tela, y a menudo no llevo sostén. Tengo veintisiete años, pero incluso los doctores a veces piensan que tengo diecisiete como mucho. El hecho de que me vea más joven de que lo soy, no me molesta – es el resultado de opciones deliberadas. Y si eso me llegara a molestar, cambiaría mi personalidad para ajustarme a los estándares de la sociedad. Me molesta otra cosa: cuando la gente decide que soy todavía una muchacha adolescente, me trate con condescendencia, y a veces incluso de forma grosera. Paradójicamente, así se comportan incluso los profesionales, como los médicos. En nuestra sociedad poseída por el culto a la juventud, precisamente la juventud se vuelve el delito fundamental.</p>

<!-- more -->


<p><img class="center" src="http://blog.vero4ka.info/images/vete-de-aqui.jpg"></p>

<blockquote><p>En nuestra sociedad poseída por el culto a la juventud, precisamente la juventud se vuelve el delito fundamental.</p></blockquote>

<p>Desde cada anuncio publicitario, a las mujeres las inducen a ocultar su edad. A Andie McDowell, que hace publicidad de la crema antiarrugas, le retocan la cara hasta tal punto que se ve más realista su copia del museo Madame Tussaud. Al mismo tiempo, las muchachas de edad indefinida, que está gritando: “JUVENTUD”, nos venden cualquier basura. La juventud es un negocio multimillonario, donde todos le sacan tajada: la industria de la belleza con sus productos milagrosos y los suplementos dietéticos, cirugía plástica con sus procedimientos costosos, y la moda, después de todo. Nos venden la ropa nos hace parecer más jovenes, así como las modelos que la presentan. Al igual que las máscaras milagrosas para tu cara. &ldquo;Come también esos panes integrales con un té saludable.&rdquo;</p>

<p>Al mismo tiempo en la conciencia de las masas, la juventud sigue asociándose si no con la estupidéz, al menos con la ingenuidad. Y los estereotipos numerosos sólo apoyan eso. Las chicas jóvenes deben ser tontas y estar de acuerdo en todo con los hombres. &ldquo;¡Jóvenes!&rdquo; - y suspirar&hellip; - &ldquo;Cuando hayas crecido un poco lo vas a entender.&rdquo; Como se dice: &ldquo;Si jeunesse savait, si vieillesse ponsait&rdquo; (&ldquo;si la juventud supiera y la vejaz pudiera&rdquo;). La gente piensa que si alguien es joven, entonces no tiene experiencia, e incluso no puede razonar de forma lógica. Aunque ambas cosas no necesariamente vienen con los años. Ambos son el resultado de los esfuerzos conscientes. Algunas personas, después de vivir medio siglo, todavía no pueden deshacerse del infantilismo, mientras algunos adolescentes crean empresas exitosas. Tal vez, el odio recíproco se desencadena, y los que ya parecen estar mucho más allá su edad &ldquo;ideal&rdquo;, tratan con la ferocidad a aquellos que todavía &ldquo;caen en la corriente&rdquo;.</p>

<blockquote><p>Todo el sistema estaba basado en el principio de la obediencia y de la antigüedad: encima de ti siempre había alguien, que tenía razón, simplemente por tener un rango superior.</p></blockquote>

<p>En Rusia, como en muchas sociedades conservadoras, hace mucho se estableció una regla &ldquo;obedece a los mayores&rdquo;. Una persona ha pasado por diferentes etapas de la evolución: <a href="https://es.wikipedia.org/wiki/Peque%C3%B1os_de_Octubre">octubrista</a> se convirtía en un <a href="https://es.wikipedia.org/wiki/Movimiento_de_Pioneros">pionero</a>, que luego se convirtía en miembro del <a href="https://es.wikipedia.org/wiki/Komsomol">Komsomol</a>, y luego se unía al <a href="https://es.wikipedia.org/wiki/Partido_Comunista_de_la_Uni%C3%B3n_Sovi%C3%A9tica">partido</a>. Todo el sistema estaba basado en el principio de la obediencia y de la antigüedad: encima de ti siempre había alguien, que tenía razón, simplemente por tener un rango superior. Ese principio todavía está vivo: el lugar de un poder vertical llegó el sistema &ldquo;colegio-universidad-trabajo&rdquo;, que también sobreentendía la autoridad sobre el <em>junior</em>, y sin pasar todas esas etapas no puedes convertirte en un miembro &ldquo;oficial&rdquo; de la sociedad y ser un adulto &ldquo;de verdad&rdquo;. Se sobreentiende que sólo con la experiencia universal se puede ganar el respeto de los demás.</p>

<p>La Unión Soviética se cayó, pero ese principio humillante todavía está con nosotros. ¿Cuántas veces han escuchado el despectivo &ldquo;niña&rdquo;, o &ldquo;cuando crezcas, entenderás&rdquo;, o &ldquo;¡no lo pienses!&rdquo; Yo lo enfrento constantemente. Tengo 27 años: para un adolescente soy una persona con experiencia, para mis padres - todavía una niña, pero por alguna razón todos olvidan que en primer lugar soy una persona, una persona con mis experiencias personales y con mis tonterías. Soy un &ldquo;individuo único&rdquo;, como lo solíamos decir en los estudios de las ciencias sociales. Aunque, todavía no me están tomando en cuenta sólo porque no parezco a un adulto &ldquo;de verdad&rdquo;, olvidando que no soy igual al conjunto de mis características físicas y merezco respeto, independientemente de ellos.</p>

<p>Cualquieres estereotipos son perjudiciales, porque niegan la diversidad del mundo y por lo tanto nos privan de la empatía. ¿Qué usted ve cuando me está mirando? Sus propias ideas sobre el mundo. Nadie puede comprender verdaderamente a un extraño, y para eso usamos estereotipos que simplifican nuestro pensamiento y ayudan hacer conclusiones más rápido. Sin embargo, esto es sólo una herramienta y, como cualquier otra herramienta, tiene que ser utilizada con prudencia, sin sustituir todo el complejo proceso de la comprensión. Cuando, mirando a una persona extraña, vemos un conjunto de estereotipos en lugar de ver a un ser humano, nos privamos de sentir algo por los demás. Todos nosotros es mucho más que una colección de nuestras propiedades, somos unas personas más complejas y multifacéticas.</p>

<p>Mi pelea con los estereotipos empezó incluso antes de mi nacimiento. Parezco mucho a mi mamá, y ella enfrentaba las mismas problemas hace 30 años. Su amiga de la misma edad que ella, no la invitó a su boda, diciendo que mi mamá todavía era “una niña” por tener la nariz chata chistosa. Después de que nací, cuando ibamos al médico, no querían que yo era su hija, en mejor de los casos, pensaban que yo era su hermana menor. En el colegio yo siempre estaba de últimas en la fila de las clases de cultura física (¿para qué nos ordenaban según nuestra altura?), siempre escuchaba chistes acerca de mi apariencia, y después - los comentarios de algunos hombres acerca de mi figura “incorrecta”. Es sintomático y sucede constantemente. Es especialmente difícil enfrentar el mundo de los burócratas en Rusia: desde los ministerios hasta los hospitales. Allá todos se ponen groseros conmigo: las personas que esperan su turno y la gente que me atiende. Pero, cuando se dan cuenta de cuántos años tengo en realidad, caen en una confusión - una buena ilustración de “las expectativas y la realidad”. Y eso es aún más insultante: ¿por qué no merezco que me hablen con un tono de voz tranquilo y respetuoso si tengo N años menos de lo que ustedes han pensado?</p>

<p>Y no estoy sóla con mi problema. Mientras la mitad del mundo quiere estar en los zapatos de  Benjamin Button, los demás sueñan con cosas competamente diferentes. La gente tiene problemas para encontrar trabajo, estableces relaciones (y no sólo románticas) con la gente de su edad y ganar respeto, sólo porque su apariencia no corresponde a los estandares predeterminados. En parte, la actudud hacía los jóvenes es una historía de violencia. No es sólo la violencia poco visible de los comentarios sarcásticos y comentarios burlones, pero también la violencia física. ¿Con qué frecuencia los padres se ven gritando a sus niños pequeños y amenazándolos? Desafortunadamente, todavía no tenemos la cultura de culpar a los padres que usan la violencia física con sus niños, pero todavía está viva la cultura de los castigos. No me molesta que no me vean cómo la sociedad está esperando ver a una mujer de 30 años de edad: mi aspecto - que es el resultado de la biología, que no tengo ganas de cambiar, y de mi elección, lo cual hago de acuerdo a mis preferencias. Lo que me molesta es que en nuestra cultura sigue siendo normal de ser grosero con los niños y, de forma automática, con todos los que se les parezcan. Ni los niños ni los adultos merecen ese trato - ambos son dignos de respeto, simplemente porque están ahí.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[La misma cosa]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/14/la-misma-cosa/"/>
    <updated>2017-02-14T21:14:51-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/14/la-misma-cosa</id>
    <content type="html"><![CDATA[<p>Para los que están convencidos de que inglés es muy diferente a español.</p>

<!-- more -->


<p><strong>Gerund</strong>: <code>cocinando</code>/<code>cooking</code> <br>
<strong>Present Participle</strong>: <code>cocinado</code>/<code>cooking</code> <br>
<strong>Past Participle</strong>: <code>cocinado</code>/<code>cooked</code> <br></p>

<h3>Pretérito indefinido / Past Simple</h3>

<p>He <strong>cooked</strong> yesterday. <br>
Él <strong>cocinó</strong> ayer.</p>

<h3>Pasado Continuo / Past Continuous (Progressive)</h3>

<p>He <strong>was cooking</strong> when the phone rang. <br>
Él <strong>estaba coninando</strong> cuando el teléfono timbró.</p>

<h3>Pretérito pluscuamperfecto / Past Perfect</h3>

<p>El pretérito pluscuamperfecto sirve para expresar la anterioridad de un hecho pasado respecto a otro también pasado.</p>

<p>He <strong>had cooked</strong> the dinner when the phone rang. <br>
Él <strong>había cocinado</strong> la cena cuando el teléfono timbró.</p>

<p>They <strong>had studied</strong> English before they went to London.<br>
<strong>Habían estudiado</strong> inglés antes de irse a Londres.</p>

<h3>Past Perfect Continuous</h3>

<p>I <strong>had been studying</strong>   English for 2 years when I went to London. <br>
<strong>Había estado estudiando</strong> inglés durante 2 años cuando fui a Londres.</p>

<h3>Presente / Present Simple (Indefinite)</h3>

<p>I <strong>cook</strong> fish every Friday. <br>
Yo <strong>cocino</strong> pescado cada viernes.</p>

<h3>Estar + gerundio / Present Continuous (Progressive)</h3>

<p>I <strong>am cooking</strong> now. <br>
<strong>Estoy cocinado</strong> ahora.</p>

<h3>Pretérito perfecto (compuesto) / Present Perfect</h3>

<p><strong>He cocinado</strong> muchos platos. <br>
I <strong>have cooked</strong> many meals.</p>

<p><strong>He hablado</strong> con Peter. <br>
I <strong>have talked</strong> to Peter.</p>

<h3>Pretérito imperfecto / used to + inf.</h3>

<p>I <strong>used to cook</strong> almost everyday. <br>
Yo <strong>cocinaba</strong> casi todos los días. <br>
Yo <strong>solía cocinar</strong> casi todos los días.</p>

<h3>Present Perfect Continuous (Progressive)</h3>

<p>They <strong>have been talking</strong> for three hours. <br>
<strong>Han estado hablando</strong> durante tres horas.</p>

<h3>Futuro Imperfecto / Future Simple</h3>

<p>cocinaré = will cook</p>

<p>I will cook tomorrow. <br>
Mañana cocinaré.</p>

<h3>Futuro Próximo (ir + a) / going to</h3>

<p>ir a = be going to</p>

<p>I <strong>am going to cook</strong>. <br>
<strong>Voy a cocinar</strong>.</p>

<h3>Futuro Perfecto / Future Perfect</h3>

<p>habrá + participio = will have + Past Participle</p>

<p>He <strong>will have fallen</strong> off the bicycle. <br>
Se <strong>habrá caído</strong> de la bicicleta.</p>

<p>I <strong>will  have eaten</strong> before we meet. <br>
<strong>Habré comido</strong> antes de reunirnos.</p>

<h3>El futuro perfecto continuo / Future Perfect Continuous</h3>

<p>habrá estado + gerundio = have been + gerund</p>

<p>Francis <strong>will have been living</strong> in Italy for 4 years by the time he finishes his studies. <br>
Francis <strong>habrá estado viviendo</strong> en Italia durante 4 años, hasta que haya terminado sus estudios.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo hacer bot para Facebook en Python]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/02/04/como-hacer-bot-para-facebook-en-python/"/>
    <updated>2017-02-04T11:27:15-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/02/04/como-hacer-bot-para-facebook-en-python</id>
    <content type="html"><![CDATA[<p>Primero creamos una aplicación en Facebook, vamos al menú de configuración y agregamos el servicio de messenger (&ldquo;Add Product&rdquo;):</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_webhook.png"></p>

<!-- more -->


<p>Luedo vamos a hacer click en el botón &ldquo;Setup Webhooks&rdquo;:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_register.png"></p>

<p>Para poder verificar que nuestro bot esté bien configurado, Facebook nos mandará una peticicón GET a nuestro servidor</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GET https://mipagina.com/bot/fb-webhook/?hub.mode=subscribe&hub.challenge=1122334455&hub.verify_token=una-frase-secreta</span></code></pre></td></tr></table></div></figure>


<p>y esperará que le respondemos con el código 200 y el contenido del paramentro <code>hub.challenge</code> cuando <code>verify_token</code> coincide con la frase secreta que especificamos, o con el código HTTP 403 en el caso opuesto.</p>

<p>Entonces esribimos una vista que se encargará de eso:</p>

<figure class='code'><figcaption><span>urls.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>    <span class="c"># ...</span>
</span><span class='line'>    <span class="n">url</span><span class="p">(</span>
</span><span class='line'>        <span class="s">r&#39;fb-webhook/$&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">FacebookCommandReceiveView</span><span class="o">.</span><span class="n">as_view</span><span class="p">(),</span>
</span><span class='line'>        <span class="n">name</span><span class="o">=</span><span class="s">&#39;fb_webhook&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">),</span>
</span><span class='line'>    <span class="c"># ...</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>urls.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">FacebookCommandReceiveView</span><span class="p">(</span><span class="n">View</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;hub.mode&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s">&#39;subscribe&#39;</span> <span class="ow">and</span> <span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;hub.verify_token&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="n">settings</span><span class="o">.</span><span class="n">FACEBOOK_VERIFY_TOKEN</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;hub.challenge&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HttpResponseForbidden</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cuando la vista esté lista y desplegada en producción, podemos oprimir el botón &ldquo;Verify and Save&rdquo;. Después de eso Facebook nos dará un token de la aplicación y permitirá configurar un <em>webhook</em>:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_settings.png"></p>

<p>Ahora podemos suscribirnos a los eventos en messenger, es decir: cada vez que alguien escibe un mensaje vía messanger a nuestra página de Facebook, Facebook enviará una petición POST al weebhook con el JSON que tendrá todos los datos del mensaje.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_add_subscription.png"></p>

<p>Desúés de oprimir el botón &ldquo;Add to Subscription&rdquo;, Facebook nos mostrará el enlace &ldquo;Edit notes&rdquo;:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_current_subscription.png"></p>

<p>Damos click en &ldquo;Edit notes&rdquo; y entramos a el formulario de configuración. Aquí especificamos la página a los mensajes de la cual vamos a suscribirnos e escribimos ejemplos de respuestas que dará nuesto bot a ciertos mensajes en Messanger:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_edit_subscription.png"></p>

<p>Eso sirve para que Facebook pueda verificar que nuestro bot efectivamente responde bien a los mensajes de chat.</p>

<p>Después de que Facebook verifique el comportamiento de nuestro bot, recibimos el mensaje de aprobación, diciendo que desde ahora nuestro bot está activo:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_subscription_status.png"></p>

<p>Eso nos permite hacer pruebas de la plataforma, porque el bot va a poder responder sólo a los mensajer enviados por los administradores de nuestra página de Facebook.</p>

<p>Cuando nuestro bot esté listo, lo podemos activar para todos los usuarios (hacerlo público):</p>

<p><img class="center" src="http://blog.vero4ka.info/images/bots/fb_bot_publish.png"></p>

<p>Enlaces:</p>

<ul>
<li><a href="https://developers.facebook.com/docs/messenger-platform/guides/quick-start">Quick Start</a>: cómo crear y configurar webhooks.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask con todas las arandelas]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/01/20/flask-con-todas-las-arandelas/"/>
    <updated>2017-01-20T09:18:28-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/01/20/flask-con-todas-las-arandelas</id>
    <content type="html"><![CDATA[<iframe src="//slides.com/vero4ka/flask-con-todas-las-arandelas/embed?style=light" width="576" height="420" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>




<!-- more -->


<h2>Para empezar</h2>

<p>Hay muchos recursos acerca de Flask en los internetes, pero aquí me gustaría mencionar los tres que considero fundamentales.</p>

<p>El primero, por supuesto, es la documentación oficial del framework: <a href="http://flask.pocoo.org/docs/">flask.pocoo.org/docs</a>.</p>

<p>Luego, es muy bueno mirar el libro de Miguel Grinberg: <a href="https://flaskbook.com/">flaskbook.com</a>, en donde se explica de forma bastante detallada cómo hacer una plataforma de publicación de entradas de blog. El código, que sirve como ejemplo en el libro, se puede encontrar en la página de github del autor. Como material complementario al libro, es muy recomendado echar una mirada en el <a href="https://blog.miguelgrinberg.com/">blog personal de Miguel Grinberg</a>, donde el autor cubre los temas más específicos del desarrollo en Flask.</p>

<p>Y ahora, como dijo el astronauta ruso Yuri Gagarin en el momento del despegue de su nave Vostok 1: &ldquo;¡Poyejali!&rdquo;&ldquo; (en ruso: Поехали!; se traduce como «¡Vámonos!»).</p>

<h2>Aplicación básica</h2>

<p>Empezamos con instalar <strong>Flask</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkvirtualenv pycon2017 -p python3
</span><span class='line'>$ pip install Flask</span></code></pre></td></tr></table></div></figure>


<p>Al momento de ésta presentación la última versión del framework es <strong>0.12</strong>.</p>

<p>Ahora creamos nuestra primera aplicación de Flask que va a ser sólo un archivo de Python:</p>

<figure class='code'><figcaption><span>app.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>El decorador <code>route</code> nos ayuda a definir la ruta de URL para la vista llamada <code>hello</code> que simplemente devuelve al navegador la respuesta HTTP 200 con la frase &ldquo;Hello World!&rdquo;.</p>

<p>Corremos la aplicación con el siguiente comando:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ python app.py 
</span><span class='line'> * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)</span></code></pre></td></tr></table></div></figure>


<p>Y ahora lo podemos abrir en nuestro navegador:</p>

<p><img class="center" src="http://blog.vero4ka.info/images/flask/flask_01.png"></p>

<h2>manage.py</h2>

<p>Nosotros, por experiencia con otros frameworks, ya nos acostumbramos a la posibilidad de acceder al shell de Python de nuestra aplicación, o con poder correr comandos, que pertenecen a la aplicación, desde la consola. Para tener todo esto en Flask, instalamos un librería llamada <code>Flask-Script</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install Flask-Script</span></code></pre></td></tr></table></div></figure>


<p>Ahora separamos nuestra aplicación en dos archivos: en el primero vamos iniciar la app de Flask, en la que especificamos la ruta de los archivos estáticos y del archivo de configuración (equivalente de <code>settings.py</code> en Django)</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span>
</span><span class='line'>        <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>y en el segundo vamos a colocar una instancia de <strong>Manager</strong>, que se encaragará de correr la aplicación con <code>python manage.py</code>:</p>

<figure class='code'><figcaption><span>manage.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask.ext.script</span> <span class="kn">import</span> <span class="n">Manager</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">create_app</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">create_app</span><span class="p">()</span>
</span><span class='line'><span class="n">manager</span> <span class="o">=</span> <span class="n">Manager</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Hello World!&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">manager</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Corriendo el siguiente comando en la consola</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py runserver -h HOST -p PORT</span></code></pre></td></tr></table></div></figure>


<p>podemos ver la misma aplicación, como en el paso anterior, pero ahora podemos además acceder a shell usando el comando</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./manage.py shell
</span><span class='line'>In [1]:</span></code></pre></td></tr></table></div></figure>


<h2>Configuración</h2>

<p>Miremos con más atención la estructura del proyecto:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>├── conf
</span><span class='line'>│   ├── config.py
</span><span class='line'>│   ├── __init__.py
</span><span class='line'>│   └── local_config.py
</span><span class='line'>├── manage.py
</span><span class='line'>└── run.py</span></code></pre></td></tr></table></div></figure>


<p>Ahora tenemos una carpeta con los archivos de configuración - <code>conf</code>:</p>

<figure class='code'><figcaption><span>conf/config.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">if</span> <span class="s">&#39;test&#39;</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">:</span>
</span><span class='line'>        <span class="kn">from</span> <span class="nn">test_config</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="kn">from</span> <span class="nn">local_config</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>Más información acerca de la configuración en Flask se puede encontrar en la página <a href="http://flask.pocoo.org/docs/0.12/config/">flask.pocoo.org/docs/0.12/config/</a>.</p>

<h2>Blueprints</h2>

<p>Cuando nuestro archivo con las vistas crezca, vamos a querer a separar la lógica de nuestra aplicación en módulos diferentes (así como lo tenemos con apps de Django):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>├── conf
</span><span class='line'>│   ├── config.py
</span><span class='line'>│   ├── __init__.py
</span><span class='line'>│   └── local_config.py
</span><span class='line'>├── app1
</span><span class='line'>│   ├── templates
</span><span class='line'>│   └── views.py
</span><span class='line'>├── app2
</span><span class='line'>│   ├── templates
</span><span class='line'>│   └── views.py
</span><span class='line'>├── manage.py
</span><span class='line'>└── run.py</span></code></pre></td></tr></table></div></figure>


<p>En este caso nos ayuda un concepto de crear aplicaciones llamado <strong>Blueprints</strong>. La información completa acerca de Blueprints se puede encontrar en la documentación de Flask: <a href="http://flask.pocoo.org/docs/0.12/blueprints/">flask.pocoo.org/docs/0.12/blueprints/</a>.</p>

<p>Creamos un Blueprint para nuestra aplicación, donde vamos a guardar las vistas relacionadas a nuestros usuarios, por ejemplo:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;users&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">__name__</span><span class="p">,</span>
</span><span class='line'>    <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;Hello Worlds!&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>y lo registramos en el archivo <code>run.py</code>:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span>
</span><span class='line'>        <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">users.views</span> <span class="kn">import</span> <span class="n">users</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">register_blueprint</span><span class="p">(</span><span class="n">users</span><span class="p">,</span> <span class="n">url_prefix</span><span class="o">=</span><span class="s">&#39;/users&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>indicando en el argumento <code>url_prefix</code> del método <code>register_blueprint</code>, que todos los URLs, relacionados con el Blueprint de usuario, van a empezar con el prefijo <code>/users</code>, por ejemplo: <a href="http://localhost:5000/users/">http://localhost:5000/users/</a>.</p>

<h2>URLs</h2>

<p>Miremos cómo se definen los URLs en Flask.</p>

<p>Primero, hay formas diferentes de especificar la ruta: usando el decorador de Blueprint <code>@users.route</code> o el método <code>users.add_url_rule</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;name&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_profile</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, {}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">users_list</span><span class="p">():</span>
</span><span class='line'>    <span class="k">pass</span>
</span><span class='line'><span class="n">users</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">,</span> <span class="s">&#39;users_list&#39;</span><span class="p">,</span> <span class="n">users_list</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el primer ejemplo podemos ver, que a la vista se pasa el parámetro de URL <code>name</code>, al que luego accedemos desde el parámetro <code>name</code> de la vista <code>user_profile</code>.</p>

<p>Flaks permite especificar el tipo de parámetro que esperamos. Por ejemplo, para los números enteros, el decorador de escribe así:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, user #{}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>También se puede explícitamente indicar el método HTTP, que acepta la vista.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;/create&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;POST&#39;</span><span class="p">,))</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_create</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>En este caso al tratar de acceder a la vista con el método GET, obtenemos el error 405 (Method not allowed).</p>

<p>Para obtener el URL, que corresponde a la vista usamos el método <code>url_for</code>, al que pasamos el nombre del Blueprint y el nombre de la vista:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">url_for</span>
</span><span class='line'>
</span><span class='line'><span class="n">url_for</span><span class="p">(</span><span class="s">&#39;users.user_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">user_pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Vistas</h2>

<h4>Request</h4>

<p>En Flask el objeto <code>request</code> no se está pasando como parámetro al la vista (como en Django, por ejemplo), sino que es una variable global:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">GET</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">localhost</span><span class="p">:</span><span class="mi">5000</span><span class="o">/</span><span class="n">users</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="mi">1</span><span class="err">?</span><span class="n">q</span><span class="o">=</span><span class="n">foo</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span><span class="s">&#39;users&#39;</span><span class="p">,</span> <span class="n">__name__</span><span class="p">,</span> <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">method</span><span class="p">)</span>  <span class="c"># GET</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="p">)</span>    <span class="c"># ImmutableMultiDict([(&#39;q&#39;, u&#39;foo&#39;)])</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, user #{}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Decoradores</h4>

<p>Aparte de la definición de ruta, la vista en Flask puede tener otros decoradores, por ejemplo:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@login_required</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello, user #{}!&lt;/h1&gt;&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Plantillas</h2>

<p>Ahora vamos a renderizar una plantilla desde nuestra vista. Para eso vamos a usar el método <code>render_template</code> que recibe como argumentos la ruta hasta la plantilla dentro de la carpeta que especificamos en el parámetro <code>template_folder</code> del Blueprint, y los demás argumentos que son los parámetros de contexto.</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">render_template</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span><span class="s">&#39;users&#39;</span><span class="p">,</span> <span class="n">__name__</span><span class="p">,</span> <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/user/&lt;int:pk&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_detail</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">&#39;users/detail.html&#39;</span><span class="p">,</span> <span class="n">user_id</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>users/templates/users/detail.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Hello, user #{{ user_id }}!<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Jinja2</h3>

<p>Para renderizar plantillas Flask usa el lenguaje <code>Jinja2</code>. Vamos a mirar algunas de sus funcionalidades:</p>

<h4>Variables:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ foo.bar }}
</span><span class='line'>{{ foo[&#39;bar&#39;] }}
</span></code></pre></td></tr></table></div></figure>


<h4>Condicionales:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if user.address %}
</span><span class='line'>    <span class="nt">&lt;p&gt;</span>{{ user.address }}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<h5>Bucles:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% for user in users %}
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>{{ user.name }}<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>{% else %}
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>No hay usuarios<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>{% endfor %}
</span></code></pre></td></tr></table></div></figure>


<h5>Bloques:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% block title %}Usuarios{% endblock %}
</span></code></pre></td></tr></table></div></figure>


<h5>Extender una plantilla base:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% extends &quot;layouts/main.html&quot; %}
</span></code></pre></td></tr></table></div></figure>


<h4>Comentario:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{# Texto #}
</span></code></pre></td></tr></table></div></figure>


<h5>Incluir otra plantilla:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% with rating=user.rating %}
</span><span class='line'>    {% include &#39;includes/_rating.html&#39; %}
</span><span class='line'>{% endwith %}
</span></code></pre></td></tr></table></div></figure>


<h5>Asignar un valor a una variable local:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% set permissions = user.get_permission() %}
</span><span class='line'>{{ permissions }}
</span></code></pre></td></tr></table></div></figure>


<h5>Filtros:</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ user.address|default(&#39;N/A&#39;) }}
</span></code></pre></td></tr></table></div></figure>


<h2>Procesadores de contexto</h2>

<p>De forma predeterminada, el contexto de todas las plantillas ya tiene las siguientes variables:</p>

<ul>
<li><code>config</code> - Objeto de configuración (<code>flask.config</code>)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ config.DEBUG }}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>request</code> - Objeto de la petición actual (<code>flask.request</code>)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ request.path }}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>session</code> - Objeto de sesión (<code>flask.session</code>)</li>
<li><code>g</code> - Variables globales</li>
</ul>


<p>Hay una forma de tener <code>context_processors</code> (como en Django) para poder pasar variables a todas las plantillas del proyecto:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">users.views</span> <span class="kn">import</span> <span class="n">users</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">register_blueprint</span><span class="p">(</span><span class="n">users</span><span class="p">,</span> <span class="n">url_prefix</span><span class="o">=</span><span class="s">&#39;/users&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@app.context_processor</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">constants_processor</span><span class="p">():</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;say_hello&#39;</span><span class="p">:</span> <span class="s">&#39;Hola&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora podemos acceder a la variable <code>say_hello</code> desde todas las plantillas sin tener que pasarla cada vez explícitamente:</p>

<figure class='code'><figcaption><span>users/templates/users/detail.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>{{ say_hello }}, user #{{ user_id }}!<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Modelos</h2>

<h3>SQLAlchemy</h3>

<p>Hay dos librerías que nos permiten trabajar con modelos y hacer peticiones SQL desde Flask.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">SQLAlchemy</span>
</span><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">SQLAlchemy</span>
</span></code></pre></td></tr></table></div></figure>


<p>Una es <code>SQLAlchemy</code> y la otra es su extensión para Flask - <code>Flask-SQLAlchemy</code>, que viene con algunas funcionalidades adicionales y útiles en el desarrollo web, por ejemplo, el método <code>first_or_404()</code> para obtener el primer elemento del query o error HTTP 404 si no existe, o el método <code>paginate()</code> para realizar paginación sobre los objetos de <code>BaseQuery</code>.</p>

<p>Ahora incluimos <code>SQLAlchemy</code> como una aplicación externa de nuestro proyecto. Primero creamos una variable <code>db</code> para que el import no se rompa cuando la aplicación todavía no se ha inicializado, y en <code>create_app</code> cuando inicializamos la aplicación: <code>db.init_app(app)</code>.</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_sqlalchemy</span> <span class="kn">import</span> <span class="n">SQLAlchemy</span>
</span><span class='line'>
</span><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="n">SQLAlchemy</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">init_app</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el archivo de configuración colocamos la ruta hacia nuestra base de datos.</p>

<figure class='code'><figcaption><span>conf/config.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">SQLALCHEMY_DATABASE_URI</span> <span class="o">=</span> <span class="s">&#39;sqlite:////tmp/test.db&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora podemos crear los modelos. Aquí en el ejemplo se puede ver cómo definir modelos, columnas de tipos diferentes y crear llaves foráneas</p>

<figure class='code'><figcaption><span>users/models.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;users&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">username</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">80</span><span class="p">),</span> <span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">email</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">120</span><span class="p">),</span> <span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">city_id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">u&#39;cities.id&#39;</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">created_at</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">DateTime</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="n">now</span><span class="p">())</span>
</span><span class='line'>    <span class="n">updated_at</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">DateTime</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="n">now</span><span class="p">(),</span>
</span><span class='line'>                        <span class="n">onupdate</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="n">now</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&#39;&lt;Usuario </span><span class="si">%r</span><span class="s">&gt;&#39;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">username</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">City</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;cities&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">255</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">users</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">relationship</span><span class="p">(</span><span class="s">&#39;User&#39;</span><span class="p">,</span> <span class="n">backref</span><span class="o">=</span><span class="s">&#39;city&#39;</span><span class="p">,</span> <span class="n">lazy</span><span class="o">=</span><span class="s">&#39;dynamic&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>CRUD</h3>

<p>Miramos los métodos de CRUD básicos que nos ofrece el ORM de SQLAlchemy.</p>

<h5>Crear</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="p">(</span><span class="n">email</span><span class="o">=</span><span class="s">&#39;john@example.com&#39;</span><span class="p">,</span> <span class="n">username</span><span class="o">=</span><span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Obtener todos los usuarios</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>  <span class="c"># [&lt;Usuario john&#39;&gt;, &lt;Usuario u&#39;admin&#39;&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Obtener el primer usuario</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">john</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">first</span><span class="p">()</span>  <span class="c"># &lt;Usuario &#39;john&#39;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Filtrar usuarios y ordenar</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="s">&#39;john&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span>
</span><span class='line'>    <span class="n">User</span><span class="o">.</span><span class="n">created_at</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">()</span> <span class="o">-</span> <span class="n">datetime</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">desc</span><span class="p">())</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Borrar</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>BaseQuery</code> no tiene método <code>save()</code>, sino todos los cambios que hacemos a objetos de modelos se agregan a la sesión. Como la sesión sólo vive durante la petición, para que nuestos cambios sean enviados a la base de datos, hace falta llamar el método <code>db.session.commit()</code>.</p>

<h2>Formularios</h2>

<p>Existen varias librerías de Python que nos permiten trabajar con formularios. En este ejemplo vamos a mirar una llamada <code>Flask-WTF</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">WTF</span>
</span><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Bootstrap</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vamos a usarla junto con una librería complementaria - <code>Flask-Bootstrap</code> - que lo único que hace es generar el código de HTML del formulario con la estructura y las clases de <a href="http://getbootstrap.com/2.3.2/">Twitter Bootstrap</a> (lo mismo que hace <code>django-crispy-forms</code>).</p>

<figure class='code'><figcaption><span>users/forms.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">wtforms</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask_wtf</span> <span class="kn">import</span> <span class="n">Form</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">UserForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>    <span class="n">email</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">(</span>
</span><span class='line'>        <span class="n">validators</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>            <span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">Email</span><span class="p">(),</span>
</span><span class='line'>            <span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">DataRequired</span><span class="p">(),</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>    <span class="n">username</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">(</span>
</span><span class='line'>        <span class="n">validators</span><span class="o">=</span><span class="p">[</span><span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">DataRequired</span><span class="p">()],</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>    <span class="n">submit</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Save&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora podemos renderizar el formulario en nuestra plantilla:</p>

<figure class='code'><figcaption><span>users/templates/users/form.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% extends &quot;layouts/main_layout.html&quot; %}
</span><span class='line'>{% import &quot;bootstrap/wtf.html&quot; as wtf %}
</span><span class='line'>
</span><span class='line'>{% block content %}
</span><span class='line'>  {{ wtf.quick_form(form) }}
</span><span class='line'>{% endblock %}
</span></code></pre></td></tr></table></div></figure>


<p>Este código nos va a renderizar el formulario completo con todos los campos especificados. Si queremos renderizar sólo algunos campos específicos, podemos escribirlo de la siguiente forma:</p>

<figure class='code'><figcaption><span>users/templates/users/form.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ wtf.form_field(form.email) }}
</span><span class='line'>{{ wtf.form_field(form.submit) }}
</span></code></pre></td></tr></table></div></figure>


<p>Lo único que hace falta es escribir una vista que reciba los datos del formulario y los guarde en la base de datos, por ejemplo.</p>

<p>El diccionario con los valores para cada campo se encuentra en la variable <code>request.form</code>. Si el request tiene método POST, validamos el formulario <code>form.validate()</code>, y en el caso exitoso, pasamos los valores del formulario a nuestro objeto: <code>form.populate_obj(user)</code>.</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/update/&lt;int:pk&gt;/&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;GET&#39;</span><span class="p">,</span> <span class="s">&#39;POST&#39;</span><span class="p">))</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_update</span><span class="p">(</span><span class="n">pk</span><span class="p">):</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span><span class="o">.</span><span class="n">first_or_404</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">form</span> <span class="o">=</span> <span class="n">UserForm</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&#39;POST&#39;</span> <span class="ow">and</span> <span class="n">form</span><span class="o">.</span><span class="n">validate</span><span class="p">():</span>
</span><span class='line'>        <span class="n">form</span><span class="o">.</span><span class="n">populate_obj</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">flash</span><span class="p">(</span><span class="s">&#39;Usuario fue editado exitosamente&#39;</span><span class="p">,</span> <span class="s">&#39;success&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="n">url_for</span><span class="p">(</span><span class="s">&#39;users.user_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span>
</span><span class='line'>        <span class="s">&#39;users/form.html&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">form</span><span class="o">=</span><span class="n">form</span><span class="p">,</span>
</span><span class='line'>    <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Autenticación</h2>

<p>Para agregar autenticación al proyecto de Flask, normalmente usan las dos siguientes librerías:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Login</span>
</span><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">OAuth</span>
</span></code></pre></td></tr></table></div></figure>


<p>La primera tiene toda la funcionalidad de ingreso, salida de usuario. La podemos instalar de la misma forma, que hicimos con SQLAlchemy hace poco:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_login</span> <span class="kn">import</span> <span class="n">LoginManager</span>
</span><span class='line'>
</span><span class='line'><span class="n">login_manager</span> <span class="o">=</span> <span class="n">LoginManager</span><span class="p">()</span>
</span><span class='line'><span class="n">login_manager</span><span class="o">.</span><span class="n">login_view</span> <span class="o">=</span> <span class="s">&#39;users.login&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">permanent_session_lifetime</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">365</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">login_manager</span><span class="o">.</span><span class="n">init_app</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>En <code>login_manager.login_view</code> especificamos qué vista corresponde al ingreso (login), y en <code>permanent_session_lifetime</code>  se puede indicar el tiempo en el qué durará activa la sesión.</p>

<p>El modelo que vamos a usar para usuarios debe heredar de <code>UserMixin</code> de <code>flask_logins</code></p>

<figure class='code'><figcaption><span>users/models.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_login</span> <span class="kn">import</span> <span class="n">UserMixin</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">,</span> <span class="n">UserMixin</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;users&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora usando la otra librería - <code>Flask-OAuth</code> - podemos hacer una vista para que nuestros usuarios puedan ingresar desde su cuenta de Google, por ejemplo:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/login&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">login</span><span class="p">():</span>
</span><span class='line'>    <span class="n">callback</span> <span class="o">=</span> <span class="n">url_for</span><span class="p">(</span><span class="s">&#39;users.authorized&#39;</span><span class="p">,</span> <span class="n">_external</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">google</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="n">callback</span><span class="o">=</span><span class="n">callback</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cuando el usuario ya está autenticado, en cualquier punto de nuestra aplicación podemos preguntar por el objeto correspondiente:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_login</span> <span class="kn">import</span> <span class="n">current_user</span>
</span></code></pre></td></tr></table></div></figure>


<p>En la siguiente dirección se puede encontrar más información acerca de cómo configurar los tokens de autenticación Google: <a href="https://pythonhosted.org/Flask-OAuth/">pythonhosted.org/Flask-OAuth/</a>.</p>

<h2>Múltiples idiomas</h2>

<p>Si queremos tener soporte de múltiples idiomas, tendremos que instalar otra librería:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Babel</span>
</span></code></pre></td></tr></table></div></figure>


<p>Miremos qué comandos nos ofrece:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Extraer los textos para traducción </span>
</span><span class='line'><span class="c"># (se corre sólo una vez al principio)</span>
</span><span class='line'><span class="nv">$ </span>pybabel extract -F babel.cfg -o messages.pot .
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Generar un catálogo para español</span>
</span><span class='line'><span class="nv">$ </span>pybabel init -i messages.pot -d translations -l es
</span><span class='line'>
</span><span class='line'><span class="c"># Se crea el directorio translations/es</span>
</span><span class='line'><span class="c"># Por dentro hay otro directorio llamado LC_MESSAGES que tiene  </span>
</span><span class='line'><span class="c"># un archivo messages.po. </span>
</span><span class='line'>
</span><span class='line'><span class="c"># Después de traducir los textos y guardarlos en messages.po,</span>
</span><span class='line'><span class="c"># compilamos el archivo y publicamos los textos:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>pybabel compile -d translations
</span><span class='line'>
</span><span class='line'><span class="c"># Para actualizar las traducciones a diario:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>pybabel extract -F babel.cfg -o messages.pot .
</span><span class='line'><span class="nv">$ </span>pybabel update -i messages.pot -d translations
</span></code></pre></td></tr></table></div></figure>


<p>Si queremos traducir cadenas de texto dentro del código de Python, habrá que usar la siguiente sintaxis:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_babel</span> <span class="kn">import</span> <span class="n">gettext</span> <span class="k">as</span> <span class="n">_</span>
</span><span class='line'>
</span><span class='line'><span class="n">_</span><span class="p">(</span><span class="s">&#39;Invalid authentication token&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y en plantillas se ve muy parecido:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">title=</span><span class="s">&quot;{{ _(&#39;Help&#39;) }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">&quot;fa fa-question&quot;</span><span class="nt">&gt;&lt;/i&gt;</span>
</span><span class='line'><span class="nt">&lt;/button&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mensajes</h2>

<p>Los que están familiarizados con el framework Django, seguramente recuerdan que Django tiene un procesador de contexto <code>messages</code> que nos permite mandar mensajes a las plantillas desde el código Python:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">messages</span>
</span><span class='line'>
</span><span class='line'><span class="n">messages</span><span class="o">.</span><span class="n">add_message</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">messages</span><span class="o">.</span><span class="n">INFO</span><span class="p">,</span> <span class="s">&#39;Hello world.&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>En Flask es muy parecido, sólo que esos mensajes se llaman <code>flash</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">flash</span>
</span><span class='line'>
</span><span class='line'><span class="n">flash</span><span class="p">(</span><span class="s">&#39;Hello world.&#39;</span><span class="p">,</span> <span class="s">&#39;success&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>y para consultarlos dentro de la plantilla llamamos el método <code>get_flashed_messages</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% for category, message in get_flashed_messages(with_categories=true) %}
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;alert alert-{{ category|replace(&#39;message&#39;, &#39;info&#39;) }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">class=</span><span class="s">&quot;close&quot;</span> <span class="na">data-dismiss=</span><span class="s">&quot;alert&quot;</span><span class="nt">&gt;</span>×<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>  {{ message }}
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>{% endfor %}
</span></code></pre></td></tr></table></div></figure>


<h2>Caché</h2>

<p>Y para terminar la presentación, vamos a meter todo en caché #comonosgusta:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">Flask</span><span class="o">-</span><span class="n">Cache</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya conocemos cómo instalar las aplicaciones externas en Flask, pero repasémoslo:</p>

<figure class='code'><figcaption><span>run.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_cache</span> <span class="kn">import</span> <span class="n">Cache</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">cache</span> <span class="o">=</span> <span class="n">Cache</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_app</span><span class="p">():</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">static_url_path</span><span class="o">=</span><span class="s">&#39;/static&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">from_object</span><span class="p">(</span><span class="s">&#39;conf.config&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cache</span><span class="o">.</span><span class="n">init_app</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y ahora sí, vamos con toda&hellip; ponemos en caché una vista completa:</p>

<figure class='code'><figcaption><span>users/views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">run</span> <span class="kn">import</span> <span class="n">cache</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@users.route</span><span class="p">(</span><span class="s">&#39;/list&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@cache.cached</span><span class="p">(</span><span class="n">timeout</span><span class="o">=</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="p">,</span> <span class="n">key_prefix</span><span class="o">=</span><span class="s">&#39;user_list&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_list</span><span class="p">():</span>
</span><span class='line'>    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>


<p>y luego un fragmento de html:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% cache 60*60, &#39;dashboard_menu_user&#39; + current_user.id|string %}
</span><span class='line'>  {% include &#39;layouts/_menu.html&#39; %}
</span><span class='line'>{% endcache %}
</span></code></pre></td></tr></table></div></figure>


<h2>pip freeze</h2>

<p>Y ahora vamos resumir qué librerías hemos instalado y cuales otras nos podrían ser útiles en el futuro:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Framework
</span><span class='line'>Flask==0.11
</span><span class='line'>
</span><span class='line'># Libs
</span><span class='line'>celery==3.1.20
</span><span class='line'>coverage==4.0.3
</span><span class='line'>factory-boy==2.6.1
</span><span class='line'>SQLAlchemy==1.0.12
</span><span class='line'>SQLAlchemy-Utils==0.31.6
</span><span class='line'>
</span><span class='line'># Flask libs
</span><span class='line'>Flask-And-Redis==0.6
</span><span class='line'>Flask-Babel==0.9               # Múltiples idiomas y zonas horarias
</span><span class='line'>Flask-Bootstrap==3.3.5.7       # ~ django-crispy-forms para Bootstrap
</span><span class='line'>Flask-Cache==0.13.1
</span><span class='line'>Flask-DebugToolbar==0.10.0     # En Django: django-debug-toolbar
</span><span class='line'>Flask-fillin==0.2              # Diligenciar formularios en pruebas
</span><span class='line'>Flask-Login==0.3.2
</span><span class='line'>Flask-Migrate==1.8.0
</span><span class='line'>Flask-Moment==0.5.1            # Integración con moment.js
</span><span class='line'>Flask-OAuth==0.12              # ~ python-social-auth
</span><span class='line'>Flask-Script==2.0.5            # manage.py, shell
</span><span class='line'>Flask-SQLAlchemy==2.1
</span><span class='line'>Flask-WTF==0.12                # Formularios con protección CSRF
</span><span class='line'>WTForms-Alchemy==0.15.0        # Para crear formularios basados en modelos
</span><span class='line'>WTForms-Components==0.10.0     # Campos adicionales para los formularios de Flask</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://blog.vero4ka.info/images/flask/nerd-dad.jpg"></p>

<p>Gracias por su atención y a <a href="https://tappsi.co/">Tappsi</a> por el apoyo.</p>

<p><img class="center" src="http://blog.vero4ka.info/images/flask/tappsi_logo.svg" width="100"></p>

<p>Estamos contratando <a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#111;&#58;&#106;&#111;&#98;&#115;&#x40;&#x74;&#x61;&#x70;&#112;&#115;&#x69;&#x2e;&#x63;&#111;">&#x6a;&#111;&#x62;&#x73;&#x40;&#x74;&#97;&#112;&#112;&#x73;&#x69;&#46;&#x63;&#x6f;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo desplegar un proyecto de Django con uWSGI + nginx + supervisor]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/01/16/como-desplegar-un-proyecto-de-django-con-uwsgi-plus-nginx-plus-supervisor/"/>
    <updated>2017-01-16T17:39:09-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/01/16/como-desplegar-un-proyecto-de-django-con-uwsgi-plus-nginx-plus-supervisor</id>
    <content type="html"><![CDATA[<p>Suponemos que tenemos <a href="https://github.com/vero4karu/sitp_scraper">un proyecto</a> de Django y queremos desplegarlo en un servidor con un sistema operativo Linux.</p>

<p>La idea es que nuestro servidor web va a usar una interfaz (WSGI) para &ldquo;hablar&rdquo; con nuestra aplicación de Django. Esa interfaz va a correr la aplicación, pasarle las peticiones de usuario y devolver la respuesta. WSGI (Web Server Gateway Interface) es un estándar y uWSGI es una de sus implementaciones que vamos a usar:</p>

<pre><code>Usuario &lt;-&gt; Servidow web &lt;-&gt; Socket &lt;-&gt; uWSGI &lt;-&gt; Django
</code></pre>

<!-- more -->


<p>Decimos que el código del proyecto está en la carpeta <code>/home/deploy/sitp_scraper</code>. Primero creamos el entorno virtual e instalamos las librerías de Python proyecto (en éste ejemplo usamos <a href="https://virtualenvwrapper.readthedocs.io/en/latest/">virtualenvwrapper</a>):</p>

<pre><code>mkvirtualenv stip_scraper
pip install -r requitements.txt
</code></pre>

<p>Instalamos uWSGI:</p>

<pre><code>pip install uwsgi
</code></pre>

<p>Verificamos si podemos correr nuestro proyecto si problema:</p>

<pre><code>./manage.py runserver 0.0.0.0:8000
</code></pre>

<p>Ahora probamos correrlo usando uWSGI:</p>

<pre><code>uwsgi --http :8000 --module stip_scraper.wsgi
</code></pre>

<p>Instalamos <a href="https://nginx.org/en/">nginx</a>:</p>

<pre><code>sudo apt-get install nginx
sudo /etc/init.d/nginx start 
</code></pre>

<p>Si al visitar <code>nuestroservidor.com:80</code> vemos el mensaje &ldquo;Welcome to nginx&rdquo;, podemos concluir que nginx funciona de la forma correcta.</p>

<p>Configuramos nginx <code>sitp_scraper_nginx.conf</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">upstream</span> <span class="s">django</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">server</span> <span class="s">unix:///tmp/sitp_scraper.sock</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">listen</span> <span class="s">[::]:80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">server_name</span>  <span class="s">nuestroservidor.com</span><span class="p">;</span>  <span class="c1"># Nuestro dominio o dirección IP</span>
</span><span class='line'>    <span class="kn">charset</span>      <span class="s">utf-8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">client_max_body_size</span> <span class="s">10M</span><span class="p">;</span>  <span class="c1"># Tamaño máximo de archivos que podrémos subir al servidor</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/media</span>  <span class="p">{</span>
</span><span class='line'>        <span class="c1"># MEDIA_ROOT de nuestro proyecto de Django</span>
</span><span class='line'>        <span class="kn">alias</span> <span class="s">/home/deploy/sitp_scraper/media</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/static</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1"># STATIC_ROOT de nuestro proyecto de Django</span>
</span><span class='line'>        <span class="kn">alias</span> <span class="s">/home/deploy/sitp_scraper/static</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">uwsgi_pass</span>  <span class="s">django</span><span class="p">;</span>
</span><span class='line'>        <span class="kn">include</span>     <span class="s">/home/deploy/sitp_scraper/uwsgi_params</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>El archivo <code>uwsgi_params</code> se puede descargar aquí: <a href="https://github.com/nginx/nginx/blob/master/conf/uwsgi_params">github.com/nginx/nginx/blob/master/conf/uwsgi_params</a></p>

<p>Creamos en la carpeta <code>/etc/nginx/sites-enabled</code> un enlace hacía nuestra configuración para que nginx pueda verla:</p>

<pre><code>sudo ln -s ~/path/to/your/sitp_scraper_nginx.conf /etc/nginx/sites-enabled/
</code></pre>

<p>Verificamos si nuestra configuración está bien:</p>

<pre><code>nginx -t
</code></pre>

<p>y reiniciamos nginx:</p>

<pre><code>sudo /etc/init.d/nginx restart
</code></pre>

<p>Ahora creamos un archivo <code>sitp_scraper_uwsgi.ini</code> para guardar las opciones que vamos a pasar a uWSGI:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">[uwsgi]</span>
</span><span class='line'><span class="c1"># Django-related settings</span>
</span><span class='line'><span class="s">chdir</span>           <span class="p">=</span> <span class="s">/home/deploy/sitp_scraper</span>
</span><span class='line'><span class="s">module</span>          <span class="p">=</span> <span class="s">sitp_scraper.wsgi</span>
</span><span class='line'><span class="s">home</span>            <span class="p">=</span> <span class="s">/home/deploy/.virtualenvs/sitp_scraper</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Process-related settings</span>
</span><span class='line'><span class="s">master</span>          <span class="p">=</span> <span class="s">true</span>
</span><span class='line'><span class="s">processes</span>       <span class="p">=</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># The socket (use the full path to be safe)</span>
</span><span class='line'><span class="s">socket</span>          <span class="p">=</span> <span class="s">/tmp/sitp_scraper.sock</span>
</span><span class='line'><span class="s">chmod-socket</span>    <span class="p">=</span> <span class="mi">664</span>
</span><span class='line'><span class="s">uid</span>             <span class="p">=</span> <span class="s">www-data</span>
</span><span class='line'><span class="s">gid</span>             <span class="p">=</span> <span class="s">www-data</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Clear environment on exit</span>
</span><span class='line'><span class="s">vacuum</span>          <span class="p">=</span> <span class="s">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Agregamos nuestro usuario de Linux al grupo <code>www-data</code> (para no tener problemas con permisos) y verificamos que todo funcione bien:</p>

<pre><code>uwsgi --ini sitp_scraper_uwsgi.ini
</code></pre>

<p>Podemos ver que se creó un archvo <code>/tmp/sitp_scraper.sock</code>:</p>

<pre><code>ll /tmp/sitp_scraper.sock
srw-rw-r-- 1 www-data www-data 0 Jan 15 20:46 /tmp/sitp_scraper.sock
</code></pre>

<p>Ahora instalamos supervisor:</p>

<pre><code>apt-get install supervisor
service supervisor start
</code></pre>

<p>y creamos un archivo de configuración <code>/etc/supervisor/conf.d/sitp_scraper.conf</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">[program:uwsgi]</span>
</span><span class='line'><span class="s">user</span>            <span class="p">=</span> <span class="s">www-data</span>
</span><span class='line'><span class="s">command</span> <span class="p">=</span> <span class="s">/home/deploy/.virtualenvs/sitp_scraper/bin/uwsgi</span> <span class="s">--ini=/home/deploy/sitp_scraper/sitp_scraper_uwsgi.ini</span>
</span><span class='line'><span class="s">autostart</span>       <span class="p">=</span> <span class="s">true</span>
</span><span class='line'><span class="s">autorestart</span>     <span class="p">=</span> <span class="s">true</span>
</span><span class='line'><span class="s">stderr_logfile</span>  <span class="p">=</span> <span class="s">/tmp/uwsgi_err.log</span>
</span><span class='line'><span class="s">stdout_logfile</span>  <span class="p">=</span> <span class="s">/tmp/uwsgi.log</span>
</span><span class='line'><span class="s">stopsignal=INT</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reiniciamos supervisor:</p>

<pre><code>$ supervisorctl  
uwsgi                            RUNNING   pid 2762, uptime 1 day, 2:39:40
supervisor&gt; restart uwsgi
</code></pre>

<p>Voilà: <code>nuestroservidor.com:80</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[El programa escolar de literatura en Rusia]]></title>
    <link href="http://blog.vero4ka.info/blog/2017/01/04/el-programa-escolar-de-literatura-en-rusia/"/>
    <updated>2017-01-04T18:50:49-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2017/01/04/el-programa-escolar-de-literatura-en-rusia</id>
    <content type="html"><![CDATA[<p>Según los estándares del ministerio de educación los estudiantes de colegio
rusos deben leer&hellip;</p>

<h2>Literatura rusa</h2>

<h3>Folklore</h3>

<ul>
<li>Folklore ruso. Cuentos de hadas y poémas épicos

<ul>
<li><a href="https://es.wikipedia.org/wiki/Ilya_Muromets">Ilya Muromets</a> y caballeros</li>
<li>Sadkó («Садко»)</li>
<li>Ilya Muromets y Nightingale el ladrón («Илья Муромец и Соловей разбойник»)</li>
</ul>
</li>
<li>Mito de los pueblos eslavos (Мифы древних славян)</li>
</ul>


<h3>Literatura rusa antigua de los siglos XI - XVII</h3>

<p><img class="right" src="http://blog.vero4ka.info/images/Povest_vremennyh_let.jpeg" width="150" title="'Crónica de Néstor'" ></p>

<ul>
<li><a href="https://es.wikipedia.org/wiki/Cantar_de_las_huestes_de_%C3%8Dgor">Cantar de las huestes de Ígor</a> («Слово о полку Игореве»)</li>
<li><a href="https://es.wikipedia.org/wiki/Cr%C3%B3nica_de_N%C3%A9stor">Crónica de Néstor</a> («Повесть временных лет»)</li>
</ul>


<!-- more -->


<h3>Literatura rusa del siglo XVIII</h3>

<ul>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Lomon%C3%B3sov">Mijaíl Lomonósov</a> (М. В. Ломоносов)

<ul>
<li>«Ода на день восшествия на престол Елисаветы Петровны»</li>
<li>«Вечернее размышление о Божием величестве при случае великого северного сияния»</li>
<li>«Разговор с Анакреонтом»</li>
<li>«Случились вместе два астронома в пиру»</li>
<li>«К статуе Петра Великого»</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Gavrila_Derzhavin">Gavrila Derzhavin</a> (Г. Р. Державин)

<ul>
<li>«Властителям и судиям»</li>
<li>«Снигирь»</li>
<li>«Признание»</li>
<li>«На птичку»</li>
<li><a href="http://max.mmlc.northwestern.edu/mdenner/Demo/texts/monument_derzhav.htm">&ldquo;Monument&rdquo;</a> «Памятник»</li>
<li>«Река времён в своём стремленьи»
<img class="right" src="http://blog.vero4ka.info/images/DenisFonvizin.jpg" width="150" title="'Denís Fonvizin'" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Den%C3%ADs_Fonvizin">Denís Fonvizin</a> (Д. И. Фонвизин)

<ul>
<li>&ldquo;The Minor&rdquo; (Комедия «Недоросль»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Rad%C3%ADshchev">Aleksandr Radíshchev</a> (А. Н. Радищев)

<ul>
<li>&ldquo;Viaje de San Petersburgo a Moscú&rdquo; («Путешествие из Петербурга в Москву»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Karamz%C3%ADn">Nikolái Karamzín</a>

<ul>
<li>&ldquo;La pobre Lisa&rdquo; (Повесть «Бедная Лиза»)</li>
<li>&ldquo;Otoño&rdquo; («Осень»)</li>
</ul>
</li>
</ul>


<h3>Literatura rusa del siglo XIX</h3>

<ul>
<li>Fábulas de <a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Krylov">Iván Krylov</a></li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Vasili_Zhukovski">Vasili Zhukovski</a>

<ul>
<li>&ldquo;Svetlana&rdquo; (Баллада «Светлана»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Griboy%C3%A9dov">Aleksandr Griboyédov</a> (А. С. Грибоедов)

<ul>
<li><a href="https://en.wikipedia.org/wiki/Woe_from_Wit">&ldquo;Woe from Wit&rdquo;</a> (Комедия «Горе от ума»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Kondrati_Ryl%C3%A9yev">Kondrati Ryléyev</a> (К. Ф. Рылеев)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Konstant%C3%ADn_B%C3%A1tiushkov">Konstantín Bátiushkov</a> (К. Н. Батюшков)
<img class="right" src="http://blog.vero4ka.info/images/pushkin.jpg" width="150" title="'Aleksandr Pushkin'" ></li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Pushkin">Aleksandr Pushkin</a> (А. С. Пушкин)

<ul>
<li>Poesía</li>
<li>&ldquo;Los relatos de Belkin&rdquo; («Повести Белкина»)</li>
<li>&ldquo;Dubrovski&rdquo; («Дубровский»)</li>
<li><a href="https://goo.gl/UvGqrX">&ldquo;La hija del capitán&rdquo;</a> («Капитанская дочка»)</li>
<li><a href="https://es.wikipedia.org/wiki/Rusl%C3%A1n_y_Liudmila">&ldquo;Ruslán y Liudmila&rdquo;</a> («Руслан и Людмила»)</li>
<li>&ldquo;Poltava&rdquo; («Полтава»)</li>
<li>&ldquo;El caballero de bronce&rdquo; («Медный всадник»)</li>
<li><a href="https://es.wikipedia.org/wiki/Eugenio_Oneguin">&ldquo;Eugenio Oneguin&rdquo;</a> («Евгений Онегин»)</li>
<li><a href="https://es.wikipedia.org/wiki/Bor%C3%ADs_Godunov">&ldquo;Borís Godunov&rdquo;</a> («Борис Годуновc)
<img class="right" src="http://blog.vero4ka.info/images/lermontov.jpg" width="150" title="Mijaíl Lérmontov" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_L%C3%A9rmontov">Mijaíl Lérmontov</a> (М. Ю. Лермонтов)

<ul>
<li>Poesía</li>
<li><a href="https://es.wikipedia.org/wiki/Un_h%C3%A9roe_de_nuestro_tiempo">Un héroe de nuestro tiempo</a> («Герой нашего времени»)</li>
<li>&ldquo;El novicio&rdquo; («Мцыри»)</li>
<li>&ldquo;El canto del zar Iván Vasílievich, del joven opríchnik y del gallardo mercader Kaláshnikov&rdquo; («Песня про купца Калашникова»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_G%C3%B3gol">Nikolái Gógol</a> (Н. В. Гоголь)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Veladas_en_un_caser%C3%ADo_de_Dikanka">&ldquo;Veladas en un caserío de Dikanka&rdquo;</a> («Вечера на хуторе близ Диканьки»)</li>
<li><a href="https://es.wikipedia.org/wiki/Tar%C3%A1s_Bulba">&ldquo;Tarás Bulba&rdquo;</a> (Повесть «Тарас Бульба»)</li>
<li><a href="https://es.wikipedia.org/wiki/El_capote">&ldquo;El capote&rdquo;</a> (Повесть «Шинель»)</li>
<li><a href="https://goo.gl/koI7YD">&ldquo;El inspector&rdquo;</a> (Комедия «Ревизор»)</li>
<li><a href="https://es.wikipedia.org/wiki/Almas_muertas">&ldquo;Almas muertas&rdquo;</a> (Поэма «Мёртвые души»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Ostrovski">Aleksandr Ostrovski</a> (А. Н. Островский)

<ul>
<li>&ldquo;La pobreza no es afrenta&rdquo; («Бедность не порок»)</li>
<li>&ldquo;La novia sin dote &rdquo; («Бесприданница»)</li>
<li>&ldquo;La Tormenta&rdquo; («Гроза»)</li>
<li>&ldquo;El dineral&rdquo; («Доходное место»)</li>
<li>&ldquo;La niña de las nieves&rdquo; («Снегурочка»)</li>
<li>&ldquo;Entre propios anda el juego&rdquo; («Свои люди — сочтёмся»)
<img class="right" src="http://blog.vero4ka.info/images/turgenev.jpg" width="150" title="Iván Turguénev" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Turgu%C3%A9nev">Iván Turguénev</a> (И. С. Тургенев)

<ul>
<li>&ldquo;Padres e hijos&rdquo; («Отцы и дети»)</li>
<li>&ldquo;Rudin&rdquo; («Рудин»)</li>
<li>&ldquo;Memorias de un cazador&rdquo; («Записки охотника»)</li>
<li>&ldquo;Mumu&rdquo; («Муму»)</li>
<li>&ldquo;Ásya&rdquo; («Ася»)</li>
<li>&ldquo;Primer amor&rdquo; («Первая любовь»)</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Fyodor_Tyutchev">Fyodor Tyutchev</a> (Ф. И. Тютчев)</li>
<li>Poesía de <a href="" title="https://en.wikipedia.org/wiki/Afanasy_Fet">Afanasy Fet</a> (А. А. Фет)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Apol%C3%B3n_M%C3%A1ikov">Apolón Máikov</a> (А. Н. Майков)
<img class="right" src="http://blog.vero4ka.info/images/tolstoy.jpg" width="150" title="Leo Tolstoy" ></li>
<li><a href="https://en.wikipedia.org/wiki/Leo_Tolstoy">Leo Tolstoy</a> (Л. Н. Толстой)

<ul>
<li>&ldquo;Infancia&rdquo; («Детство»)</li>
<li>&ldquo;Adolescencia&rdquo; («Отрочество»)</li>
<li>&ldquo;Juventud&rdquo; («Юность»)</li>
<li>&ldquo;El prisionero del Cáucaso&rdquo; («Кавказский пленник»)</li>
<li>&ldquo;Después del baile&rdquo; («После бала»)</li>
<li><a href="https://es.wikipedia.org/wiki/Guerra_y_Paz">Guerra y paz</a> («Война и мир»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Nekr%C3%A1sov">Nikolái Nekrásov</a> (Н. А. Некрасов)

<ul>
<li>&ldquo;¿Quién es feliz en Rusia?&rdquo; («Кому на Руси жить хорошо»)</li>
<li>Poesía</li>
</ul>
</li>
<li>Poesía de Nikolay Yazykov (Н. М. Языков)</li>
<li>Nikolái_Leskov

<ul>
<li>&ldquo;Lady Macbeth de Mtsensk&rdquo; («Леди Макбет Мценского уезда»)</li>
<li>&ldquo;Relato sobre el zurdo bizco de Tula y la pulga de acero&rdquo; («Левша»)</li>
<li>&ldquo;El peregrino encantado&rdquo; («Очарованный странник»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Chernyshevski">Nikolái Chernyshevski</a>

<ul>
<li>&ldquo;¿Qué hacer?&rdquo; («Что делать?»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Goncharov">Iván Goncharov</a> (И. А. Гончаров)

<ul>
<li>&ldquo;Una historia corriente&rdquo; («Обыкновенная история»)</li>
<li><a href="https://es.wikipedia.org/wiki/Obl%C3%B3mov">&ldquo;Oblómov&rdquo;</a> («Обломов»)</li>
<li>«Обрыв»</li>
<li>&ldquo;Un millón de dudas&rdquo; («Мильон терзаний»)</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Ivan_Savvich_Nikitin">Ivan Savvich Nikitin</a> (И. С. Никитин)</li>
<li><a href="https://es.wikipedia.org/wiki/Aleks%C3%A9i_Nikol%C3%A1yevich_Tolst%C3%B3i">Alekséi Nikoláyevich Tolstói</a> (А. Н. Толстой)

<ul>
<li>&ldquo;Pedro I&rdquo; («Пётр I»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Aleks%C3%A9i_Konstant%C3%ADnovich_Tolst%C3%B3i">Alekséi Konstantínovich Tolstói</a> (А. К. Толстой)</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Saltykov-Shchedr%C3%ADn">Mijaíl Saltykov-Shchedrín</a> (М. Е. Салтыков-Щедрин)

<ul>
<li>&ldquo;Historia de una ciudad&rdquo; («История одного города»)</li>
<li>«Вяленая вобла»)</li>
<li>«Повесть о том, как один мужик двух генералов прокормил»</li>
<li>«Дикий помещик»</li>
<li>«Медведь на воеводстве»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Vlad%C3%ADmir_Korolenko">Vladímir Korolenko</a> (В. Г. Короленко)

<ul>
<li>«Чудная»</li>
<li>&ldquo;Sin lengua&rdquo; («Без языка»)</li>
<li>«Река играет»</li>
<li>«Парадокс»</li>
<li>«Огоньки»</li>
<li>«В дурном обществе»
<img class="right" src="http://blog.vero4ka.info/images/chekhov.jpg" width="150" title="Antón Chéjov" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Ant%C3%B3n_Ch%C3%A9jov">Antón Chéjov</a> (А. П. Чехов)

<ul>
<li>&ldquo;Tío Vania&rdquo; («Дядя Ваня»)</li>
<li><a href="https://es.wikipedia.org/wiki/El_jard%C3%ADn_de_los_cerezos">&ldquo;El jardín de los cerezos&rdquo;</a> («Вишнёвый сад»)</li>
<li>&ldquo;El apellido caballuno&rdquo; («Лошадиная фамилия»)</li>
<li>«Хамелеон»</li>
<li>&ldquo;El gordo y el flaco&rdquo; («Толстый и тонкий»)</li>
<li>&ldquo;A Malefactor&rdquo; («Злоумышленник»)</li>
<li>&ldquo;The Death of a Government Clerk&rdquo; («Смерть чиновника»)</li>
<li>«Хирургия»</li>
<li>&ldquo;The Huntsman&rdquo; («Егерь»)</li>
<li>&ldquo;Misery&rdquo; («Тоска»)</li>
<li>«В аптеке»</li>
<li>&ldquo;An Artist&rsquo;s Story [The House with the Mezzanine]&rdquo; («Дом с мезонином»)</li>
<li>&ldquo;Anna on the Neck&rdquo; («Анна на шее»)</li>
<li>&ldquo;El oso&rdquo; («Медведь»)</li>
</ul>
</li>
</ul>


<h3>Literatura rusa del siglo XX (la primera mitad)</h3>

<p><img class="right" src="http://blog.vero4ka.info/images/bunin.jpg" width="150" title="Iván Bunin" ></p>

<ul>
<li><a href="https://es.wikipedia.org/wiki/Iv%C3%A1n_Bunin">Iván Bunin</a> (И. А. Бунин)

<ul>
<li><a href="https://en.wikipedia.org/wiki/The_Gentleman_from_San_Francisco">&ldquo;The Gentleman from San Francisco&rdquo;</a> («Господин из Сан-Франциско»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Konstant%C3%ADn_Balmont">Konstantín Balmont</a> (К. Д. Бальмонт)</li>
<li>Poesía de Innokienti Ánnienski</li>
<li>Poesía de Nikolái Gumiliov</li>
<li>Konstantín Paustovski

<ul>
<li>&ldquo;Warm Bread&rdquo; («Тёплый хлеб»)</li>
<li>&ldquo;Telegram&rdquo; («Телеграмма»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Futurismo_ruso">Ígor Severyanin</a> (И. Северянин)</li>
<li>Alekséi Rémizov (А. М. Ремизов)

<ul>
<li>«Змей»
<img class="right" src="http://blog.vero4ka.info/images/zamyatin_my.jpg" width="150" title="Yevgueni Zamiatin" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Yevgueni_Zamiatin">Yevgueni Zamiatin</a> (Е. И. Замятин)

<ul>
<li><a href="" title="https://es.wikipedia.org/wiki/Nosotros_(novela)">&ldquo;Nosotros&rdquo;</a> («Мы»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Kupr%C3%ADn">Aleksandr Kuprín</a> (А. И. Куприн)

<ul>
<li>&ldquo;Móloj&rdquo; («Молох»)</li>
<li>&ldquo;Olesia&rdquo; («Олеся»)</li>
<li>&ldquo;El brazalete de rubíes&rdquo; («Гранатовый браслет»)</li>
<li>&ldquo;El desafio&rdquo; («Поединок»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/M%C3%A1ximo_Gorki">Máximo Gorki</a> (М. Горький)

<ul>
<li>&ldquo;La madre&rdquo; («Мать»)</li>
<li>&ldquo;Los bajos fondos&rdquo; («На дне»)</li>
<li>&ldquo;La vieja Izerguíl&rdquo; («Старуха Изергиль»)</li>
<li>&ldquo;Makar Chudrá&rdquo; («Макар Чудра»)</li>
<li>&ldquo;Chelkash&rdquo; («Челкаш»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Aleksandr_Blok">Aleksandr Blok</a> (А. А. Блок)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Vlad%C3%ADmir_Mayakovski">Vladímir Mayakovski</a> (В. В. Маяковский)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Sergu%C3%A9i_Yesenin">Serguéi Yesenin</a> (А. А. Блок)</li>
<li>Mijaíl Prishvin (Михаил Пришвин)

<ul>
<li>«Кладовая солнца»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Leonid_Andr%C3%A9iev">Leonid Andréiev</a> (Леонид Андреев)

<ul>
<li>&ldquo;Kusaka&rdquo; («Кусака»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Serafim%C3%B3vich">Aleksandr Serafimóvich</a> (А. Серафимович)

<ul>
<li>&ldquo;El torrente de hierro&rdquo; («Железный поток»)</li>
</ul>
</li>
<li>Vsévolod Ivánov (Вс. Иванов)

<ul>
<li>&ldquo;El tren blindado 14-69&rdquo; «Бронепоезд 14-69»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Isaak_B%C3%A1bel">Isaak Bábel</a> (Исаак Бабель)

<ul>
<li>&ldquo;Primer Ejército de Caballería&rdquo; («Конармия»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Fad%C3%A9yev">Aleksandr Fadéyev</a> (Александр Фадеев)

<ul>
<li>&ldquo;La derrota&rdquo; («Разгром») - 1926</li>
</ul>
</li>
<li>Borís Pilniak (Б. Пильняк)

<ul>
<li>&ldquo;Ciudad desnuda&rdquo; («Голый год»)</li>
</ul>
</li>
<li>Boris Lavrenyov (Б. Лавренев)

<ul>
<li>&ldquo;Viento&rdquo; («Ветер»)</li>
</ul>
</li>
<li>Dmitry Furmanov (Дмитрий Фурманов)

<ul>
<li>&ldquo;Chapayev&rdquo; («Чапаев»)</li>
</ul>
</li>
<li>Vikenty Veresaev (Викентий Вересаев)

<ul>
<li>&ldquo;Without a Road&rdquo; («В тупике»)
<img class="right" src="http://blog.vero4ka.info/images/Dvenadtsat_stulev.jpeg" width="150" title="Las Doce Sillas" ></li>
</ul>
</li>
<li>Ilf y Petrov (Илья Ильф и Евгений Петров)

<ul>
<li><a href="" title="https://es.wikipedia.org/wiki/Las_doce_sillas_(novela)">&ldquo;Las Doce Sillas&rdquo;</a> («Двенадцать стульев»)</li>
</ul>
</li>
<li>Teffi (Надежда Тэффи)

<ul>
<li>&ldquo;Nostalgia&rdquo; («Ностальгия»)</li>
</ul>
</li>
<li>Cuentos de Vitaly Bianki (Виталий Бианки)</li>
<li>Poesía de Nikolay Zabolotsky (Николай Заболоцкий)</li>
<li>Mikhail Zoshchenko (Михаил Зощенко)

<ul>
<li>«Великие путешественники»</li>
<li>&ldquo;The Galosh&rdquo; («Галоша»)</li>
<li>«Встреча»</li>
<li>«Монтёр»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Arkadi_Av%C3%A9rchenko">Arkadi Avérchenko</a> (Аркадий Аверченко)

<ul>
<li>&ldquo;Una docena de cuchillos en la parte posterior de la Revolución&rdquo; («Дюжина ножей в спину революции»)</li>
<li>«Смерть африканского охотника»
<img class="right" src="http://blog.vero4ka.info/images/Ahmatova.jpg" width="150" title="Anna Ajmátova" ></li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Anna_Ajm%C3%A1tova">Anna Ajmátova</a> (Анна Ахматова)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Marina_Tsvet%C3%A1yeva">Marina Tsvetáyeva</a> (М. И. Цветаева)</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/%C3%93sip_Mandelshtam">Ósip Mandelshtam</a> (О. Э. Мандельштам)</li>
<li><a href="https://es.wikipedia.org/wiki/Andr%C3%A9i_Plat%C3%B3nov">Andréi Platónov</a> (А. П. Платонов)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Chevengur">&ldquo;Chevengur&rdquo;</a> «Чевенгур»</li>
<li>«Котлован»</li>
<li>«Волшебное кольцо»</li>
<li>«Неизвестный цветок»</li>
<li>«На заре туманной юности»</li>
<li>&ldquo;The Cow&rdquo; («Корова»)</li>
<li>«Юшка»</li>
<li>«Сокровенный человек»</li>
<li>«Шарманка»</li>
<li>«Впрок»</li>
</ul>
</li>
<li>Aleksandr Grin (А. С. Грин)

<ul>
<li>&ldquo;Velas rojas&rdquo; («Алые паруса»)</li>
<li>&ldquo;La lámpara verde&rdquo; («Зелёная лампа»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Bulg%C3%A1kov">Mijaíl Bulgákov</a> (М. А. Булгаков)

<ul>
<li>«Кабала святош»</li>
<li>«Бег»</li>
<li><a href="https://es.wikipedia.org/wiki/La_Guardia_Blanca">&ldquo;La Guardia Blanca&rdquo;</a> «Белая гвардия»</li>
<li>&ldquo;Corazón de perro&rdquo; («Собачье сердце»)</li>
<li><a href="https://es.wikipedia.org/wiki/El_maestro_y_Margarita">&ldquo;El maestro y Margarita&rdquo;</a> «Мастер и Маргарита»</li>
<li>«Похождения Чичикова»</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Aleksandr_Tvardovsky">Aleksándr Tvardovski</a> (А. Т. Твардовский)

<ul>
<li>&ldquo;Vasili Tyorkin&rdquo; («Василий Тёркин»)</li>
</ul>
</li>
<li>Yuri Tyniánov (Ю. Тынянов)

<ul>
<li>&ldquo;La muerte de Vazir-Mujtar&rdquo; («Смерть Вазир-Мухтара»)</li>
</ul>
</li>
<li>Poesía de Alexey Surkov (А. Сурков)</li>
<li><a href="https://es.wikipedia.org/wiki/Bor%C3%ADs_Pasternak">Borís Pasternak</a> (Б. Л. Пастернак)

<ul>
<li>Poesía</li>
<li><a href="https://es.wikipedia.org/wiki/Doctor_Zhivago">&ldquo;Doctor Zhivago&rdquo;</a> («Доктор Живаго»)</li>
</ul>
</li>
<li>Poesía de <a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Semi%C3%B3novich_T%C3%ADjonov">Nikolái Semiónovich Tíjonov</a> (Н. Тихонов)</li>
<li>Poesía de Konstantín Símonov (К. М. Симонов)

<ul>
<li>«Ты помнишь, Алёша, дороги Смоленщины…»</li>
<li>«Жди меня»
<img class="right" src="http://blog.vero4ka.info/images/don.jpg" width="150" title="El Don apacible" ></li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Mija%C3%ADl_Sh%C3%B3lojov">Mijaíl Shólojov</a> (М. А. Шолохов)

<ul>
<li><a href="https://es.wikipedia.org/wiki/El_Don_apacible">&ldquo;El Don apacible&rdquo;</a> («Тихий Дон»)</li>
<li>&ldquo;Campos roturados&rdquo; («Поднятая целина»)</li>
<li>&ldquo;El destino de un hombre&rdquo; («Судьба человека»)</li>
</ul>
</li>
</ul>


<h3>Literatura rusa del siglo XX (la segunda mitad)</h3>

<ul>
<li>Leonid Leonov (Л. Леонов)

<ul>
<li>«Нашествие»</li>
</ul>
</li>
<li>Poesía de Olga Bergholz (О. Берггольц)</li>
<li>Evgueni Vinokourov (Е. Винокуров)

<ul>
<li>&ldquo;Moscovitas&rdquo; («Москвичи»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Yevgueni_Shvarts">Yevgueni Shvarts</a> (Е. Шварц)

<ul>
<li>&ldquo;Dragón&rdquo; («Дракон»)</li>
</ul>
</li>
<li>Fyodor Abramov (Ф. А. Абрамов)

<ul>
<li>«О чём плачут лошади»</li>
<li>Тетралогия «Пряслины»</li>
<li>«Поездка в прошлое»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Chinguiz_Aitm%C3%A1tov">Chinguiz Aitmátov</a> (Чингиз Айтматов)

<ul>
<li>&ldquo;Más de un siglo dura el día&rdquo; («И дольше века длится день…»)</li>
<li>&ldquo;El patíbulo&rdquo; («Плаха»)</li>
</ul>
</li>
<li>Vasil Býkov (В. Быков)

<ul>
<li>&ldquo;El obelisco&rdquo; («Обелиск») - 1970</li>
<li>&ldquo;Sótnikov&rdquo; («Сотников») - 1971</li>
</ul>
</li>
<li>Víktor Astáfiev (В. П. Астафьев)

<ul>
<li>«Вам продолжать эту жизнь» (письмо, адресованное юной читательнице)</li>
<li>«Васюткино озеро»</li>
<li>«Игры»</li>
<li>&ldquo;The Horse with the Pink Mane, and Other Siberian Stories&rdquo; («Конь с розовой гривой»)</li>
<li>«Фотография, на которой меня нет»</li>
<li>&ldquo;El pez rey&rdquo; («Царь-рыба») - 1976</li>
<li>&ldquo;Sad Detective&rdquo; («Печальный детектив») - 1986</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Vasily_Belov">Vasily Belov</a> (В. И. Белов)

<ul>
<li>«Скворцы»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Kir_Bulychov">Kir Bulychov</a> (К. Булычёв)

<ul>
<li>«Заповедник сказок»</li>
<li>«Когда мне было 12 лет»</li>
</ul>
</li>
<li>Poesía de Dmitri Kedrin (Д. Б. Кедрин)</li>
<li><a href="https://es.wikipedia.org/wiki/Valent%C3%ADn_Rasputin">Valentín Rasputin</a> (В. Г. Распутин)

<ul>
<li>&ldquo;Clases de francés&rdquo; («Уроки французского»)</li>
<li>&ldquo;Último plazo&rdquo; («Последний срок»)</li>
<li>&ldquo;El adiós a Matiora&rdquo; («Прощание с Матерой»)</li>
<li>&ldquo;Vive y recuerda&rdquo; («Живи и помни»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Fazil_Iskander">Fazil Iskander</a> (Ф. Искандер)

<ul>
<li>&ldquo;The Thirteenth Labour of Hercules&rdquo; («Тринадцатый подвиг Геракла»)</li>
</ul>
</li>
<li>Yevgeni Nosov (Е. И. Носов)

<ul>
<li>«Кукла» («Акимыч») «Живое пламя»</li>
</ul>
</li>
<li>Cuentos de <a href="https://es.wikipedia.org/wiki/Vasili_Shuksh%C3%ADn">Vasili Shukshín</a> (В. М. Шукшин)</li>
<li><a href="https://es.wikipedia.org/wiki/Varlam_Shal%C3%A1mov">Varlam Shalámov</a> (В. Т. Шаламов)

<ul>
<li>&ldquo;Relatos de Kolymá&rdquo; («Колымские рассказы»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Aleksandr_Solzhenitsyn">Aleksandr Solzhenitsyn</a> (А. И. Солженицын)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Un_d%C3%ADa_en_la_vida_de_Iv%C3%A1n_Den%C3%ADsovich">&ldquo;Un día en la vida de Iván Denísovich&rdquo;</a> («Один день Ивана Денисовича») - 1962</li>
<li>&ldquo;La casa de Matriona&rdquo; («Матрёнин двор») - 1963</li>
<li><a href="https://es.wikipedia.org/wiki/Archipi%C3%A9lago_Gulag">&ldquo;Archipiélago Gulag&rdquo;</a> («Архипелаг ГУЛАГ») - 1973</li>
<li>&ldquo;Cómo reorganizar Rusia&rdquo; («Как нам обустроить Россию») - 1990</li>
</ul>
</li>
<li>Poesía de <a href="https://en.wikipedia.org/wiki/Robert_Rozhdestvensky">Robert Rozhdestvensky</a> (Р. И. Рождественский)</li>
</ul>


<h2>Literatura mundial</h2>

<ul>
<li>Refranes, proverbios y dichos populares de Mundo</li>
<li><a href="https://es.wikipedia.org/wiki/Las_mil_y_una_noches">Las mil y una noches</a> («Тысяча и одна ночь»)</li>
<li>(«Путешествие Синдбада-морехода»)</li>
<li>Mitos

<ul>
<li>Mitología Griega</li>
<li>Mitos de la India</li>
<li>Mitología escandinava

<ul>
<li>&ldquo;Thor&rsquo;s Journey to Utgard&rdquo; (<a href="http://www.litra.ru/fullwork/get/woid/00902971224610246393/">«Сказание о путешествии Тора в Утгард»</a>)</li>
</ul>
</li>
<li>Mitología de los Indios Norteamericanos

<ul>
<li><a href="https://en.wikipedia.org/wiki/The_Song_of_Hiawatha">&ldquo;The Song of Hiawatha&rdquo;</a> (<a href="http://www.lib.ru/POEZIQ/LONGFELLO/hayavata.txt">«Песнь о Гайавате»</a>)</li>
</ul>
</li>
</ul>
</li>
<li>La Biblia (Библия)</li>
<li><a href="https://es.wikipedia.org/wiki/Homero">Homero</a> (Гомер)

<ul>
<li>&ldquo;Odisea&rdquo; («Одиссея»)</li>
<li>&ldquo;Ilíada&rdquo; («Илиада»)</li>
</ul>
</li>
<li><a href="" title="https://es.wikipedia.org/wiki/Poes%C3%ADa_l%C3%ADrica#Historia_de_la_poes.C3.ADa_l.C3.ADrica">La poesía lírica antigua</a> (Античная лирика)</li>
<li>Dante Alighieri (Данте Алигьери)

<ul>
<li><a href="https://es.wikipedia.org/wiki/Divina_comedia">&ldquo;Divina comedia&rdquo;</a> («Божественная комедия»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/William_Shakespeare">William Shakespeare</a> (У. Шекспир)

<ul>
<li>&ldquo;Romeo y Julieta&rdquo; («Ромео и Джульетта») - 1595</li>
<li>&ldquo;Hamlet&rdquo; («Гамлет») - 1601</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Moli%C3%A8re">Jean-Baptiste Molière</a> (Ж.-Б. Мольер)

<ul>
<li>&ldquo;El burgués gentilhombre&rdquo; («Мещанин во дворянстве или Скупой»)</li>
<li>&ldquo;Tartufo&rdquo; («Тартюф»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Miguel_de_Cervantes">Miguel de Cervantes</a> (М. Сервантес)

<ul>
<li>&ldquo;Don Quijote de la Mancha&rdquo; («Дон Кихот») (algunos capítulos)</li>
</ul>
</li>
<li>И.-В. Гёте

<ul>
<li>«Фауст»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Friedrich_Schiller">Friedrich Schiller</a> (Ф. Шиллер) (una obra que escoge el profesor)</li>
<li><ol type="a">
<li><ol type="a">
<li><ol type="a">
<li>Hoffmann (Э. Т. А. Гофман)</li>
</ol>
</li>
</ol>
</li>
<li>&ldquo;The Golden Pot&rdquo; («Золотой горшок»)</li>
</ol>
</li>
<li>Poesía de George Gordon Byron (Дж. Г. Байрон)</li>
<li>П. Мериме (Prosper Mérimée) (una obra que escoge el profesor)</li>
<li><a href="https://es.wikipedia.org/wiki/Honor%C3%A9_de_Balzac">Honoré de Balzac</a> (Оноре де Бальзак)

<ul>
<li><a href="https://es.wikipedia.org/wiki/La_comedia_humana">&ldquo;La comedia humana&rdquo;</a> «Человеческая комедия»</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Gustave_Flaubert">Gustave Flaubert</a> (Гюстав Флобер)

<ul>
<li>&ldquo;Salambó&rdquo; («Саламбо»)</li>
</ul>
</li>
<li>Hans Christian Andersen (Г. X. Андерсен)

<ul>
<li>Соловей</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Victor_Hugo">Victor Hugo</a> (Виктор Гюго)

<ul>
<li>&ldquo;Notre-Dame de Paris&rdquo; («Собор Парижской Богоматери»)</li>
</ul>
</li>
<li>Daniel Defoe (Даниэль Дефо)

<ul>
<li>&ldquo;Robinson Crusoe&rdquo; («Робинзон Крузо»)</li>
</ul>
</li>
<li>Jack London (Джек Лондон)

<ul>
<li>Los cuentos</li>
<li>&ldquo;Love of Life&rdquo; («Любовь к жизни») - 1905</li>
</ul>
</li>
<li>Edgar Allan Poe (Э. А. По)

<ul>
<li>«Лягушонок»</li>
</ul>
</li>
<li>James Aldridge (Джеймс Олдридж)

<ul>
<li>(«Последний дюйм»)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/O._Henry">O. Henry</a> (О. Генри)

<ul>
<li>&ldquo;The Gift of the Magi&rdquo; («Дары волхвов»)</li>
<li>&ldquo;Cabbages and Kings&rdquo; («Короли и капуста»)</li>
</ul>
</li>
<li>Luigi Pirandello (Луиджи Пиранделло)

<ul>
<li>«Черепаха»</li>
</ul>
</li>
<li>Ernest Thompson Seton (Э. Сетон-Томпсон)

<ul>
<li>Cuentos</li>
</ul>
</li>
<li>Mark Twain (М. Твен)

<ul>
<li>&ldquo;The Adventures of Tom Sawyer&rdquo; («Приключения Тома Сойера») - 1876</li>
<li>&ldquo;Adventures of Huckleberry Finn&rdquo; («Приключения Гекльберри Финна») - 1885</li>
</ul>
</li>
<li>Antoine de Saint-Exupéry (А. Сент-Экзюпери)

<ul>
<li>&ldquo;El principito&rdquo; («Маленький принц»)</li>
</ul>
</li>
<li>Lewis Carroll (Л. Кэрролл)

<ul>
<li>&ldquo;Alice in Wonderland&rdquo; («Алиса в стране чудес»)</li>
</ul>
</li>
<li>Astrid Lindgren (Астрид Линдгрен)

<ul>
<li>«Приключения Калле Блумквиста»</li>
<li>«Расмус-бродяга»</li>
</ul>
</li>
<li>Ray Bradbury (Рэй Брэдбери)

<ul>
<li>«Каникулы (Брэдбери)»</li>
<li>«Зелёное утро»</li>
<li>&ldquo;Dandelion Wine&rdquo; («Вино из одуванчиков»)</li>
</ul>
</li>
<li>Gerald Durrell (Дж. Даррел)

<ul>
<li>&ldquo;The Talking Parcel&rdquo; («Говорящий свёрток»)</li>
</ul>
</li>
<li>Gianni Rodari (Дж. Родари)

<ul>
<li>«Приключения Чиполлино»</li>
<li>«Джельсомино в Стране Лжецов»</li>
<li>«Чем пахнут ремёсла»</li>
</ul>
</li>
<li>Tove Jansson (Туве Янссон)

<ul>
<li>«Последний в мире дракон»</li>
</ul>
</li>
<li>John Ronald Reuel Tolkien (Дж. Р. Р. Толкин)

<ul>
<li>«Хоббит, или Туда и обратно»</li>
</ul>
</li>
<li>Haiku (Японские хокку (трехстишия))</li>
</ul>


<h2>Crítica literaria</h2>

<ul>
<li><a href="https://es.wikipedia.org/wiki/Visari%C3%B3n_Belinski">Visarión Belinski</a> (В. Белинский)

<ul>
<li>«Сочинения Александра Пушкина» (Пушкин)</li>
<li>«Стихотворения М. Лермонтова» (Лермонтов)</li>
<li>«Герой нашего времени. Сочинение М.Ю.Лермонтова» (Лермонтов)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Dobroliubov">Nikolái Dobroliubov</a> (Н. А. Добролюбов)

<ul>
<li>«Луч света в тёмном царстве» (Островский)</li>
<li>«Что такое обломовщина?» (Гончаров)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Dmitri_P%C3%ADsarev">Dmitri Písarev</a> (Д. И. Писарев)

<ul>
<li>«Обломов» (Гончаров)</li>
<li>«Базаров» (Тургенев)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Apollon_Grigoriev">Apollon Grigoriev</a> (А. А. Григорьев)

<ul>
<li>«После „Грозы“ Островского» (Островский)</li>
<li>«Письма к Ивану Сергеевичу Тургеневу»</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Alexander_Druzhinin">Alexander Druzhinin</a> (А. В. Дружинин)

<ul>
<li>««Обломов», роман И. А. Гончарова» (Гончаров)</li>
</ul>
</li>
<li><a href="https://es.wikipedia.org/wiki/Nikol%C3%A1i_Str%C3%A1jov">Nikolái Strájov</a> (Н. Н. Страхов)

<ul>
<li>««Отцы и дети» И. С. Тургенева» (Тургенев)</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Maxim_Antonovich">Maxim Antonovich</a> (М. А. Антонович)

<ul>
<li>«Асмодей нашего времени»</li>
</ul>
</li>
</ul>


<hr />

<p>Enlaces:</p>

<ul>
<li><a href="http://blog.vero4ka.info/blog/2016/12/18/libros-que-leen-los-ninos-rusos/">Libros que leen los niños rusos</a></li>
<li><a href="https://ru.wikisource.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D1%82%D0%B5%D0%BA%D0%B0:%D0%A8%D0%BA%D0%BE%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0">Викитека:Школьная программа</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Think like I do]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/12/18/think-like-i-do/"/>
    <updated>2016-12-18T22:09:26-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/12/18/think-like-i-do</id>
    <content type="html"><![CDATA[<blockquote><p>A she-wolf teaches her cubs: "Bite like I do," and that's enough.<br/>A she-rabbit teaches her offspring: "Run like I do," and that's also enough.<br/>But when a man teaches his children: "Think like I do," and that's a crime.</p><footer><strong>Strugatsky Brothers</strong></footer></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Libros que leen los niños rusos]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/12/18/libros-que-leen-los-ninos-rusos/"/>
    <updated>2016-12-18T11:49:57-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/12/18/libros-que-leen-los-ninos-rusos</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://blog.vero4ka.info/images/Cipollino.jpg" width="150" title="'Cipollino'" ></p>

<h2>Gianni Rodari, Cipollino</h2>

<p>Aventuras de Cipollino es un cuento del escritor italiano Gianni Rodari
en el que el personaje principal, un niño-cebolla llamado Cipollino, lucha
contra la injusticia, defendiendo a los ciudadanos del los ricos de la ciudad,
del señor Tomate y el príncipe Limón (el gobernador del país).
Todos los personajes del cuento son frutas y verduras.</p>

<!-- more -->


<h2>Nikolay Nósov, Aventuras de Nosabenada y sus Amigos</h2>

<p>Aventuras de un niño travieso, curioso, siempre activo y permanentemente
enredado en situaciones poco habituales y con frecuencia cómicas.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/la_isla_del_tesoro.jpg" width="150" title="'La isla del tesoro'" ></p>

<h2>Mark Twain, Las aventuras de Tom Sawyer</h2>

<p>Relata las aventuras de la infancia de Tom Sawyer, un niño que crece durante
el antebellum del Sur de los Estados Unidos en “St. Petersburg”.</p>

<h2>Robert Louis Stevenson, La isla del tesoro</h2>

<p>Una novela del escritor escocés Robert Stevenson, en la que el autor describe
las aventuras relacionadas con la búsqueda de los tesoros escondidos por el
pirata Capitán J. Flint en una isla desierta.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/el_caballito_jorobadito.jpg" width="150" title="'El caballito jorobado'" ></p>

<h2>Piotr Yershóv,  El caballito jorobado</h2>

<p>Un cuento en verso, escrito en la década de 1830. Los personajes principales
son el hijo de un campesino, llamado Iván el Loco, y un caballito mágico jorobado.</p>

<h2>Los cuentos de los Hermanos Grimm</h2>

<p>Son cuentos folclóricos recopilados por dos escritores alemanes: Los músicos
de Bremen, El lobo y las siete cabritillas, El pescador y su esposa.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/pulgarcita.jpg" width="150" title="'Pulgarcita'" ></p>

<h2>Los libros del escritor danés Hans Christian Andersen</h2>

<p>El traje nuevo del emperador (El rey desnudo), Pulgarcita, La Sirenita,
El patito feo, La reina de las nieves, El yesquero.</p>

<h2>Serguéi Aksákov, La Flor escarlata</h2>

<p>La trama recuerda a la de La Bella y la Bestia, pero se desarrolla en un ambiente ruso.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/momo.jpg" width="150" title="'Momo'" ></p>

<h2>Los cuentos de Charles Perrault</h2>

<p>Barba Azul – un cuento popular francés, la leyenda acerca de un marido pérfido,
recopilado y adaptado por Charles Perrault.
Pulgarcito, Caperucita Roja, La bella durmiente, El gato con botas y muchos otros.</p>

<h2>Michael Ende, Momo</h2>

<p>Del libro del autor alemán Michael Ende, aprendemos la historia de una
chica increíble llamada Momo. Ella tenía un talento muy raro – saber escuchar
a los demás, y por lo tanto tenía muchos amigos. Pero una vez en la ciudad,
donde vivía Momo, aparecieron los caballeros grises – los ladrones de tiempo …</p>

<p><img class="right" src="http://blog.vero4ka.info/images/Matilda.jpg" width="150" title="'Matilda'" ></p>

<h2>Roald Dahl, Matilda</h2>

<p><em>(Es muy recomendado buscar una edición con ilustraciones de Quentin Blake)</em></p>

<p>Matilda es una niña brillante, pero sus padres la consideran estúpida, que
sólo les da un dolor de cabeza adicional. La verdad reside en el hecho de
que sus padres son tontos, y sólo piensan en sí mismos y no se preocupan por
su propia hija. Entonces Matilda decide volver a educar a sus padres negligentes,
junto con la viciosa directora de su colegio.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/karlson.jpg" width="150" title="'Karlsson-on-the-Roof'" ></p>

<h2>Libros de Astrid Lindgren</h2>

<p>Astrid Lindgren es una escritora sueca, que provocó un intenso debate acerca
de la idea de que la educación tenga en cuenta la psicología del niño.
Astrid Lindgren siguió la polémica que se desarrolló en la sociedad y
participó en ella, apoyando a la educación que tenga en cuenta los pensamientos
y sentimientos de los niños y así muestra respeto a ellos.</p>

<p>Sus libros: Karlsson-on-the-Roof, Pipi Calzaslargas, Ronja, la hija del
bandolero y muchos otros.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/Finn_Family.png" width="150" title="'Finn Family'" ></p>

<h2>Tove Jansson, Mumintroll</h2>

<p>Escritora  finlandesa, autora de historias para niños protagonizadas por una
familia de trolls blancos, cubiertos de pelo y de apariencia redondeada,
y con grandes hocicos que les hacen asemejarse remotamente a hipopótamos.</p>

<h2>Cuentos para niños de Alexander Pushkin</h2>

<p>La princesa muerta y los siete fortachones, El pescador y el pececito dorado,
El príncipe Guidón y la bella princesa Cisne y El gallito de oro.</p>

<h2>Los cuentos de Ernest Thompson Seton</h2>

<p>Ernest Thompson Seton es el fundador del Movimiento “Woodcraft” que
influyó directamente en las concepciones pedagógicas de Lord Baden-Powell
al crear el Movimiento de los Boy Scouts.</p>

<p><img class="right" src="http://blog.vero4ka.info/images/pipi.jpg" width="150" title="'Pipi Calzaslargas'" ></p>

<h2>Alan Alexander Milne, Winnie de Pooh</h2>

<h2>Aleksey Nikolayevich Tolstoy, Adventures of Buratino or The Golden Key</h2>

<h2>Las mil y una noches</h2>

<h2>Lewis Carroll, Las aventuras de Alicia en el país de las maravillas</h2>

<h2>L. Frank Baum, El maravilloso mago de Oz</h2>

<p><img class="right" src="http://blog.vero4ka.info/images/bremen.jpg" width="150" title="'Los músicos de Bremen'" ></p>

<h2>Rudyard Kipling, El libro de la selva</h2>

<p>Los cuentos Mowgli, La caza de Kaa, Rikki-Tikki-Tavi y otros.</p>

<h2>Antón Chéjov, Kashtanka</h2>

<p>Kashtanka es un pequeño perro de color castaña, parecido a un zorro,
que una noche nevada se pierde en la calle, comenzando así su extraña
y maravillosa aventura…</p>

<h2>Eric Knight, Lassie</h2>

<p>Eric Knight fue un escritor inglés nacido en Menston en Yorkshire.
Fue principalmente conocido por crear el personaje de ficción “Lassie”.
Lassie es un perro Collie que vive con la familia de un minero de Yorkshire,
Sam Carraclough. Cuando Sam pierde su trabajo, se ve obligado a vender
el perro a un noble rico. Después de varios intentos exitosos de Lassie
de escapar, el nuevo propietario del Duque Radling decide llevarla lejos
de Yorkshire a su finca en Escocia. Pero Lassie se escapa de allí y vuelve
a la casa de Sam, sobreviviendo en el camino un montón de aventuras.</p>

<h2>Jack London, La llamada de lo salvaje</h2>

<p>Es una novela corta del escritor estadounidense Jack London.
El argumento trata de un perro llamado Buck, cuyos instintos primitivos
vuelven tras una serie de sucesos que le ocurren cuando lo ponen a tirar
de un trineo en el Yukón, durante la fiebre del oro que tuvo lugar en
el siglo XX en el Klondike, durante la cual los perros de tiro
se compraban a precios elevados.</p>

<p>Les agradecería mucho si me pudieran recomendar algunos libros
que les han impactado en su infancia.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sistema de riego por capilaridad]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/30/sistema-de-riego-por-capilaridad/"/>
    <updated>2016-10-30T17:55:06-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/30/sistema-de-riego-por-capilaridad</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://blog.vero4ka.info/images/riego1.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego2.jpg" title="'Sistema de riego por capilaridad'" ></p>

<ul>
<li>Bomba de agua</li>
<li>Temporizador</li>
<li>Cuentagotas (x4)</li>
<li>Manguera (2m)</li>
<li>Garrafón</li>
<li>Balde con agua</li>
<li>Silicona</li>
</ul>


<!-- more -->


<p><img class="right" src="http://blog.vero4ka.info/images/riego3.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego4.jpg" title="'Sistema de riego por capilaridad'" ></p>

<p>La bomba pasa el agua desde el balde al garrafón por medio de una manguera.
El garrafón tiene unos huecos al fondo en las cuales están instalados los tubos
de las cuentagotas. Cuando el garrafón está instalado encima de las plantas
que necesitan el riego, el agua basa por la gravedad por medio de
las cuentagotas, con la velocidad definida por la rueda para regular
el flujo del gotero.</p>

<p><img class="left" src="http://blog.vero4ka.info/images/riego5.jpg" title="'Sistema de riego por capilaridad'" >
<img class="left" src="http://blog.vero4ka.info/images/riego6.jpg" title="'Sistema de riego por capilaridad'" >
<img class="left" src="http://blog.vero4ka.info/images/riego7.jpg" title="'Sistema de riego por capilaridad'" ></p>

<p><img class="right" src="http://blog.vero4ka.info/images/riego8.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego9.jpg" title="'Sistema de riego por capilaridad'" >
<img class="right" src="http://blog.vero4ka.info/images/riego10.jpg" title="'Sistema de riego por capilaridad'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to upload a file to Amazon S3 and generate a pre-signed URL]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/27/how-to-upload-a-file-to-amazon-s3-and-generate-a-pre-signed-url/"/>
    <updated>2016-10-27T09:32:43-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/27/how-to-upload-a-file-to-amazon-s3-and-generate-a-pre-signed-url</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">StringIO</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">xlwt</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">boto3.session</span> <span class="kn">import</span> <span class="n">Session</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">boto3</span> <span class="kn">import</span> <span class="n">client</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create a file, for example, an Excel document.</span>
</span><span class='line'><span class="n">xls</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">Workbook</span><span class="p">()</span>
</span><span class='line'><span class="n">ws</span> <span class="o">=</span> <span class="n">xls</span><span class="o">.</span><span class="n">add_sheet</span><span class="p">(</span><span class="s">&#39;A Test Sheet&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ws</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">1234.56</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">file_name</span> <span class="o">=</span> <span class="s">&#39;example.xls&#39;</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>
</span><span class='line'><span class="n">xls</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Save the file to S3</span>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">Session</span><span class="p">(</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="p">],</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="n">s3</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">resource</span><span class="p">(</span><span class="s">&#39;s3&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s3_bucket_name</span> <span class="o">=</span> <span class="s">&#39;YourBucket&#39;</span>
</span><span class='line'><span class="n">s3_file_key</span> <span class="o">=</span> <span class="s">&#39;dir1/dir2/{}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">file_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">s3</span><span class="o">.</span><span class="n">Bucket</span><span class="p">(</span><span class="n">s3_bucket_name</span><span class="p">)</span><span class="o">.</span><span class="n">put_object</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Key</span><span class="o">=</span><span class="n">s3_file_key</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Body</span><span class="o">=</span><span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">()</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Generate a pre-signed URL</span>
</span><span class='line'><span class="n">s3_client</span> <span class="o">=</span> <span class="n">client</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;s3&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">region_name</span><span class="o">=</span><span class="s">&#39;us-east-1&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="p">],</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="n">s3_client</span><span class="o">.</span><span class="n">generate_presigned_url</span><span class="p">(</span>
</span><span class='line'>    <span class="n">ClientMethod</span><span class="o">=</span><span class="s">&#39;get_object&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Params</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;Bucket&#39;</span><span class="p">:</span> <span class="n">s3_bucket_name</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;Key&#39;</span><span class="p">:</span> <span class="n">s3_file_key</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">ExpiresIn</span><span class="o">=</span><span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">24</span><span class="p">,</span>  <span class="c"># Default: 3600</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'><span class="c"># https://s3.amazonaws.com/YourBucket/dir1/dir2/example.xls?AWSAccessKeyId=ATPAJNUDN3ENT2I4S6EF&amp;Expires=1477582080&amp;Signature=POvreXScdYNES98SPFeAN3y12DL%3D</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to send an email with attachment via Amazon SES in Python]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/26/how-to-send-an-email-with-attachment-via-amazon-ses-in-python/"/>
    <updated>2016-10-26T14:19:26-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/26/how-to-send-an-email-with-attachment-via-amazon-ses-in-python</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">xlwt</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">boto3</span> <span class="kn">import</span> <span class="n">client</span>
</span><span class='line'>
</span><span class='line'><span class="n">email_from</span> <span class="o">=</span> <span class="s">&#39;from@example.com&#39;</span>
</span><span class='line'><span class="n">email_to</span> <span class="o">=</span> <span class="s">&#39;to@example.com&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create a workbook</span>
</span><span class='line'><span class="n">xls</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">Workbook</span><span class="p">()</span>
</span><span class='line'><span class="c"># Create a sheet</span>
</span><span class='line'><span class="n">sheet</span> <span class="o">=</span> <span class="n">xls</span><span class="o">.</span><span class="n">add_sheet</span><span class="p">(</span><span class="s">&#39;Sheet name&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># Set styles for headers and dates</span>
</span><span class='line'><span class="n">header_style</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">easyxf</span><span class="p">(</span><span class="s">&#39;font: bold True;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">date_format</span> <span class="o">=</span> <span class="n">xlwt</span><span class="o">.</span><span class="n">XFStyle</span><span class="p">()</span>
</span><span class='line'><span class="n">date_format</span><span class="o">.</span><span class="n">num_format_str</span> <span class="o">=</span> <span class="s">&#39;dd/mm/yyyy hh:mm:ss&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Header</span>
</span><span class='line'><span class="n">labels</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s">u&#39;Title 1&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">u&#39;Title 2&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="n">content</span> <span class="o">=</span> <span class="p">[</span><span class="n">labels</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Get data for other rows</span>
</span><span class='line'><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">get_rows_with_content</span><span class="p">():</span>
</span><span class='line'>    <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">row</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Write it down</span>
</span><span class='line'><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">content</span><span class="p">)):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">content</span><span class="p">[</span><span class="n">row</span><span class="p">])):</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="n">content</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span>
</span><span class='line'>        <span class="c"># If it&#39;s a header</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">row</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">header_style</span><span class="p">)</span>
</span><span class='line'>            <span class="k">continue</span>
</span><span class='line'>        <span class="c"># If it&#39;s a date</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">==</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">date_format</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Set filename</span>
</span><span class='line'><span class="n">today</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">today</span><span class="p">()</span>
</span><span class='line'><span class="n">file_name</span> <span class="o">=</span> <span class="s">&#39;my_file_{}.xls&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">today</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&quot;%Y-%m-</span><span class="si">%d</span><span class="s">&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Save the file</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>
</span><span class='line'><span class="n">xls</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Build an email</span>
</span><span class='line'><span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEMultipart</span><span class="p">()</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Hi, here is your file&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_from</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;To&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_to</span>
</span><span class='line'><span class="c"># What a recipient sees if they don&#39;t use an email reader</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">preamble</span> <span class="o">=</span> <span class="s">&#39;Multipart message.</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># The attachment</span>
</span><span class='line'><span class="n">part</span> <span class="o">=</span> <span class="n">MIMEApplication</span><span class="p">(</span><span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">())</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s">&#39;Content-Disposition&#39;</span><span class="p">,</span> <span class="s">&#39;attachment&#39;</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="n">file_name</span><span class="p">)</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s">&#39;application/vnd.ms-excel; charset=UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Connect to Amazon SES</span>
</span><span class='line'><span class="n">ses</span> <span class="o">=</span> <span class="n">client</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;ses&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">region_name</span><span class="o">=</span><span class="s">&#39;us-east-1&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">aws_access_key_id</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="p">],</span>
</span><span class='line'>    <span class="n">aws_secret_access_key</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="p">],</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="c"># And finally, send the email</span>
</span><span class='line'><span class="n">ses</span><span class="o">.</span><span class="n">send_raw_email</span><span class="p">(</span>
</span><span class='line'>    <span class="n">Source</span><span class="o">=</span><span class="n">email_from</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Destinations</span><span class="o">=</span><span class="p">[</span><span class="n">email_to</span><span class="p">],</span>
</span><span class='line'>    <span class="n">RawMessage</span><span class="o">=</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;Data&#39;</span><span class="p">:</span> <span class="n">msg</span><span class="o">.</span><span class="n">as_string</span><span class="p">(),</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we need to create a ZIP archive first:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">zipfile</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">tempfile</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">email</span> <span class="kn">import</span> <span class="n">encoders</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">email.mime.multipart</span> <span class="kn">import</span> <span class="n">MIMEMultipart</span><span class="p">,</span> <span class="n">MIMEBase</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ....</span>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">()</span>
</span><span class='line'><span class="n">xls</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create zip file</span>
</span><span class='line'><span class="n">zf</span> <span class="o">=</span> <span class="n">tempfile</span><span class="o">.</span><span class="n">TemporaryFile</span><span class="p">(</span><span class="n">prefix</span><span class="o">=</span><span class="s">&#39;fileprefix&#39;</span><span class="p">,</span> <span class="n">suffix</span><span class="o">=</span><span class="s">&#39;.zip&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">zip</span> <span class="o">=</span> <span class="n">zipfile</span><span class="o">.</span><span class="n">ZipFile</span><span class="p">(</span><span class="n">zf</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">zip</span><span class="o">.</span><span class="n">writestr</span><span class="p">(</span><span class="n">file_name</span><span class="p">,</span> <span class="n">output</span><span class="o">.</span><span class="n">getvalue</span><span class="p">())</span>
</span><span class='line'><span class="nb">zip</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="n">zf</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEMultipart</span><span class="p">()</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Hi, here is your file&#39;</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_from</span>
</span><span class='line'><span class="n">msg</span><span class="p">[</span><span class="s">&#39;To&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">email_to</span>
</span><span class='line'>
</span><span class='line'><span class="c"># What a recipient sees if they don&#39;t use an email reader</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">preamble</span> <span class="o">=</span> <span class="s">&#39;Multipart message.</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># the attachment</span>
</span><span class='line'><span class="n">part</span> <span class="o">=</span> <span class="n">MIMEBase</span><span class="p">(</span><span class="s">&#39;application&#39;</span><span class="p">,</span> <span class="s">&#39;zip&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">set_payload</span><span class="p">(</span><span class="n">zf</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'><span class="n">encoders</span><span class="o">.</span><span class="n">encode_base64</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
</span><span class='line'><span class="n">part</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;Content-Disposition&#39;</span><span class="p">,</span> <span class="s">&#39;attachment&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">filename</span><span class="o">=</span><span class="s">u&#39;{}.zip&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">file_name</span><span class="p">),</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="n">msg</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
</span><span class='line'><span class="c"># ....</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo pasar variable desde una vista a formulario en Django]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/21/como-pasar-variable-desde-una-vista-a-formulario-en-django/"/>
    <updated>2016-10-21T14:07:56-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/21/como-pasar-variable-desde-una-vista-a-formulario-en-django</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>views.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">MyCreateView</span><span class="p">(</span><span class="n">CreateView</span><span class="p">):</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="n">MyModel</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="s">&#39;myapp/my_form.html&#39;</span>
</span><span class='line'>    <span class="n">form_class</span> <span class="o">=</span> <span class="n">MyForm</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_form_kwargs</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">kwargs</span> <span class="o">=</span> <span class="nb">super</span><span class="p">(</span><span class="n">MyCreateView</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">get_form_kwargs</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># La variable que queremos pasar al formulario</span>
</span><span class='line'>        <span class="n">kwargs</span><span class="o">.</span><span class="n">update</span><span class="p">({</span><span class="s">&#39;current_user&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">user</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">kwargs</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>forms.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">MyForm</span><span class="p">(</span><span class="n">forms</span><span class="o">.</span><span class="n">ModelForm</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Recibir la variable y borrarla del listado de argumentos.</span>
</span><span class='line'>        <span class="n">current_user</span> <span class="o">=</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s">&#39;current_user&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">super</span><span class="p">(</span><span class="n">MyForm</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Albóndigas de lentejas]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/17/albondigas-de-lentejas/"/>
    <updated>2016-10-17T07:38:52-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/17/albondigas-de-lentejas</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas1.jpg"></p>

<!-- more -->


<p>Cocinar lentejas con cebolla y sal</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas2.jpg" width="300"></p>

<p>Licuar todo en una licuadora</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas3.jpg" width="300">
<img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas4.jpg" width="300"></p>

<p>Mezclar con huevos y migas de pan</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas5.jpg" width="300"></p>

<p>Fritar con aceite</p>

<p><img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas6.jpg" width="300">
<img class="center" src="http://blog.vero4ka.info/images/lentejas/lentejas7.jpg" width="300"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mierdero de las semanas]]></title>
    <link href="http://blog.vero4ka.info/blog/2016/10/07/mierdero-de-las-semanas/"/>
    <updated>2016-10-07T11:53:05-05:00</updated>
    <id>http://blog.vero4ka.info/blog/2016/10/07/mierdero-de-las-semanas</id>
    <content type="html"><![CDATA[<p>Bienvenidos al mierdero de las semanas:</p>

<table>
<thead>
<tr>
<th>Lenguaje                       </th>
<th>Sun  </th>
<th> Mon </th>
<th> Tue </th>
<th> Wed </th>
<th> Thu </th>
<th> Fri </th>
<th> Sat</th>
</tr>
</thead>
<tbody>
<tr>
<td>postgresql: <code>EXTRACT(DOW...)</code>  </td>
<td>  0  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6</td>
</tr>
<tr>
<td>ruby: <code>time.wday</code>              </td>
<td>  0  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6</td>
</tr>
<tr>
<td>Python: <code>isoweekday()</code>         </td>
<td>  7  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6</td>
</tr>
<tr>
<td>Python: <code>weekday()</code>            </td>
<td>  6  </td>
<td>  0  </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5</td>
</tr>
<tr>
<td>mysql: <code>DAYOFWEEK(...)</code>        </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6  </td>
<td>  7</td>
</tr>
<tr>
<td>Java: <code>DayOfWeek(...)</code>         </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6  </td>
<td>  7</td>
</tr>
<tr>
<td>Erlang: <code>day_of_the_week(...)</code> </td>
<td>  1  </td>
<td>  2  </td>
<td>  3  </td>
<td>  4  </td>
<td>  5  </td>
<td>  6  </td>
<td>  7</td>
</tr>
</tbody>
</table>


<p>Enlaces:</p>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html#function_dayofweek">mysql: function dayofweek</a></li>
<li><a href="https://www.postgresql.org/docs/current/static/functions-datetime.html">postgresql: function datetime</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html">java: function DayOfWeek</a></li>
<li><a href="http://erlang.org/doc/man/calendar.html">erlang calendar</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
